# RAML generated from EA at 2023.02.25 17:35:21
openapi: "3.0.0"
info:
  version: "3.5.0"  # build: 0007
  title: PrivátDoktor API
  description: "PrivátDoktor rendszer működéséhez szükséges API funkciók és struktúrák.<br><br>Minden hívás esetében Header-ben kötelező elemek:<ul><li>HTTP Header Authorization: Bearer &lt;access token string&gt;</li><li>HTTP Header x-api-version: &lt;n.n.n&gt;</li><li>HTTP Header x-client-version: &lt;Ax.x.x&gt; vagy &lt;Ix.x.x&gt; vagy &lt;Wx.x.x&gt; vagy &lt;Rx.x.x&gt;</li></ul><br><br>Válaszban Header-ben visszamegy:<br>ha a kérésbeli x-client-version érték már fent van a blacklist-en, akkor az adott kliens verzió érvényességi ideje<ul><li>HTTP Header x-privatdoktor-app-version-expire: &lt;ISOdate string&gt;</li></ul>"
  contact:
    name: apiteam@privatdoktor.hu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://www.privatdoktor.hu/API/terms
externalDocs:
  description: Tudjon meg többet a rendszerről
  url: http://www.privatdoktor.hu
servers:
  - url: 'http://localhost:3001'
  - url: 'https://prod.privatdoktor.hu/api'
tags:
  - name: OfficeManager
    description: Office Manager leggyakoribb feladataihoz szükséges funkciók
  - name: Team
    description: Csoportos mérésekkel kapcsolatos funkciók
  - name: Auth
    description: Autorizációval kapcsolatos funkciók
  - name: Jobs
    description: Háttér feladatokkal kapcsolatos funkciók
  - name: DoctorWeb
    description: Webes orvosi funkciók
  - name: GeneralDoctorWeb
    description: Webes meghatalmazott (kezelőorvosi) funkciók
  - name: PatientWeb
    description: Webes páciens funkciók
  - name: Analyses
    description: Orvosi kiértékelések kezelése
  - name: Bills
    description: Számla információk kezelése
  - name: Data
    description: Mérési adatok kezelése
  - name: Device
    description: Eszközök kezelése
  - name: Settings
    description: Felhasználói beállítások
  - name: Config
    description: Rendszer konfigurálási, telepítési sysadmin funkciók
  - name: Admin
    description: Üzemeltetési funkciók
  - name: CAdmin
    description: (Fejlesztés alatt - Kompetencia központi üzemeltetési funkciók)
  - name: Web
    description: Web böngészőn keresztül elérhető funkciók
  - name: Mobil
    description: Mobil alkalmazás funkciói
  - name: RPi
    description: Lokális adatgyűjtő (Raspberry PI) eszközzel kapcsolatos funkciók
  - name: Doctor
    description: Orvosi funkciók
  - name: GeneralDoctor
    description: Meghatalmazott (kezelőorvosi) funkciók
  - name: Feedback
    description: Visszajelzési (Technkai) funkciók
  - name: EESZT
    description: EESZT rendszerrel kapcsolatos funkciók
paths:
  /login:
    post:
      summary: Bejelentkezés
      description: Belépés névvel és jelszóval/tokennel.<br>Sikeres login esetén a válasz egy teljes User entitás. (A későbbi verziókban az ügyfél által el nem fogadott Szabályzatok listája is megy a válaszban. Ha van ilyen, akkor azt rögtön meg kell jeleníteni és ha az ügyfél kötelezőt nem fogad el belőle, akkor nem indulhat el az app.)<br>E mellett jön még az accessToken és a refreshToken. Az előbbit minden további API híváshoz kell használni (a HTTP Header Authorization mezőjében kötelezően át kell adni  Bearer ... formában); míg az utóbbit a /renewToken hívásnál, a token frissítésnél lehet felhasználni.<br>Ha a további funkciók hívásakor az accessToken (már) érvénytelen, akkor HTTP 401-es hibakódot adja vissza a szerver és a code='invalid_token'.<br>
      operationId: login
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/LoginReq"
              type: object
              properties:
                loginName:
                  type: string
                  description: Alap esetben a felhasználó mail címét kell tartalmazza, kivéve ha nincs mail elérése, hanem telefonszáma van csak, ahova lehet push üzenetet küldeni (pl. a regisztráció befejezéséhez szükséges aktivációs mail-hez hasonló értesítésként)
                password:
                  type: string
                loginCert:
                  type: string
                loginToken:
                  type: string
                language:
                  type: string
                activationCode:
                  type: string
                  description: Ha van megadva értéke, akkor a tényleges bejelentkezés előtt az adott azonosítójú felhasználó aktiválása is megtörténik, ha még nem aktív a felhasználó státusza és az aktiváló kód megfelelő
              required:
                - loginName
                - password
                  loginCert
                  loginToken
            examples:
              officer:
                value:
                  loginName: "officer@mail.hu"
                  password: "XXX"
              minta:
                value:
                  loginName: "teszt.eszter@mail.hu"
                  password: "XXX"
              telefonszámos minta:
                value:
                  loginName: "+36 20 444 9999"
                  password: "XXX"
              telefonszámos és aktiváló kódos minta:
                value:
                  loginName: "+36 20 444 9999"
                  password: "XXX"
                  activationCode: "81d0828e2cd2"
              teljes, de még csak részben működő:
                value:
                  loginName: "teszt.eszter@mail.hu"
                  password: "XXX"
                  loginCert: "string"
                  language: "hu"
      responses:
        '200': # OK
          $ref: '#/components/responses/LoginResp'
        '401': # Hibás bejelentkezés
          $ref: "#/components/responses/Error401"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Auth
        - Web
        - PatientWeb
        - Doctor
        - DoctorWeb
        - Mobil
        - RPi
        - OfficeManager
      x-responses:
        "409":
          #---
          "ERROR_INACTIVE_USER": "Az adott ügyfél nem aktív állapotú!"
        "401":
          #---
          "LOGIN_ERROR": "Sikertelen bejelentkezés!"
      x-implementation: "x-login"
      x-base-domain: User
  /logout:
    post:
      summary: Kijelentkezés
      description: Az aktuális user kijelentkezése a rendszerből.
      operationId: logout
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                externalCommandId:
                  description: Ha ki kell jelentkeztetni az EESZT rendszerből is, akkor az eesztLogin válaszában visszakapott (session) azonosító (opcionális paraméter)
                  type: integer
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - admin
            - sysadmin
      tags:
        - Auth
        - Web
        - Mobil
      x-base-domain: User
  /checkLoginName:
    get:
      summary: Bejelentkezési név ellenőrzése
      description: Bejelentkezési név, azaz a mail cím, ellenőrzése a rendszeren belüli foglaltság szempontjából.
      operationId: checkLoginName
      parameters:
        - in: query
          name: loginName
          description: Felhasználó (kívánt) azonosítója - egy érvényes mail cím
          required: true
          schema:
            type: string
      responses:
        '200': # OK
          $ref: "#/components/responses/CheckLoginNameResp"
        '406': # Nem elfogadható
          $ref: "#/components/responses/Error406"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
        - Web
        - Mobil
      x-base-domain: User
  /repeatRegistrationMail:
    post:
      summary: Ügyfél regisztrációs mail megismétlése
      description: Az ügyfél regisztráció végén kiküldött visszaigazolást kérő mail ismételt elküldése.<br>Ha az adott mail cím-mel kapcsolatban még mindig USER_REGWAIT állapot áll fenn, azaz az ügyfél elfelejtett visszajelezni, vagy az érvényességi időn kívül jelzett vissza, akkor ezzel a funkcióval kérhet egy újabb, érvényes aktivációs linket tartalmazó mail-t.
      operationId: repeateRegistrationMail
      parameters:
        - in: query
          name: loginName
          description: Felhasználó regisztrációkor megadott bejelentkezési azonosítója, azaz egy érvényes mail cím
          required: true
          schema:
            type: string
        - in: query
          name: GUID
          description: Az (elavult) aktivációs mail-beli link GUID, ami alapján ki kell küldeni ismét egy új aktiváló levelet az eredeti mail címre
          required: true
          schema:
            type: string
      responses:
        '200': # OK, regisztráció aktiválási mail ismét kiküldve
          description: OK, regisztráció aktiválási mail ismét kiküldve
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Auth
        - Web
        - Mobil
      x-responses:
        "406":
          "PARAMETER_ERROR": "Hiányzó paraméter!"
          "GUID_NOT_FOUND": "A megadott GUID nem található a rendszerben!"
          "USER_NOT_FOUND": "A megadott mail cím nem található a rendszerben!"
          "USER_STATUS_ERROR": "Ez az ügyfél már nem a regisztráció aktiválásra várakozik!"
      x-base-domain: User
  /getCity:
    get:
      summary: Helységnév lekérése
      description: Helységnév lekérése irányítószám alapján. (Pl. a felhasználó címe ennek segítségével lehet kiválasztható.)
      operationId: getCityByPostalCode
      parameters:
        - in: query
          name: postalCode
          description: Irányítószám
          required: true
          schema:
            type: string
      responses:
        '200': # OK
          $ref: "#/components/responses/CityResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Auth
        - Web
        - Mobil
      x-implementation:
        "const res = {\"cityName\":\"Budapest\", \"postalCode\": postalCode};
    <br>
    return res;"
      x-base-domain: Dictionary
  /changePassword:
    post:
      summary: Jelszó csere
      description: Jelszó változtatás (Csak bejelentkezett felhasználó futtathatja)
      operationId: changePassword
      requestBody:
        #$ref: "#/components/requestBodies/ChangePasswordReq"
        content:
          'application/json':
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - cadmin
            - admin
            - sysadmin
      tags:
        - Auth
        - Settings
        - Web
        - Mobil
      x-implementation:
        "return { 'statusCode': '200', 'name':'Info',  'message' : 'Password changed, but not in Keycloak', code: 'ABORTED'};"
      x-responses:
        "406":
          "ABORTED": "Az aktuális ügyfélnek nincs joga jelszót cserélni!"
        "409":
          "PASSWORD_CONFLICT": "A jelszó cseréje sikertelen!"
      x-base-domain: User
  /forgotPassword:
    post:
      summary: Elfelejtett jelszó küldése
      description: Elfelejtett jelszó miatt új jelszó kérése.<br>A rendszer egy ellenőrző GUID kódot tartalmazó mail-t küld el a megadott mail címre, ha az a rendszerben egy ténylegesen már regisztrált felhasználóé. A mail-ben lévő egyedi linkre kattintva, az deep link-ként értelmeződik és a felhasználónak lehetősége van begépelni az új jelszót, amit a kliens app (vagy a web böngésző Ajax-os funkciója) felküldhet a szervernek a /feedback/forgotPassword/{guid} egyedi és csak adott ideig évényes url-ű kérésben.
      operationId: forgotPassword
      requestBody:
        #$ref: "#/components/requestBodies/ForgotPasswordReq"
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                language:
                  type: string
                  description: Nyelv (hu, en, ch, ...)
              required:
                - email
      responses:
        '200': # OK
          $ref: "#/components/responses/ForgotPasswordResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Auth
        - Web
        - Mobil
      x-responses:
        "406":
          "MAILADDRESS_NOT_FOUND": "Ilyen mail címmel nincs a rendszerben felhasználó!"
          "TOO_MUCH_REQUESTS": "Túl sok folyamatban lévő elfelejtett jelszó kérés van kezdeményezve!"
      x-base-domain: User
  /registerUser:
    post:
      summary: Ügyfél regisztráció kezdeményezése
      description: Új ügyfél felvétele a rendszerbe.<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott címre és csak akkor tud majd bejelentkezni a felhasználó a rendszerbe, ha arra a linkre rákattintott.<br>(A regisztrációs folyamat során a felhasználónak megmutatandó elfogadandó szabályzatokat (Terms) külön hívással kell elkérni a szerver oldaltól.)
      operationId: registerUser
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/UserRegistrationReq"
              type: object
              allOf:
                - $ref: "#/components/schemas/User"
                - properties:
                    password:
                      type: string
                      description: A felhasználó jelszava
                    acceptTermIds:
                      description: A felhasználó által elfogadott szabályzatok
                      type: array
                      items:
                        type: integer
              required:
                - firstName
                - lastName
                - email
                - language
                - postalCode
                - city
                - address
                - birthYear
                - birthPlace
                - motherName
                - gender
                - password
                - acceptTermIds
            examples:
              mail címes minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  acceptTermIds: [1,2]
              telefon számos minta1:
                value:
                  email: "+36 20 444 9999"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  acceptTermIds: [1,2]
              telefon számos minta2:
                value:
                  email: "teefon:+36 20-444-9999"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  acceptTermIds: [1,2]
      responses:
        '200': # OK, felhasználó sikeresen regisztrálva
          $ref: "#/components/schemas/User"
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
        - Web
        - Mobil
        - OfficeManager
      x-responses:
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "Az adatok változtatása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /checkInviteUserRegistration:
    post:
      summary: Meghívandó Ügyfél ellenőrzése
      description: Annak ellenőrzése, hogy ha a Háziorvos általi meghívással fog bekerülni egy új ügyfél, akkor a felvétele (előregisztrációja) sikeres lesz-e a rendszerbe.
      operationId: checkInviteRegisterUser
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
            examples:
              TAJszám minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  socialSecurityNumber: "111222111"
              Útlevél minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  identityType: "PASSPORT"
                  identityNumber: "BX 123456"
      responses:
        '200': # ilyen adatokkal már létező user
          $ref: "#/components/schemas/User"
        '409': # Sikertelen lesz az előregisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Auth
        - Web
      x-responses:
        "409":
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen lesz, már van ilyen email cím a rendszerben!"
          "SOCIALNUMBER_EXISTS_YET": "A user regisztrálása sikertelen lesz, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /inviteUserRegistration:
    post:
      summary: Meghívott Ügyfél előregisztráció kezdeményezése
      description: Háziorvos általi meghívás miatti új ügyfél felvétele (előregisztrációja) a rendszerbe (és a kötelező jelszó csere beállítása nála).<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott páciens címére és csak akkor tud majd bejelentkezni a felhasználó a rendszerbe, ha arra a linkre rákattintott.
      operationId: inviteRegisterUser
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/InviteUserRegistrationReq"
              type: object
              allOf:
                - $ref: "#/components/schemas/User"
                - properties:
                    password:
                      type: string
                      description: A felhasználó jelszava
                    acceptTermIds:
                      description: A felhasználó által elfogadott szabályzatok
                      type: array
                      items:
                        type: integer
                    groupCode:
                      description: Melyik csoportba kerüljön bele az ügyfél (pl. GROUP_OKFO_PATIENT)
                      type: string
              required:
                - firstName
                - lastName
                - email
                - language
                - postalCode
                - city
                - address
                - birthYear
                - birthMonth
                - birthDay
                - birthPlace
                - motherName
                - gender
                - password
                - acceptTermIds
                - groupCode
            examples:
              minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  acceptTermIds: [1,2]
      responses:
        '200': # OK, felhasználó sikeresen regisztrálva
          $ref: "#/components/schemas/User"
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Auth
        - Web
      x-responses:
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /changeEesztUploadable/{patientId}:
    post:
      summary: Páciens Eeszt feltöltendőség változtatása
      description: Annak az ügyfél beállításnak a megváltoztatása, ami meghatározza, hogy az adott orvos viszonylatában fel kell-e tölteni a páciens adatait az Eeszt rendszerbe
      operationId: changePatientEesztUploadable
      parameters:
        - in: path
          name: patientId
          description: Melyik páciensnél kell megváltoztatni az eesztUploadable mezőjét
          required: true
          schema:
            type: number
        - in: query
          name: newValue
          description: Milyen értékre kell beállítani a user eesztUploadable mezőt
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/User"
                  - properties:
                      eesztUploadable:
                        type: boolean
                        description: Annak az ügyfél beállításnak az értéke, ami meghatározza, hogy az adott orvos viszonylatában fel kell-e tölteni a páciens adatait az Eeszt rendszerbe
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Auth
        - Web
  /registerUserAndOrder:
    post:
      summary: Ügyfél regisztráció és megrendelés
      description: "Új ügyfél felvétele a rendszerbe és (késleltetett) megrendelés rögzítése. (Webshop felől használható!)<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott címre és csak akkor tud majd bejelentkezni a felhasználó a rendszerbe, ha arra a linkre rákattintott. Az eszközök és szolgáltatások megrendelésének rögzítése majd csak a visszaigazoló linkre kattintás után jut érvényre!<br>(A regisztrációs folyamat során a felhasználónak megmutatandó elfogadandó szabályzatokat (Terms) külön hívással kell előre elkérni a szerver oldaltól, hogy a kötelezők elfogadásáról szóló információ már ebbe a hívásba bekerülhessen.)<br><i>Éles verzióban: a bemenő paraméter json egyedi kulccsal titkosított formában kell legyen, hogy a WEBserver alkalmazás nélküli, egyszerű REST api hívással ne lehessen pillanatok alatt lefoglalni a teljes eszköz készletet!</i>"
      deprecated: true
      operationId: registerUserAndOrder
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/UserRegistrationAndOrderReq"
              type: object
              properties:
                data:
                  allOf:
                    - $ref: "#/components/schemas/User"
                    - properties:
                        password:
                          type: string
                          description: A felhasználó jelszava
                        acceptTermIds:
                          description: A felhasználó által elfogadott szabályzatok
                          type: array
                          items:
                            type: integer
                        deviceType:
                          type: string
                          description: megrendelt mérőeszköz típusa (pl. BT_BERRY_BM1000B)
                        deviceColor:
                          type: string
                          description: megrendelt mérőeszköz(ök) színe
                        deviceQuantity:
                          type: integer
                          description: megrendelt mérőeszköz(ök) mennyisége
                        userCount:
                          type: integer
                          description: megrendelt szolgáltatáshoz tartozó user-ek darabszáma
                        validity:
                          type: integer
                          description: megrendelt szolgáltatás hossza hónapokban
                        price:
                          type: integer
                          description: megrendelt szolgáltatás nettó egységára
              required:
                - data
                - firstName
                - lastName
                - email
                - language
                - postalCode
                - city
                - address
                - birthYear
                - birthPlace
                - motherName
                - gender
                - password
                - acceptTermIds
                - deviceType
                - deviceQuantity
                - userCount
                - validity
                - price
            examples:
              minta:
                value:
                  data:
                    email: "teszt.eszter@mail.hu"
                    password: "password123"
                    lastName: "Teszt"
                    firstName: "Eszter"
                    birthYear: 1990
                    birthPlace: "Budapest"
                    motherName: "Kovács Aranka"
                    gender: "DICT_FEMALE"
                    phoneNumber: "06201112233"
                    postalCode: "1110"
                    city: "Budapest"
                    address: "Kő u. 1."
                    socialSecurityNumber: "111222111"
                    language: "hu"
                    acceptTermIds: [1,2]
                    deviceType: "BT_BERRY_BM1000B"
                    deviceColor: "GREY"
                    deviceQuantity: 3
                    userCount: 4
                    validity: 6
                    price: 23606
      responses:
        '200': # OK
          description: OK, felhasználó sikeresen regisztrálva
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
        - Web
      x-responses:
        "406":
          "PARAMETER_ERROR": "Hiányzik a data paraméter!"
          #---
          "NOT_ENOUGH_DEVICE": "Az adott típusú és színű ezközből nincs készleten elegendő, ezért a megrendelés sikertelen!"
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "Az adatok változtatása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /registerUserAndEncOrder:
    post:
      summary: Ügyfél regisztráció és titkosított megrendelés
      description: Új ügyfél felvétele a rendszerbe és (késleltetett) megrendelés rögzítése, a megrendelés adatok titkosítva, hogy rosszindulatú hívás esetén lehetőleg ne lehessen befoglalni a teljes eszköz készletet. (Webshop felől használható!)<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott címre és csak akkor tud majd bejelentkezni a felhasználó a rendszerbe, ha arra a linkre rákattintott. Az eszközök és szolgáltatások megrendelésének rögzítése majd csak a visszaigazoló linkre kattintás után jut érvényre!<br>(A regisztrációs folyamat során a felhasználónak megmutatandó elfogadandó szabályzatokat (Terms) külön hívással kell előre elkérni a szerver oldaltól, hogy a kötelezők elfogadásáról szóló információ már ebbe a hívásba bekerülhessen.)
      operationId: registerUserAndEncOrder
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/UserRegistrationAndEncOrderReq"
              type: object
              allOf:
                - $ref: "#/components/schemas/User"
                - properties:
                    password:
                      type: string
                      description: A felhasználó jelszava
                    acceptTermIds:
                      description: A felhasználó által elfogadott szabályzatok
                      type: array
                      items:
                        type: integer
                    data:
                      type: string
                      description: "A megrendelés adatai titkosított formában (pl. 'devicetype=BT_ROCHE_GLUCOSE&color=none&quantity=2&user=1&validity=3&price=9990' titkosítva)"
                      #properties:
                      #  deviceType:
                      #    type: string
                      #    description: megrendelt mérőeszköz típusa (pl. BT_BERRY_BM1000B)
                      #  deviceColor:
                      #    type: string
                      #    description: megrendelt mérőeszköz(ök) színe - opcionális
                      #  deviceQuantity:
                      #    type: integer
                      #    description: megrendelt mérőeszköz(ök) mennyisége
                      #  userCount:
                      #    type: integer
                      #    description: megrendelt szolgáltatáshoz tartozó user-ek darabszáma
                      #  validity:
                      #    type: integer
                      #    description: megrendelt szolgáltatás hossza hónapokban
                      #  price:
                      #    type: integer
                      #    description: megrendelt szolgáltatás nettó egységára
              required:
                - data
                - firstName
                - lastName
                - email
                - language
                - postalCode
                - city
                - address
                - birthYear
                - birthPlace
                - motherName
                - gender
                - password
                - acceptTermIds
            examples:
              minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  acceptTermIds: [1,2]
                  data: "e1234...." #pl. devicetype=BT_BERRY_BM1000B&color=grey&quantity=300&user=1&validity=3&price=23606
      responses:
        '200':
          description: OK, a felhasználó sikeresen regisztrálva, a késleltetett megrendelésről a válasz struktúra szól
          content:
            'application/json':
              schema:
                type: object
                properties:
                  userRegOk:
                    type: boolean
                    description: a felhasználó regisztráció sikeresen lezajlott-e
                  orderOk:
                    type: boolean
                    description: a késleltetett megrendelés rögzítése sikeresen lezajlott-e (ami majd a feedback után fog aktivizálódni)
                  userId:
                    type: integer
                    description: a regisztrált user egyedi azonosítója
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
        - Web
      x-responses:
        "406":
          "ORDER_DATA_ABSENT": "A megrendelésre vonatkozó adatok hiányoznak!"
          "ENCRYPTION_ERROR": "Belső hiba! A megrendelés dekódolása hibásan történt meg, a regsztráció és a megrendelés sem történt meg!"
          #---
          "NOT_ENOUGH_DEVICE": "Az adott típusú és színű ezközből nincs készleten elegendő, ezért a megrendelés sikertelen!"
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "Az adatok változtatása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /getUserQR:
    get:
      summary: Ügyfél QR kódjának lekérése
      description: Az aktuális ügyfél egyszerű azonosítása érdekében használható QR kód lekérése. (Pl. hogy az eszköz kiadás könnyen elvégezhető legyen)
      operationId: getUserQR
      responses:
        '200': # OK
          $ref: "#/components/responses/QrCodeResp"
        '401': # Jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Mobil
  /unregisterUser:
    post:
      summary: Aktuális user regisztráció megszüntetése
      description: Az aktuálisan bejelentkezett felhasználó regisztrációjának megszüntetése. (A felhasználó deperszonalizált, inaktív állapotra állítása és nem pedig törlése! A tényleges törlés 30 nap múlva fog megtörténni.)
      operationId: unregisterUser
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
      responses:
        '200': # OK
          description: OK, felhasználó sikeresen deregisztrálva
        '400': # Sikertelen deregisztráció
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Mobil
        - Web
      x-responses:
        "406":
          "ABORTED": "Ez az ügyfél nem végezheti el a deregisztrálást!"
        "409":
          "PASSWORD_CONFLICT": "A felhasználó deregisztrálása sikertelen!"
          #---
          "USER_NOT_FOUND": "Az adott ügyfél nem található a rendszerben!"
          "DEPERSONALIZATION_CONFLICT": "A felhasználó deregisztrálása sikertelen!"
      x-base-domain: User
  /hasUserRole:
    post:
      summary: Ügyfél szerepkör lekérése
      description: Annak lekérdezése, hogy az aktuális user-nek van-e az adott szerepkörhöz joga
      operationId: hasUserRole
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: "Melyik szerepkörre vonatkozik a lekérdezés (pl: user, officer, doctor, stb.)"
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: boolean
                description: True az értéke, ha van ilyen szerepköre az aktuális user-nek
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - admin
            - sysadmin
            - doctor
            - gdoctor
            - officer
      tags:
        - Auth
        - Mobil
        - Web
  /isTokenValid:
    put:
      summary: Token ellenőrzés
      description: "Technikai funkció: a refreshToken érvényességének ellenőrzése. Annak érdekében, pl. hogy amikor a kliens oldalon az applikáció háttérben rakott állapotból feléled, akkor tudja, hogy mehet tovább a futása a háttérbe kerülés pillanatában lévő állapotából, vagy pedig már olyan régóta a háttérbe került, hogy biztonsági okok miatt ismét be kell jelentkeztetnie a felhasználót a login képernyőn keresztül "
      operationId: isTokenValid
      requestBody:
        #$ref: "#/components/requestBodies/RenewReq"
        content:
          'application/json':
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200': # OK, token aktív
          description: OK, token aktív
        '406': # A token nem aktív, vagy nem található
          $ref: "#/components/responses/Error406"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
      x-responses:
        "406":
          "REFRESH_TOKEN_EXPIRED": "A refresh token érvényessége lejárt!"
          "REFRESH_TOKEN_ERROR": "A refresh token hibás!"
  /renewToken:
    post:
      summary: Token megújítás
      description: "Technikai funkció: biztonsági okok miatt, mivel a loginnál kiadott accessToken-nel zajlik lényegében az összes kérésnél a hitelesítés, de az érvényessége rövid (5 perc), ezért szükség van egy megújítási lehetőségre a refreshToken használatával. Ha a hívás sikertelen, akkor már a refreshToken érvényessége is lejárt, ezért a kliens oldalon kötelezően újra be kell léptetni a felhasználót."
      operationId: renewToken
      requestBody:
        #$ref: "#/components/requestBodies/RenewReq"
        content:
          'application/json':
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200': # OK, token megújítva
          $ref: "#/components/responses/RenewResp"
        '406': # A refresh token nem megfelelő vagy (már) érvénytelen
          $ref: "#/components/responses/Error406"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
        - Web
        - Mobil
        - RPi
      x-responses:
        "406":
          "REFRESH_TOKEN_EXPIRED": "A refresh token érvényessége lejárt!"
          "REFRESH_TOKEN_ERROR": "A refresh token hibás!"
  /getGeneralDoctorByMail:
    post:
      summary: Kezelőorvos keresése mail cím alapján
      description: Adott mail című, a rendszerben már regisztrált kezelőorvos keresése, hogy egyszerűbb legyen a meghívó páciens számára a beazonosítás.<br>
      operationId: getGeneralDoctorByMail
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  description: A keresett kezelőorvos mail címe
                  type: string
              required:
                - email
      responses:
        '200': # OK
          $ref: "#/components/responses/GeneralDoctorResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Web
        - Mobil
        - GeneralDoctor
      x-responses:
        "404":
          "NOT_FOUND": "Ilyen mail című ügyfél nem taláélható a rendszerben!"
          "NOT_GENERAL_DOCTOR": "Az adott ügyfél nem meghatalmazott!"
  /inviteGeneralDoctor:
    post:
      summary: Kezelőorvos meghívása
      description: Az aktuális ügyfél meghívhatja a kezelőorvosát (háziorvosát), hogy a rendszerben tárolt mérési adatait és azok kiértékelésit az orvos megtekinthesse.<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott kezelőorvosi mail címre, amin keresztül tud kezelőorvosként regisztrálni az orvos a rendszerbe.<br>A meghívás kiküldése előtt a felhasználónak el kell fogadnia azokat a szabályzatokat, amik az ügyfél adatainak orvossal megosztását engedélyezik.
      operationId: inviteGeneralDoctor
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/InviteGeneralDoctorReq"
              type: object
              properties:
                email:
                  type: string
                  description: A meghívott kezelőorvos mail címe
                firstName:
                  description: A meghívott kezelőorvos keresztneve
                  type: string
                lastName:
                  description: A meghívott kezelőorvos vezetékneve
                  type: string
                comment:
                  description: A meghívott kezelőorvos ügyfél szerinti elnevezése
                  type: string
              required:
                - firstName
                - lastName
                - email
            examples:
              minta:
                value:
                  firstName: "Orvos"
                  lastName: "Házi"
                  email: "general.doctor@mail.hu"
                  comment: "Az a szívgyógyász, aki a János kórházban műtött"
      responses:
        '200': # OK
          description: OK, a meghívó sikeresen kiküldve (a kezelőorvos előregisztráció megtörtént)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Web
        - Mobil
        - GeneralDoctor
      x-responses:
        "406":
          "ERROR_SELF_INVITING": "Önmagát nem hatalmazhatja meg!"
          "PATIENT_GDOCTOR_CONNECTED_YET": "Ez a meghatalmazás már létezik!"
          "TOO_MUCH_REQUESTS": "Túl sok meghatalmazása van folyamatban!"
      x-base-domain: User
  /revokeGeneralDoctor/{doctorId}:
    post:
      summary: Kezelőorvossal kapcsolat visszavonása
      description: Az adott kezelőorvossal a páciens kapcsolatának visszavonása, hogy a továbbiakban már ne láthassa ennek a páciensnek a mérési adatait és a kiértékeléseit.
      deprecated: true
      operationId: revokeGeneralDoctor
      parameters:
        - in: path
          name: doctorId
          description: annak a kezelőorvosnak a userId-je, akivel a kapcsolatot vissza kell vonni
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: OK, a kezelőorvossal a kapcsolat megszüntetve (az orvos erről értesítve)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Web
        - Mobil
        - GeneralDoctor
      x-responses:
        "404":
          "NOT_FOUND": "Nem található ez a meghívás!"
        "406":
          #---
          "PATIENT_GDOCTOR_CONNECTION_NOT_FOUND": "Nincs meghatalmazotti kapcsolat a két ügyfél között!"
          "EMAIL_ERROR": "Vagy a meghatalmazott azonosítóját vagy a mail címét meg kell adni!"
      x-base-domain: User
  /revokeGeneralDoctor2:
    post:
      summary: Kezelőorvossal kapcsolat visszavonása
      description: Az adott kezelőorvossal a páciens kapcsolatának visszavonása, hogy a továbbiakban már ne láthassa ennek a páciensnek a mérési adatait és a kiértékeléseit.
      operationId: revokeGeneralDoctor2
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                doctorId:
                  description: annak a kezelőorvosnak a userId-je, akivel a kapcsolatot vissza kell vonni
                  type: integer
                email:
                  description: annak a kezelőorvosnak a mail címe, akivel a kapcsolatot vissza kell vonni
                  type: string
      responses:
        '200': # OK
          description: OK, a kezelőorvossal a kapcsolat megszüntetve (az orvos erről értesítve)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Web
        - Mobil
        - GeneralDoctor
      x-responses:
        "404":
          "NOT_FOUND": "Nem található ez a meghívás!"
        "406":
          #---
          "PATIENT_GDOCTOR_CONNECTION_NOT_FOUND": "Nincs meghatalmazotti kapcsolat a két ügyfél között!"
          "EMAIL_ERROR": "Vagy a meghatalmazott azonosítóját vagy a mail címét meg kell adni!"
      x-base-domain: User
  /revokeGeneralDoctorByMail:
    post:
      summary: Kezelőorvossal kapcsolat visszavonása mail cím alapján
      description: Az adott mail című kezelőorvossal a páciens kapcsolatának visszavonása, hogy a továbbiakban már ne láthassa ennek a páciensnek a mérési adatait és a kiértékeléseit.
      operationId: revokeGeneralDoctorByMail
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  description: annak a kezelőorvosnak a mail címe, akivel a kapcsolatot vissza kell vonni
                  type: string
              required:
                - email
      responses:
        '200': # OK
          description: OK, a kezelőorvossal a kapcsolat megszüntetve (az orvos erről értesítve)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Web
        - Mobil
        - GeneralDoctor
      x-responses:
        "404":
          "NOT_FOUND": "Nem található ez a meghívás!"
        "406":
          #---
          "PATIENT_GDOCTOR_CONNECTION_NOT_FOUND": "Nincs meghatalmazotti kapcsolat a két ügyfél között!"
          "EMAIL_ERROR": "Vagy a meghatalmazott azonosítóját vagy a mail címét meg kell adni!"
      x-base-domain: User
  /getMyGeneralDoctors:
    get:
      summary: Kezelőorvosaim lekérése
      description: Az aktuális user kezelőorvosainak lekérése.
      operationId: getMyGeneralDoctors
      responses:
        '200': # OK
          $ref: "#/components/responses/DoctorListResp"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Auth
        - Web
        - Mobil
        - GeneralDoctor
      x-base-domain: User
  /getUserStatus:
    post:
      summary: User státusz lekérése
      description: Az adott user státuszának és userId-jének lekérése. Csak akkor adja vissza az információkat, ha a login adatok helyesek.<br>(Az aktivációs kód kiküldése előtt kell a státuszt ellenőriztetni és a userId-t lekérni, mert csak annak ismeretében lehet push üzenetet küldetni.)
      operationId: getUserStatus
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                loginName:
                  type: string
                  description: Alap esetben a felhasználó mail címét kell tartalmazza, kivéve ha nincs mail elérése, hanem telefonszáma van csak, ahova lehet push üzenetet küldeni (pl. a regisztráció befejezéséhez szükséges aktivációs mail-hez hasonló értesítésként)
                password:
                  type: string
              required:
                - loginName
                - password
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    description: Ha a megadott bejelentkezési adatok stimmeltek, akkor az adott user azonosítója, egyébként üres
                  userStatus:
                    type: string
                    description: "Ha a megadott bejelentkezési adatok stimmeltek, akkor az adott felhasználó állapotát jelző szótárkód (pl: REGWAIT, ACTIVE, UNREGISTERED), egyébként üres"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Auth
        - Web
        - Mobil
  /sendActivationMessage:
    post:
      summary: Aktivációs üzenet kiküldése
      description: Az adott user számára az aktivációs kód kiküldése push üzenetként, hogy a következő login alkalmával aktiválhassa magát a user a segítségével.
      operationId: sendActivationMessage
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: Melyik user-nek menjen az aktivációs üzenet
                externalUserId:
                  type: string
                  description: "A címzett user push rendszerbeli externalUserId-je (formátuma: pd-XXXX-aestitkosítottrész)"
              required:
                - userId
                - externalUserId
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Auth
        - Web
        - Mobil
  /proxyCheck:
    get:
      summary: Proxy életjel
      description: Technikai funkció, amit az automatikus architektúra felügyelet használ és rendszeresen (pl. percenként) hívogatja annak érdekében, hogy a proxy rendszer automatikusan érzékelni tudja, ha egyetlen API szerver sincs üzemképes állapotban.<br>Ha működőképes az adott API szerver, akkor 200 OK-val tér vissza.
      operationId: proxyCheck
      parameters:
        - in: query
          name: isDeep
          description: Ha értéke true, akkor az ellenőrzés során megszólítja az authentikációs szervert és az adatbázist is
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                properties:
                  greeting:
                    type: string
                    description: standard válasz szöveg
                  time1:
                    type: string
                    description: authentikációs válaszidő másodpercben
                  time2:
                    type: string
                    description: adatbázis válaszidő másodpercben

        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      tags:
        - Auth
        - Web
      x-implementation:
        "return { greeting: \"PrivatDoktor API server running succesfully.\" };"
  /profile:
    get:
      summary: Profil adatok lekérése
      description: A bejelentkezett felhasználó profil adatainak lekérdezése.
      operationId: getProfile
      responses:
        '200': # OK
          description: Az adott felhasználó adatai
          content:
            'application/json':
              schema:
                type: object
                properties:
                  user:
                    # ehelyett $ref: "#/components/responses/UserResp" ide be kellett másolni a kifejtését
                    $ref: '#/components/schemas/User'
                  teamGroups:
                    description: "Melyik team-ekbe tartozik bele a QR által meghatározott ügyfél"
                    type: array
                    items:
                      type: object
                      properties:
                        teamCode:
                          description: a team kódja
                          type: string
                        teamName:
                          description: a team megnevezése
                          type: string
                        teamRole:
                          description: a team-en belüli szerepkör
                          type: string
                required:
                  - user
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
            - cadmin
      tags:
        - Settings
        - Mobil
        - Web
    put:
      summary: Profil adatok mentése
      description: A bejelentkezett felhasználó profil adatainak módosítása. (de a mail címet nem lehet ezzel megváltoztatni!)<br>Ha az alapértelmezett fizetési periódus megváltozik az eddigiekhez képest, akkor ennek az ügyfélnek az összes(!) aktív megrendelésében is átáll az új értékre a fizetési periódus!
      operationId: setProfile
      requestBody:
        #$ref: "#/components/requestBodies/UserReq"
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
            examples:
              minta:
                value:
                  firstName: "Eszter"
                  lastName: "Teszt"
                  language: ""
                  postalCode: 1102
                  city: "Budapest"
                  address: "Teszt u. 1."
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_MALE"
                  defaultFeePeriod: 3
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
            - cadmin
      tags:
        - Settings
        - Mobil
        - Web
      x-responses:
        "406":
          "PAYMENTINTERVAL_MISMATCH": "Mivel van érvényes adatletöltés szolgáltatása az ügyfélnek, ezért a fizetési gyakoriság csak aszerinti lehet!"
        "409":
          "USER_UNREGISTERED": "A törölt user adatainak változtatása nem engedélyezett!"
          "MAIL_CONFLICT": "A user adatok módosítása sikertelen, a mail cím ezzel a funkcióval nem változtatható!"
          #---
          "USER_ID_CONFLICT": "A user adatok módosítása sikertelen, már van ilyem mail cím!"
          "DATA_CONFLICT": "A felhasználói adatok módosítása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "Az adatok változtatása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
  /profile/changeMail:
    put:
      summary: Mail cím megváltoztatás kezdeményezése
      description: A bejelentkezett felhasználó mail cím változtatásának kezdeményezése. Figyelmeztető mail-t küld a régi mail címre, és aktivációs mail-t az új mail címre. Majd csak akkor fog ténylegesen megváltozni a mail cím, ha az új címre küldött aktivációs linkre rákattint az ügyfél!
      operationId: changeMail
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                oldMail:
                  type: string
                newMail:
                  type: string
                password:
                  type: string
        description: A mail cím változtatáshoz szükséges adatok
        required: true
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
            - cadmin
      tags:
        - Settings
        - Mobil
        - Web
      x-responses:
        "409":
          "USER_UNREGISTERED": "A törölt user adatainak változtatása nem engedélyezett!"
          "MAIL_NOT_CHANGED": "A mail cím nem változott!"
          "OLD_MAIL_ERROR": "Az aktuális mail cím hibás!"
          "USER_ID_CONFLICT": "A user adatok módosítása sikertelen, már van ilyem mail cím!"
          "PASSWORD_CONFLICT": "A felhasználó jelszava nem megfelelő!"
          #---
          "INVALID_MAIL": "Hibás mail cím!"
  /profile/getAlarmLevel:
    get:
      summary: Kiértékelési értesítési szint lekérdezése
      description: Az ügyfélnek szóló kiértékelési értesítő mely riasztási típusok esetén keletkezzen.
      operationId: getAlarmLevel
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  alarms:
                    type: array
                    description: A kiértékelés értesítés mely riasztási típusoknál történik meg
                    items:
                      type: string
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Settings
        - Mobil
        - Web
  /profile/setAlarmLevel:
    put:
      summary: Kiértékelési értesítési szint beállítása
      description: Ezzel a funkcióval lehet beállítani, hogy ha keletkezik kiértékelés az ügyfél valamely mérésével kapcsolatban, akkor milyen riasztási szintnél küldjön üzenetet (mail-t) erről a rendszer.
      operationId: setAlarmLevel
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                alarms:
                  description: "Azoknak a riasztási típusoknak a listája (pl: ['ALARM_HIGH','ALARM_URGENT'], amik publikussá válásakor küldjön a rendszer az ügyfél számára (mail) üzenetet. Ha mindre, akkor 'ALL' értéket kell megadni."
                  type: array
                  items:
                    type: string
              required:
                - alarms
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Settings
        - Mobil
        - Web
        - Auth
  /profile/counter:
    get:
      summary: Ügyfél saját számláló lekérdezése
      description: Az aktuális ügyfél saját számláló (pl. ABSENT_USERDATA_WARNING) értékének lekérése
      operationId: getUserCounter
      parameters:
        - in: query
          name: counterCode
          description: A lekérdezett ügyfél saját számláló azonosítója
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  value:
                    type: number
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
      tags:
        - Settings
        - Mobil
        - Web
      x-responses:
        "404":
          "NOT_FOUND": "Ilyen azonosítójú rendszer számláló nem található!"
        "409":
          "COUNTER_VALUE_ERROR": "Hiba a számláló értékében, nem konvertálható numerikus értékké!"
    post:
      summary: Ügyfél saját számláló értékének beállítása
      description: Az aktuális ügyfélhez a saját számlálójába (pl. ABSENT_USERDATA_WARNING) új érték letárolása
      operationId: setUserCounter
      parameters:
        - in: query
          name: counterCode
          description: A beállítandó ügyfél saját számláló azonosítója
          required: true
          schema:
            type: string
        - in: query
          name: value
          description: A letárolandó számláló érték
          required: true
          schema:
            type: number
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  value:
                    type: number
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
      tags:
        - Settings
        - Mobil
        - Web
  /profile/userParam:
    get:
      summary: Ügyfél saját paraméter lekérdezése
      description: Az aktuális ügyfél saját user paraméter értékének lekérése
      operationId: getUserParam
      parameters:
        - in: query
          name: parameterCode
          description: A lekérdezett ügyfél saját user paraméter azonosítója
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  parameterCode:
                    description: Az adott user paraméter azonosító kódja
                    type: string
                  value:
                    description: Az adott user paraméter értéke
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Settings
        - Mobil
        - Web
      x-responses:
        "404":
          "NOT_FOUND": "Ilyen azonosítójú user paraméter nem található!"
    post:
      summary: Ügyfél saját paraméter értékének beállítása
      description: Az aktuális ügyfél saját user paramétereként az új érték letárolása
      operationId: setUserParam
      parameters:
        - in: query
          name: parameterCode
          description: A beállítandó ügyfél saját user paraméter azonosítója kódja
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                value:
                  description: Az adott user paraméter értéke
                  type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  parameterCode:
                    description: Az adott user paraméter azonosító kódja
                    type: string
                  value:
                    description: Az adott user paraméter értéke (rövid érték, max 50 karakter)
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Settings
        - Mobil
        - Web
  /terms:
    get:
      summary: Ügyfél szabályzat állapotok lekérése
      description: Annak lekérése, hogy az aktuálisan bejelentkezett ügyfél milyen szabályzatokat fogadott el és mikor, illetve ven-e frissebb szabályzat verzió, amit el kellene fogadnia.
      operationId: getUserTermStatus
      responses:
        '200': # OK
          $ref: "#/components/responses/UserTermStatusResp"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
            - cadmin
            - sysadmin
      tags:
        - Settings
        - Mobil
        - Web
    put:
      summary: Ügyfél szabályzat állapotok megváltoztatása
      description: Az aktuálisan bejelentkezett ügyfél által elfogadott ill. visszavont szabályzatok állapotának megváltoztatása.
      operationId: setUserTermStatus
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/SetUserTermStatusReq"
              type: object
              properties:
                acceptTermIds:
                  description: mely szabályzatok legyenek elfogadottra állítva az adott ügyfélnél
                  type: array
                  items:
                    type: integer
                revokeTermIds:
                  description: mely szabályzatok legyenek visszavontra állítva az adott ügyfélnél
                  type: array
                  items:
                    type: integer
              required:
                - acceptTermIds
                - revokeTermIds
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
            - cadmin
            - sysadmin
      tags:
        - Settings
        - Mobil
        - Web
      x-responses:
        "409":
          #---
          "TERM_NOT_FOUND": "Az adott szabályzat nem található!"
          "TERM_NOT_REVOKEABLE": "A szabályzat nem vonható vissza!"
  /terms/systemTerms:
    get:
      summary: Rendszer szabályzat lista lekérése
      description: A rendszer aktuális szabályzat listájának lekérése, amiket a felhasználóknak az adott pillanatban el kell vagy el lehet fogadni a regisztrációkor.
      operationId: getSystemTerms
      parameters:
        - in: query
          name: actSupplementary
          description: "Vesszővel elválasztott formában, hogy milyen kiegészítő feltétel(eke)t kell figyelembevenni a szabályzat lista elővételekor, alapértelmezésben nem kell megadni (vagy üresként), mert egy normál ügyfél regisztráció szerinti lista kell, de háziorvos esetében pl: isnormaldoctor"
          schema:
            type: string
      responses:
        '200': # OK
          $ref: "#/components/responses/SystemTermsResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Settings
        - Mobil
        - Web
  /config/dictionary/group:
    get:
      summary: Konfigurációs csoport adatának lekérése
      description: A szótár adatok konfigurációs csoport szerinti lekérése.<br>Pl. ha code=measurement.filterCathegory - akkor visszaadja, hogy milyen méréstípus szerinti csoportok lehetnek a rendszerben (azaz EKG, Vérnyomás, Vércukor, stb.)<br>Ha a withItems paraméterben true érték van átadva, akkor pedig még a csoporthoz tartozó mérés típus azonosítókat is visszaadja.
      operationId: getConfigDictionaryGroup
      parameters:
        - in: query
          name: code
          description: a konfigurációs csoport azonosító kódja (pl. measurement.filterCathegory)
          required: true
          schema:
            type: string
        - in: query
          name: withItems
          description: alapértelmezésben false, de ha értéke true, akkor a csoportokhoz a hozzájuk tartozó értékeket is visszaadja a válaszban
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Dictionary"
                    - properties:
                        items:
                          type: array
                          items:
                            $ref: "#/components/schemas/Dictionary"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
      tags:
        - Config
        - Web
        - Mobil
  /config/systemCounter:
    get:
      summary: Rendszer számláló lekérdezése
      description: Az adott kódú rendszer számláló (pl. ABSENT_USERDATA_WARNING) értékének lekérése
      operationId: getSystemCounter
      parameters:
        - in: query
          name: counterCode
          description: A lekérdezett rendszer számláló azonosítója
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  value:
                    type: number
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
            - admin
      tags:
        - Config
        - Web
        - Mobil
      x-responses:
        "404":
          "NOT_FOUND": "Ilyen azonosítójú rendszer számláló nem található!"
        "409":
          "COUNTER_VALUE_ERROR": "Hiba a számláló értékében, nem konvertálható numerikus értékké!"
  /config/systemParam:
    get:
      summary: Rendszer paraméter lekérdezése
      description: Az adott redszer paraméter (környezeti változó) értékének lekérdezése.
      operationId: getSystemParam
      parameters:
        - in: query
          name: paramName
          description: A lekérdezett rendszer paraméter azonosítója
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  value:
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Config
      x-responses:
        "404":
          "NOT_FOUND": "Ilyen azonosítójú rendszer számláló nem található!"
    post:
      summary: Rendszer paraméter felüldefiniálása
      description: Az adott redszer paraméter (környezeti változó) értékének felüldefiniálása, ami addig jut érvényre, amíg a RESTserver újra nem lesz indítva. <br>Csakis bizonyos rendszer paraméterekre működik (PD_CHECK_OLD_MEASUREMENT_UPLOAD, PD_PULSEOXY_WITHOUT_DOCTORS, PD_BLOODPRESSURE_WITHOUT_DOCTORS, PD_BLOODGLUCOSE_WITHOUT_DOCTORS, PD_ALCOHOL_WITHOUT_DOCTORS, PD_ENABLE_STATISTIC, PD_SERVER_PAYMENT_MODE, PD_WEBHOOK_SIGNATURE, PD_ENABLE_EESZT, PD_ENABLE_EESZTEMU, PD_ADHERENCE_EXPECT_PULSEOXY_LEN, PD_ADHERENCE_EXPECT_BLOODGLUCOSE_LEN, PD_ADHERENCE_EXPECT_BLOODPRESSURE_LEN ) és kizárólag a TESZT környezetben hajtja végre a rendszer, mert az automatikus teszteléshez szükséges alapvető rendszer működési állapot változást lehet vele előidézni!
      operationId: overwriteSystemParam
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                paramName:
                  description: A rendszer paraméter neve
                  type: string
                paramValue:
                  description: A beállítandó új érték
                  type: string
              required:
                - paramName
                - paramValue
            examples:
              Teljesen automatikus pulseoxy kiértékelés:
                value:
                  paramName: 'PD_PULSEOXY_WITHOUT_DOCTORS'
                  paramValue: 'true'
              A szolgáltatás megrendelésnél régebbi mérés feltölthető:
                value:
                  paramName: 'PD_CHECK_OLD_MEASUREMENT_UPLOAD'
                  paramValue: 'true'
              Alap statisztikai adatgyűjtés:
                value:
                  paramName: 'PD_ENABLE_STATISTIC'
                  paramValue: 'true'
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  value:
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Config
  /config/testInfo/getStoredId:
    post:
      summary: Eltárolt azonosító lekérése
      description: Az automatikus teszteléshez szükséges, utoljára végrehajtott művelet során keletkezett (utolsó, vagy az előtti valahanyadik, de max. 10) hivatkozási azonosítót adja vissza (pl. ügyfél regisztrációesetén az aktivációs mail-beli link-ben kiküldött GUID értéket).<br>Kizárólag a TESZT környezetben ad vissza értelmes adatot a rendszer!
      operationId: getStoredId
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                index:
                  description: Időben visszafelé hányadik tárolt azonosítót adja vissza, alaéprtelmezésben 0, azaz a legutolsót
                  type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Az adott tárolt azonosító értéke (általában egy GUID string)
                  comment:
                    type: string
                    description: Az adott azonosítóhoz fűzött technikai megjegyzés
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Config
  /getLastProcessedID:
    get:
      summary: Utolsó feldolgozott mérésadat ID lekérése
      description: A szervertől annak lekérdezése, hogy melyik az utolsó teljesen feldolgozott feltöltött mérésadat az adott lokális adatgyűjtő eszköz szempontjából. Ennek azért van jelentősége, mert a lokális adattárolóról a szerver által megkapott és már biztosan hibátlanul (elő)feldolgozott adatok törölhetők.
      operationId: getLastProcessedId
      parameters:
        - in: query
          name: collectorId
          description: Az adott lokális adatgyűjtő eszköz MAC azonosítója
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  measurementDataId:
                    type: integer
                    description: Az utolsó, a szerveren már feldolgozott mérés adat azonosítója
        '406': # A megadott eszköz nem található, vagy nem lokális adatgyűjtő
          $ref: "#/components/responses/Error406"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Mobil
        - RPi
  /uploadData:
    post:
      summary: Mérési adat felküldés
      description: Egy mérés adatainak felküldése a szerverre.
      operationId: uploadData
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: '#/components/requestBodies/MeasurementReq'
              type: object
              allOf:
                - $ref: "#/components/schemas/Measurement"
                - properties:
                    data:
                      type: string
                      description: A tényleges mérési adat Base64 formában, de csak abban az esetben, ha nem szeletelt az adatküldés - mert szeletelt esetben ez a mező nem definiált, hanem majd az addToDataSLice hívásban kell a mérési adat (szeleteket) küldeni.
                    userIdx:
                      type: integer
                      description: A mérőeszköz szerint hányadik eszköz pozícióban lévő felhasználóra vonatkoznak az adatok
                    deviceMac:
                      type: string
                      description: A mérőeszköz MAC azonosítója
                    collectorMac:
                      type: string
                      description: A mérést továbbító lokális gyűjtő eszköz MAC azonosítója
              required:
                - measurementDate
                - localTransferDate
                - sliceDeltaTime
                - measurementType
                - deviceMac
                - collectorMac
                - userIdx
                - hash
            examples:
              normál nem szeletelt:
                value:
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.750Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  data: "<measurement data in Base64 format>"
                  deviceMac: "AA:BB:CC:DD:01:02"
                  collectorMac: "AA:BB:CC:DD:01:03"
                  userIdx: 1
                  hash: "1234567890"
              normál nem szeletelt teljes minta:
                value:
                  measurementDataId: 0
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.623Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  data: "<measurement data in Base64 format>"
                  latitude: 47.49801
                  longitude: 19.03991
                  activity: "DICT_ACTIVITY_RUNNING"
                  mealActivity: "DICT_MACTIVITY_BEFORE"
                  mood: 3
                  symptoms: "DICT_SYMP_HEADACHE,DICT_SYMP_FAINT"
                  userIdx: 2
                  deviceMac: "AA:BB:CC:DD:01:02"
                  collectorMac: "XX:BB:CC:DD:01:03"
                  hash: "1234567890"
              normál nem szeletelt nem MAC alapú minta:
                value:
                  measurementDataId: 0  #kötelezően 0 az értéke
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.623Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  data: "<measurement data in Base64 format>"
                  latitude: 47.49801
                  longitude: 19.03991
                  activity: "DICT_ACTIVITY_RUNNING"
                  mealActivity: "DICT_MACTIVITY_BEFORE"
                  mood: 3
                  symptoms: "DICT_SYMP_HEADACHE,DICT_SYMP_FAINT"
                  deviceId: 17
                  userIdx: 2
                  hash: "1234567890"
              szeletelt:
                value:
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.750Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  deviceMac: "AA:BB:CC:DD:01:02"
                  collectorMac: "AA:BB:CC:DD:01:03"
                  userIdx: 1
                  hash: "1234567890"
              szeletelt teljes minta:
                value:
                  measurementDataId: 0
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.623Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  latitude: 47.49801
                  longitude: 19.03991
                  activity: "DICT_ACTIVITY_RUNNING"
                  mealActivity: "DICT_MACTIVITY_BEFORE"
                  mood: 3
                  symptoms: "DICT_SYMP_HEADACHE,DICT_SYMP_FAINT"
                  userIdx: 2
                  deviceMac: "AA:BB:CC:DD:01:02"
                  collectorMac: "XX:BB:CC:DD:01:03"
                  hash: "1234567890"
              szeletelt nem MAC alapú minta:
                value:
                  measurementDataId: 0  #kötelezően 0 az értéke
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.623Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  latitude: 47.49801
                  longitude: 19.03991
                  activity: "DICT_ACTIVITY_RUNNING"
                  mealActivity: "DICT_MACTIVITY_BEFORE"
                  mood: 3
                  symptoms: "DICT_SYMP_HEADACHE,DICT_SYMP_FAINT"
                  deviceId: 17
                  userIdx: 2
                  hash: "1234567890"
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  measurementId:
                    type: integer
                    description: A sikeresen tárolt adat azonosítója
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Mobil
        - RPi
      x-responses:
        "406":
          "EMBEDDED_JSON_ERROR": "A data mezőben nem lehet beágyazott JSON struktúra, csak legfeljebb Base64 string formában!"
          "NOT_CREATED_DATA": "`A data rész mentése sikertelen ($measure.measurementId)! Oka: $ex.message`"
          "DEVICE_DISABLED": "Ez a mérőeszköz le van tiltva a rendszerben!"
          "DEVICE_ACTIVE_USERFEE_ABSENT": "Ehhez a mérőeszközhöz lejárt az aktív szolgáltatás megrendelés a rendszerben, ezért a mérés nem tárolható!"
          "DEVICE_USERFEE_WAIT": "Ehhez a mérőeszközhöz még nincs kifizetve, ezért még nem érvényes a szolgáltatás megrendelés a rendszerben, így a mérés nem tárolható!"
          "DEVICE_USERFEE_INACTIVE": "Ehhez a mérőeszközhöz lemondott állapotú a szolgáltatás megrendelés a rendszerben, így a mérés nem tárolható!"
          "TOO_OLD_MEASUREMENTDATE": "Ehhez a mérőeszközhöz tartozó aktív szolgáltatás megrendeléshez képest túl régi mérési adat, a mérés ezért nem tárolható!"
          "COLLECTOR_DISABLED": "Ez a gyűjtőeszköz le van tiltva a rendszerben!"
          "USERINDEX_ERROR": "Nem volt megadva a userIdx és az eszköz felelőse nem az aktuális user!"
  /addToDataSerial:
    post:
      summary: Mérési adat szelet felküldés
      description: Nagy mennyiségű adat (szeletenkénti) felküldése (hivatkozva a mérés azonosítójára, amit az uploadData funkció visszaadott).<br>Helyesen kell megadni a sliceIdx mező értékét (+1-el nagyobbra állítva, mint az előző szelet válaszában visszaadott érték!
      operationId: addToDataSerial
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/MeasurementDataSliceReq"
              $ref: "#/components/schemas/MeasurementData"
            examples:
              közbülső szelet minta:
                value:
                  "measurementId": 123
                  "sliceIdx": 0
                  "data": "<mérési adat Base64 formátumban>"
                  "isLastSlice": false
              utolsó szelet minta:
                value:
                  "measurementId": 123
                  "sliceIdx": 11
                  "data": "<mérési adat Base64 formátumban>"
                  "isLastSlice": true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  measurementId:
                    type: integer
                    description: A sikeresen tárolt adathoz tartozó mérés azonosítója, amit a következő adat szelet küldésekor az /addToDataSerial esetében kötelező helyesen megadni
                  sliceIdx:
                    type: integer
                    description: A kapott sliceIdx mező érték megismételve, aminél majd a követekező szelet küldésekor +1-el nagyobb értéket kell küldeni.
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Mobil
        - RPi
      x-responses:
        "406":
          "DATASERIAL_BLOCKED": "Tesztelési okok miatt csak a mérés fejléc tölthető fel, az adatok nem!"
          "MEASUREMENT_ID_ERROR": "Nincs ilyen mérés, ezért az adat szelet nem lett elmentve!"
          "MEASUREMENT_DELETED": "Ez a mérés már törölve lett, ezért az adat szelet nem lett elmentve!"
          "SLICEIDX_ERROR": "Ebben a funkcióban csak a mérési adat szelet folytatás jöhet!"
          "SLICEIDX_EXISTS": "Már van ilyen szelet ehhez a méréshez!"
          "LASTSLICE_ERROR": "Már érkezett utolsó szelet ehhez a méréshez!"
  /addToDataSerialList:
    post:
      summary: Több mérési adat szelet felküldés
      description: Nagy mennyiségű adat több szeletének egyszerre történő felküldése. (Ugyanaz a funkció, mint az addToDataSerial, csak egyszerre több szeletet is el lehet küldeni - így a kommunikációs overhead csökkenthető.) Minden szeletben hivatkozni kell arra a mérés azonosítóra, amit az uploadData funkció visszaadott.<br>Helyesen kell megadni az elemekben a sliceIdx mező értékét (+1-el nagyobbra állítva, mint az előző szeletben beállított érték!
      operationId: addToDataSerialList
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                dataList:
                  type: array
                  items:
                    #$ref: "#/components/requestBodies/MeasurementDataSliceReq"
                    $ref: "#/components/schemas/MeasurementData"
            examples:
              minta:
                value:
                  dataList:
                    - "measurementId": 123
                      "sliceIdx": 0
                      "data": "<mérési adat 1. szelet Base64 formátumban>"
                      "isLastSlice": false
                    - "measurementId": 123
                      "sliceIdx": 1
                      "data": "<mérési adat 2. szelet Base64 formátumban>"
                      "isLastSlice": false
                    - "measurementId": 123
                      "sliceIdx": 2
                      "data": "<mérési adat utolsó szelet Base64 formátumban>"
                      "isLastSlice": true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  measurementId:
                    type: integer
                    description: A sikeresen tárolt adathoz tartozó mérés azonosítója, amit a következő adat szelet küldésekor az /addToDataSerial esetében kötelező helyesen megadni
                  sliceIdx:
                    type: integer
                    description: Az utolsó letárolásra került kapott szelet adat sliceIdx mezőjének értéke megismételve, aminél majd a követekező szelet küldésekor +1-el nagyobb értéket kell küldeni.
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Mobil
        - RPi
      x-responses:
        "406":
          "ABSENT_SLICES": "Az adat paramétert kötelező megadni!"
          "SLICE_ERROR": "ex.message + (Bad slice data: $lastSliceIdx )"
  /myDataList:
    get:
      summary: Mérési adataim lista lekérése
      description: "Az aktuális felhasználó, szűrési feltételeknek megfelelő (időszak, típus, stb.) mérési adatainak lekérése kiválasztási lista felépítéséhez, a szűrőben beállított sorrend szerint. (A tényleges részletes adatot a /getMyDataList/{Id}:GET path hívásával l ehet megkapni!)<br>(A több szeletben felküldött adat egy tételként jelenik meg.)"
      operationId: getMyDataList
      parameters:
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: Mérési adat állapot (all, DICT_MEASURE_LOADED, DICT_MEASURE_PROCESSED, DICT_MEASURE_AUTOGENERATED, DICT_MEASURE_ANALYSING, DICT_MEASURE_ANALYSED), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: "Lap méret (alapértelmezésben: 20 rekord)"
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (measurementDate, status, measurementType)
          schema:
            type: string
            default: "measurementDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "asc"
      responses:
        '200': # OK
          $ref: "#/components/responses/MeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
      x-responses:
        "406":
          "INVALID_DATE": "Érvénytelen dátum!"
          "STOREDPROC_ERROR": "ex.message"
  /myDataList/{Id}:
    get:
      summary: Adott teljes mérés lekérése
      description: Az adott mérésre vonatkozó (összes) részletes adat lekérése. (Ez mérés típustól függően más-más mennyiségű tényleges mért adatot jelent.)<br>Ha több szeletben van tárolva a mérés, akkor az összes szelet van a válaszban.<br>A kérés kiszolgálása előtt a szerver ellenőrzni, hogy a bejelentkezett felhasználó adatáról van-e szó!
      operationId: getSelectedData
      parameters:
        - in: path
          name: Id
          description: A lekért mérési adat azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # A teljes mérési adat, ha több szeletből áll, akkor az összes szelet sliceIdx szerinti sorrendben
          $ref: "#/components/responses/MeasurementDataListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
      x-responses:
        "406":
          #---
          "DATA_NOT_FOUND": "Nincs ilyen mérés (${measurementId}), vagy törölt állapotú!"
    delete:
      summary: Adott teljes mérés kitörlése
      description: A megadott mérés összes adatának (illetve az összes adatszeletének) törlése a szerverről (pl. mert lemerült telep miatt láthatóan hibásan mért az eszköz).<br>Ha több szeletben lett felküldve a szerverre a mérési adat, akkor az összes szelet törlésre kerül!<br>A kérés kiszolgálása előtt a szerver ellenőrzni, hogy a bejelentkezett felhasználó adatáról van-e szó!
      operationId: deleteSelectedData
      parameters:
        - in: path
          name: Id
          description: A törlendő mérési adat azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
      x-responses:
        "406":
          "DATA_NOT_FOUND": "Nem létező mérés adat ($Id), nem törölhető!"
          "DELETE_SLICE_ERROR": "Hiba az adatszeletek törlésében!"
  /myDataList/{Id}/getMeasureAnalyseList:
    get:
      summary: Adott mérés kiértékeléseinek lekérése
      description: Az adott méréssel kapcsolatos kiértékelések listájának lekérése.
      operationId: getMeasurementAnalyseList
      parameters:
        - in: path
          name: Id
          description: Az adott mérési adat azonosítója
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
      x-responses:
        "406":
          "DATA_NOT_FOUND": "`Nincs ilyen mérés ($Id), vagy nem az aktuális felhasználóé ($userId)!`"
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analyse
  /myDataList/{Id}/changePatient:
    post:
      summary: Mérés átjavítása más pácienshez
      description: ???Adatbiztonsági problémák miatt lehet, hogy ezt a funkciót nem lenne szabad megvalósítani!!!<br>Akkor lehet szükség erre, ha valamely eszközzel nem az alapértelmezett használó végzett mérést, vagy az eszközön ill. az adatfelküldés előtt rosszul lett beállítva, hogy melyik páciens végzi az adott mérést.<br>A kérés kiszolgálása előtt a szerver ellenőrzni, hogy a bejelentkezett felhasználó adatáról van-e szó, vagy olyan eszközről érkezett, aminek a felelőse a bejelentkezett felhasználó!
      operationId: changePatient
      parameters:
        - in: path
          name: Id
          description: A javítandó mérési adat azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: userIdx
          description: Melyik az adott mérőeszközhöz rendelt felhasználói pozícióban lévő pácienshez kötődjön ez a mérési adat
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  userName:
                    type: string
                    description: Annak a felhasználónak a neve, akihez javításként a mérési adat hozzá lett rendelve
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
  /myDataList/{Id}/getHistory:
    get:
      summary: Mérés története
      description: Az adott mérés története (mikor milyen állapotba került).
      operationId: getMeasurementHistory
      parameters:
        - in: path
          name: Id
          description: Mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Mérés esemény lista
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/MeasurementEvent"
                    - type: object
                      properties:
                        preConsultationId:
                          description: Az előzménynek számító konzultáció azonosítója
                          type: number
                        preConsultationType:
                          description: Az előzménynek számító konzultáció azonosítója
                          type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
      x-responses:
        "406":
          "MEASUREMENT_ID_ERROR": "`Az adott mérés ($Id) nem található a történet lekérdezésnél!`"
          "DATA_NOT_FOUND": "`Az adott mérés ($Id) nem az aktuális felhasználóé ($userId) a történet lekérdezésnél!`"
  /myDataList/{Id}/changeMomentaryName:
    post:
      summary: Méréshez tárolt páciensnév javítása
      description: "Akkor lehet szükség erre, ha valamely eszközzel nem az alapértelmezett használó végzett mérést (pl:  kórházi eszközökkel az orvos által egyes kontoll páciensekkel végeztetett mérés).<br>A kérés kiszolgálása előtt a szerver ellenőrzni, hogy a bejelentkezett felhasználó adatáról van-e szó, vagy olyan eszközről érkezett, aminek a felelőse a bejelentkezett felhasználó!"
      operationId: changeMomentaryName
      parameters:
        - in: path
          name: Id
          description: A javítandó mérési adat azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                momentaryFirstName:
                  type: string
                  description: Annak a páciensnek a keresztneve, akire a mérés vonatkozik
                momentaryLastName:
                  type: string
                  description: Annak a páciensnek a családi neve, akire a mérés vonatkozik
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  userName:
                    type: string
                    description: Annak a felhasználónak a neve, akihez a mérési adat hozzá lett rendelve (ez a név nem feltétlenül egyezik meg a paraméterben kapott elnevezéssel)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Web
        - Mobil
      x-responses:
        "406":
          "DATA_NOT_FOUND": "`Nincs ilyen mérés ($Id), vagy nem az aktuális felhasználóé ($userId) a méréskori név megváltoztatásakor!`"
  /myDataList/fromHash:
    get:
      summary: Adott hash utáni mérési adataim lista lekérése
      description: A paraméterben megadott hash értékű mérési adat rekord után a szerverhez érkezett minden mérési adatom lekérése, hogy az adott eszközön lévő mérési listám szinkronizálódjon a szerverrel.
      operationId: getMyDataListFromHash
      parameters:
        - in: query
          name: fromHash
          description: Mi az adott eszközön az utolsó mérés hash értéke, ami már  megtalálható ott
          required: true
          schema:
            type: string
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: "Lap méret (alapértelmezésben: 20 rekord)"
          schema:
            type: integer
            default: 20
      responses:
        '200': # OK
          $ref: "#/components/responses/MeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Data
        - Mobil
  /myDevices:
    get:
      summary: Valaha csatolt eszközeim listájának lekérése
      description: Azon eszközök listájának lekérése, amikkel a bejelentkezett ügyfél össze van vagy volt valaha is kapcsolva, vagy a saját tulajdonú eszköze.
      operationId: getMyDeviceList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK, de csak az aktuális bejelentkezett felhasználóhoz kötött eszközök
          $ref: "#/components/responses/AssignedDevicesList"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "409":
          #---
          "DEVICETYPE_PRODUCT_CONFLICT": "Nem található ilyen eszköz típus!"
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Device
    post:
      summary: Saját eszköz regisztrálása
      description: Mérőeszköz felvétele új eszközként, ha még nem található a rendszerbe és a bejelentkezett ügyfélhez kapcsolása.
      operationId: addMyDevice
      requestBody:
        description: Az új Eszköz adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Device"
              description: A vizsgálatok elvégzésére alkalmas konkrét mérő eszköz, valamint az adatgyűjtő eszköz jellemzői.
              properties:
                deviceId:
                  type: integer
                  description: Device egyedi azonosítója
                mac:
                  type: string
                  description: Eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
                name:
                  type: string
                  description: Eszköz megnevezése
                type:
                  type: string
                  description: Eszköz típusának kódja (pl. lokális adatgyűjtő eszköz, vérnyomásmérő, mérleg, stb. - DEVICE_TYPE szótárkód)
                status:
                  type: string
                  description: Eszköz állapotát mutató szótárkód (pl. működőképes, hibás, javítás alatt, tiltott)
                ownerType:
                  type: string
                  description: Kié az eszköz (pl. PrivátDoktoré, Ügyfélé)<br>
                syncWithBackend:
                  type: boolean
                  description: "Ha az adott eszközhöz tartozó adott ügyfélre vonatkozó Meta Data rekordbeli Sync with Backend mező értéke null, akkor mi legyen az alapértelmezett szinkronizációs elv: ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját, ha az ügyfél éppen nem csinál semmit, ha false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél"
                metaData:
                  type: string
                  description: A kliens oldali globális, tehát minden ügyfélre vonatkozó egyedi beállítások eltárolására alkalmas mező.
                pairedWithGuid:
                  type: string
                  description: Ha az adott eszköz jelenleg össze van párosítva egy adatgyűjtő telefonnal vagy eszközzel, akkor annak a GUID azonosítója.
                serialNumber:
                  type: string
                  description: Ha a saját eszközünk, akkor annak a gyári cimkén szereplő sorozatszáma, hogy könnyebbé tehető legyen az eszköz bluetooth kapcsoldás folyamata.
                registrationDate:
                  type: string
                  format: date-time
                  description: Az eszköz regisztráció időpontja
                unregistrationDate:
                  type: string
                  format: date-time
                  description: Az deregisztrálásának (törlés kezdeményezésének) időpontja
                clientAppVersion:
                  type: string
                  description: Az eszköz adatokat meghatározó kliens alkalmazás verzióját tartalmazza, hogy ha kell konevrtálni egy frissebb verzió miatt, akkor azt a kliens el tudja végezni.
                changeOwnerDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az eszköz tulajdonosa megváltozott
                changeLiablerDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az eszköz felelőse megváltozott
                secretKey:
                  type: string
                  description: Az eszközhöz rendelt titkos kulcs, ami a BLE párosításkor használatos kulcs érték
                groupValidityCount:
                  type: integer
                  format: int32
                  description: Ha az eszköz szolgáltatást csoportosan fizették ki, akkor hány darab megrendelésre vonatkozik a fizetés. Eszerint lesz azonnal aktív a megrendelés (és állítódik be a validityDate mezőbe a groupValidityDate értéke), amikor valamely ügyfél megrendelést ad erre az eszközre, ha aktuálisan még nincs ennyi aktív megrendelő rá.
                groupValidityDate:
                  type: string
                  format: date-time
                  description: Ha az eszköz megrendelését csoportosan fizették ki, akkor mi legyen egyből a megrendeléskor az érvényességi dátum. (De figyelembevéve a groupValidityCount érték szerinti darabszámokat is!)
                color:
                  type: string
                  description: Az eszköz színe. (Ennek csak bizonyos eszközöknél van jelentősége, pl. véroxigén mérőnél.)
                bookingDate:
                  type: string
                  format: date-time
                  description: Mikor érkezett a webshop felől az eszközre a megrendelés
                passType:
                  type: string
                  description: Amikor az eszköz átadásra került a felelős ügyfélnek, akkor az milyen formában történt meg (postázva lett, személyesen lett átadva, stb.)
                modifyDate:
                  type: string
                  format: date-time
                  description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
                isOkfoPassed:
                  type: boolean
                  description: Ha az értéke true, akkor az adott eszköz a felelős személynek az OKFŐ páciens bevonás során lett átadva
                liableUserId:
                  type: integer
                  description: Melyik felhasználó felelős az eszközért, azaz kinél van
                ownerId:
                  type: integer
                  description: Az eszköz tulajdonosa. (Ha üres, akkor a PrivátDoktor üzemeltető cég tulajdonában van.)
                modifierId:
                  type: integer
                  description: A rögzítő vagy utoljára módosító azonosítója
                bookerUserId:
                  type: integer
                  description: Melyik user végezte az eszköz megrendelését (a webshop-ban)
              required:
                - deviceId
                - type
                - status
                - ownerType
                - syncWithBackend
              type: object
            examples:
              minta:
                description: 'kötelező, de üresen hagyandó mezők: <li>deviceId<li>status'
                value:
                  deviceId: 0
                  mac: 'XXXX-YYYY-1111'
                  name: 'My bpm gadget'
                  type: 'DICT_DEVICE_BPM'
                  status: ''
                  ownerType: 'DICT_PRIVATE_DEVICE'
                  syncWithBackend: true
        required: true
      responses:
        '200': # OK, létrehozva
          description: OK, létrehozva
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Device"
                  - properties:
                      userIdx:
                        description: Az eszközt most regisztráló ügyfél hányas ügyfél pozícióhoz rendelődött az adott eszközön
                        type: integer
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "409":
          "SALES_DEVICE_ERROR": "A kereskedőknél levő eszköz nem használható mérésre!"
          "DEVICE_MAC_ABSENT": "A megadott MAC nem található!"
          "DEVICE_MAC_CONFLICT": "Belső hiba! MAC inkonzisztencia!"
          "DEVICE_ASSIGNED_YET": "Ez az eszköz már az adott ügyfélhez van kapcsolva!"
      x-base-domain: Device
  /myDevices/getLiabledDevices:
    get:
      summary: A saját felelőség alá tartozó eszközeim listájának lekérése
      description: Azon eszközök listájának lekérése, amikért jelenleg a bejelentkezett felhasználó a felelős (attól függetlenül, hogy volt-e valaha is csatolva az ügyfél telefonjához).
      operationId: getLiabledDeviceList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK, de csak az aktuális bejelentkezett dvisitor felelőségi körébe tartozó eszközök
          $ref: "#/components/responses/AssignedDevicesList"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
      x-responses:
        "409":
          #---
          "DEVICETYPE_PRODUCT_CONFLICT": "Nem található ilyen eszköz típus!"
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Device
  /myDevices/{deviceId}:
    get:
      summary: Adott csatolt eszköz adatainak lekérése
      description: Az ügyfélhez tartozó adott eszköz adatainak lekérdezése
      operationId: getMyDevice
      parameters:
        - in: path
          name: deviceId
          description: A lekért Device egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK, de csak az aktuális bejelentkezett felhasználóhoz kötött eszközök
          $ref: "#/components/responses/AssignedDevice"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Device
    delete:
      summary: Saját eszköz deregisztrálása
      description: Saját mérőeszköz deregisztrálása, azaz az ügyfélhez rendeltség megszüntetése. Ettől még ha volt, akkor az ügyfél felelőssége az eszközzel kapcsolatban nem szűnik meg, mert céges eszköz esetében azt csak adminisztrátori felületen keresztül lehet másra átadni, az ügyfél saját eszközénél pedig a selejtezés után adhatja el az eszközt!<br>Ha volt az eszközhöz több felhasználó is rendelve, akkor azok a hozzárendelések sem szünnek meg!
      operationId: deleteMyDevice
      parameters:
        - in: path
          name: deviceId
          description: A törlendő Device egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # A törlés rendben lezajlott
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "404":
          #---
          "USERORDER_NOT_FOUND": "Nem található ilyen megrendelés!"
        "406":
          #---
          "USERORDER_INACTIVE_YET": "A megrendelés állapota nem aktív!"
      x-base-domain: Device
    post:
      summary: Eszköz adatainak módosítása
      description: Az eszköz (ügyfél által adott) elnevezésének, illetve a metaData és a pairedWithGuid értékének megváltoztatása.<br>Ha az eszköz tulajdonosa végzi az átnevezést, akkor a tényleges eszköz név is meg lesz változtatva (és minden ügyfél, aki nem adott saját nevet ennek az eszköznek amikor kapcsolatba került vele, az is már az új néven fogja látni).
      operationId: updateMyDevice
      parameters:
        - in: path
          name:  deviceId
          description: A módosítandó eszköz egyedi azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                deviceName:
                  description: Az új eszköz megnevezés
                  type: string
                metaData:
                  description: az új metaadatok
                  type: string
                pairedWithGuid:
                  description: Az eszközhöz rendelt gyűjtő eszköz GUID azonosítója
                  type: string
      responses:
        '200': # OK
          $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Mobil
        - Web
      x-responses:
        "406":
          "DEVICE_NOT_FOUND": "Nincs ilyen azonosítójú eszköz!"
          "DEVICE_NAME_CONFLICT": "Már létezik ugyanilyen nevű eszköz!"
        "409":
          "DEVICE_NAME_CONFLICT": "Az adott eszköz nem ehhez a felhasználóhoz tartozik!"
      x-base-domain: Device
  /myDevices/{deviceId}/unassignUserFromIdx:
    delete:
      summary: Eszközömhöz rendelés törlése adott pozícióból
      description: Az adott eszköz adott ügyfél pozíciójából a korábban hozzárendelt ügyfél kapcsolat megszüntetése. (Előtte biztonsági okokból ellenőrizni kell, hogy a bejelentkezett ügyfélhez tartozik-e jelenleg az adott eszköz!)
      operationId: unassignUserFromIdx
      parameters:
        - in: path
          name: deviceId
          description: Az adott saját eszköz MAC ID-je
          required: true
          schema:
            type: integer
        - in: query
          name: userIdx
          description: Melyik felhasználói pozícióból kell törölni a hozzárendelést
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "406":
          "USER_NOT_LIABLER": "Ez az ügyfél nem az adott eszköz felelőse!"
          #---
          "DEVICE_NOT_FOUND": "Ilyen azonosítójú eszköz nem található!"
  /myDevices/{deviceId}/assignUserByQR:
    post:
      summary: Másik ügyfél eszközömhöz rendelése QR-al
      description: Mérőeszköz adott felhasználói pozíciójához új ügyfél hozzárendelése az ügyfél QR kódjának segítségével, hogy ő is végezhessen mérést vele.
      operationId: assignUserByQR
      parameters:
        - in: path
          name: deviceId
          description: ID of mydevice that needs to be fetched
          required: true
          schema:
            type: integer
      requestBody:
        #$ref: '#/components/requestBodies/AssignQrCodeReq'
        content:
          'application/json':
            schema:
              type: object
              properties:
                qrCode:
                  type: string
                  format: byte
                  description: A QR code base64 formátumban kódolva
                userIdx:
                  type: integer
                  description: Hányadik eszköz pozícióba kell csatolni a felhasználót (alapértelmezetten a következő üresbe) - csatolás törlésekor üresen hagyandó
              required:
                - qrCode
      responses:
        '200': #OK
          description: OK
        '406': # A QR kódban adott felhasználó nem található vagy nem engedélyezett a rendszerben
          $ref: "#/components/responses/Error406"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Mobil
      x-responses:
        "406":
          "USER_NOT_LIABLER": "Ez az ügyfél nem az adott eszköz felelőse!"
          "ASSIGNED_USER_NOT_ACTIVE": "Ez a csatolandó felhasználó nem engedélyezett!"
          #---
          "DEVICE_NOT_FOUND": "Ilyen azonosítójú eszköz nem található!"
  /myDevices/{deviceId}/scrapDevice:
    put:
      summary: Eszköz leselejtezése vagy eladása
      description: Az eszköz leselejtezése vagy eladása. Ennek hatására a státusza deregisztrált lesz és a hozzárendelt felhasználókkal is megszűnik a kapcsolata.<br>Csak az eszköz tulajdonosa végezheti a selejtezést!
      operationId: scrapDevice
      parameters:
        - in: path
          name: deviceId
          description: annak ez eszköznek az azonosítója, amit leselejtezünk
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "406":
          "USER_NOT_OWNER": "Ez az ügyfél nem az eszköz tulajdonosa!"
          #---
          "DEVICE_NOT_FOUND": "Ilyen azonosítójú eszköz nem található!"
  /myDevices/{deviceId}/dvisitorPassDevice:
    put:
      summary: Orvoslátogató eszköz átadása
      description: Orvoslátogató az adott eszközt átadja egy háziorvosnak. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!<br>Orvoslátogatóként csak azt az eszközt adhatja át, amiért ő a felelős!
      operationId: dvisitorPassDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új felelős (és ha megvásárolt eszköz, az új tulajdonos) User egyedi azonosítója
          schema:
            type: integer
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: passType
          description: Milyen módon történt az eszköz átadása (pl. POSTED vagy HANDOVER)
          schema:
            type: string
        - in: query
          name: doctorMail
          description: Ha a userId paraméter nincs megadva, akkor milyen mail cím(+pecsét) azonosító szerinti adattal kell megkeresni az eszköz átadhatóság miatt
          schema:
            type: string
        - in: query
          name: doctorStamp
          description: Ha a userId paraméter nincs megadva, akkor milyen (mail cím)+pecsét azonosító szerinti adattal kell megkeresni az eszköz átadhatóság miatt
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - dvisitor
      tags:
        - GeneralDoctor
        - Device
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /myDevices/{deviceId}/teamvisitorPassDevice:
    put:
      summary: Csoportlátogató eszköz átadása
      description: Csoportlátogató az adott eszközt átadja egy csoport vezetőnek. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!<br>Csoportlátogatóként csak azt az eszközt adhatja át, amiért ő a felelős! De visszavenni a saját felelősségébe bármely eszközt visszavehet.
      operationId: teamvisitorPassDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új felelős (és ha megvásárolt eszköz, az új tulajdonos) User egyedi azonosítója
          schema:
            type: integer
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: passType
          description: Milyen módon történt az eszköz átadása (pl. POSTED vagy HANDOVER)
          schema:
            type: string
        - in: query
          name: newLiablerMail
          description: Ha a userId paraméter nincs megadva, akkor milyen mail cím azonosító szerinti adattal kell megkeresni az eszköz átadhatóság miatt az új felelőst
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
      tags:
        - Team
        - Device
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /myDevices/{deviceId}/teamvisitorRepass:
    put:
      summary: Csoportlátogató eszköz visszavétele
      description: Az adott eszköz visszavétele a csoporttagtól. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!
      operationId: teamvisitorRepassDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name: usage
          description: Mi lesz az eszköz utóélete a vissazvételt követően (pl. PASS - tényleges visszaadás, SCRAP - elvileg visszaadja, de selejtesen pl. összetört vagy ellopták)
          required: true
          schema:
            type: string
            enum: [PASS,SCRAP]
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
      tags:
        - Team
        - Device
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /myDevices/{deviceId}/gdoctorPassDevice:
    put:
      summary: Háziorvos eszköz átadása
      description: Az adott eszköz átadása a háziorvos páciensének. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!<br>Meghatalmazott (háziorvosként) csak azt az eszközt adhatja át, amiért ő a felelős!
      operationId: gdoctorPassDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új felelős (és ha megvásárolt eszköz, az új tulajdonos) User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: passType
          description: Milyen módon történt az eszköz átadása (pl. POSTED vagy HANDOVER)
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Device
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /myDevices/{deviceId}/gdoctorRepassDevice:
    put:
      summary: Háziorvos eszköz visszavétele
      description: Az adott eszköz visszavétele a pácienstől. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!
      operationId: gdoctorRepassDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name: usage
          description: Mi lesz az eszköz utóélete a vissazvételt követően (pl. PASS - tényleges visszaadás, RENT - páciens tovább bérli, PURCHASE - páciens kifizeti és tovább használja, SCRAP - elvileg visszaadja, de selejtesen pl. összetört vagy ellopták)
          required: true
          schema:
            type: string
            enum: [PASS,RENT,PURCHASE,SCRAP]
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Device
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /myDevices/getDeviceBySerial/{serialNumber}:
    get:
      summary: Eszköz adatainak lekérdezése sorozatszám alapján
      description: Egy adott eszköz adatainak lekérdezése a sorozatszám alapján, hogy egyszerűbb lehessen az ügyfelek számára a bluetooth-os eszköz párosítás elvégzése.
      operationId: getDeviceBySerial
      parameters:
        - in: path
          name: serialNumber
          description: A keresett eszköz gyári sorozatszáma
          required: true
          schema:
            type: string
      responses:
        '200': # OK
          $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Mobil
      x-base-domain: Device
  /getDeviceLiabilityByQR:
    post:
      summary: Eszköz felelősének lekérdezése QR alapján
      description: "Valamely eszköz QR kódja alapján az adott eszköz felelősének lekérdezése. (Pl. hogyha a mérőeszközök valami miatt véletlenül összekeveredtek azonos helyen tartózkodó ügyfelek esetében.)<br>Megj.: get helyett post-ként megvalósítva, mert a beolvasott QR kód csak a requestBody-ban fér el"
      operationId: getDeviceLiabiltyByQR
      requestBody:
        #$ref: '#/components/requestBodies/QrCodeReq'
        content:
          'application/json':
            schema:
              type: object
              properties:
                qrCode:
                  type: string
                  format: byte
                  description: A QR code base64 formátumban kódolva
              required:
                - qrCode
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  userName:
                    type: string
                    description: A felhasználó neve
        '406': # A QR kódban megadott eszköz nem található
          $ref: "#/components/responses/Error406"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Mobil
  /assignToOtherDeviceByQR:
    post:
      summary: Ügyfél más eszközéhez rendelés QR kóddal
      description: Az aktuálisan bejelentkezett ügyfél hozzárendelése más mérőeszközéhez az eszköz QR kódjának használatával.
      operationId: assignToOtherDeviceByQR
      requestBody:
        #$ref: '#/components/requestBodies/AssignQrCodeReq'
        content:
          'application/json':
            schema:
              type: object
              properties:
                qrCode:
                  type: string
                  format: byte
                  description: A QR code base64 formátumban kódolva
                userIdx:
                  type: integer
                  description: Hányadik eszköz pozícióba kell csatolni a felhasználót (alapértelmezetten a következő üresbe) - csatolás törlésekor üresen hagyandó
              required:
                - qrCode
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Mobil
  /unassignToOtherDeviceByQR:
    post:
      summary: Ügyfél más eszközéhez rendelés törlése QR alapján
      description: "Az aktuálisan bejelentkezett ügyfél más eszközéhez rendelésének törlése az eszköz QR kódjának segítségével.<br>Megj.: get helyett post-ként megvalósítva, mert a beolvasott QR kód csak a requestBody-ban fér el"
      operationId: unassignToOtherDeviceByQR
      requestBody:
        #$ref: '#/components/requestBodies/QrCodeReq'
        content:
          'application/json':
            schema:
              type: object
              properties:
                qrCode:
                  type: string
                  format: byte
                  description: A QR code base64 formátumban kódolva
              required:
                - qrCode
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Mobil
  /soldDeviceWithoutId:
    put:
      summary: Eszköz eladása és szolgáltatás csomag megrendelése
      description: Webshop felől hívhatóan eszköz(ök) eladása és szolgáltatás megrendelése regisztrált ügyfél számára. Az eszközöket a rendszer választja ki a megrendelés pillanatában a kereskedőink készletéből.
      deprecated: true
      operationId: soldDeviceWithoutId
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                deviceType:
                  type: string
                  description: megrendelt mérőeszköz típusa (pl. BT_BERRY_BM1000B)
                deviceColor:
                  type: string
                  description: megrendelt mérőeszköz(ök) színe
                deviceQuantity:
                  type: integer
                  description: megrendelt mérőeszköz(ök) mennyisége
                userCount:
                  type: integer
                  description: megrendelt szolgáltatáshoz tartozó user-ek darabszáma
                validity:
                  type: integer
                  description: megrendelt szolgáltatás hossza hónapokban
                price:
                  type: integer
                  description: megrendelt szolgáltatás nettó egységára
              required:
                - deviceType
                - deviceQuantity
                - userCount
                - validity
                - price
            examples:
              minta:
                value:
                  deviceType: "BT_BERRY_BM1000B"
                  deviceColor: "grey"
                  deviceQuantity: 3
                  userCount: 4
                  validity: 6
                  price: 23606
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "406":
          #---
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
          "NOT_ENOUGH_DEVICE": "Az adott típusú és színű ezközből nincs készleten elegendő, ezért a megrendelés sikertelen!"
  /soldEncDeviceWithoutId:
    put:
      summary: Eszköz (titkosított) eladása és szolgáltatás csomag megrendelése
      description: Webshop felől hívhatóan eszköz(ök) eladása titkosított paraméterekkel és szolgáltatás megrendelése regisztrált ügyfél számára. Az eszközöket a rendszer választja ki a megrendelés pillanatában a kereskedőink készletéből.
      operationId: soldEncDeviceWithoutId
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: "A megrendelés adatai titkosított formában (pl. 'devicetype=BT_ROCHE_GLUCOSE&color=none&quantity=2&user=1&validity=3&price=9990' titkosítva)"
                  #properties:
                  #  deviceType:
                  #    type: string
                  #    description: megrendelt mérőeszköz típusa (pl. BT_BERRY_BM1000B)
                  #  deviceColor:
                  #    type: string
                  #    description: megrendelt mérőeszköz(ök) színe - opcionális
                  #  deviceQuantity:
                  #    type: integer
                  #    description: megrendelt mérőeszköz(ök) mennyisége
                  #  userCount:
                  #    type: integer
                  #    description: megrendelt szolgáltatáshoz tartozó user-ek darabszáma
                  #  validity:
                  #    type: integer
                  #    description: megrendelt szolgáltatás hossza hónapokban
                  #  price:
                  #    type: integer
                  #    description: megrendelt szolgáltatás nettó egységára
              required:
                - data
            examples:
              minta:
                value:
                  data: "e1234...." #pl. devicetype=BT_BERRY_BM1000B&color=grey&quantity=300&user=1&validity=3&price=23606
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Device
        - Web
        - Mobil
      x-responses:
        "406":
          #---
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
          "NOT_ENOUGH_DEVICE": "Az adott típusú és színű ezközből nincs készleten elegendő, ezért a megrendelés sikertelen!"
  /admin/devices:
    get:
      summary: Eszköz lista lekérdezése
      description: A szűrő feltételnek megfelelő eszköz(ök) listájának lekérdezése.
      operationId: adminGetDevicesList
      parameters:
        - $ref: "#/components/parameters/FilterParamDevice"
      responses:
        '200': # OK
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-responses:
        "406":
          "OWNER_ERROR": "Nem megfelelő tulajdonos azonosító!"
          "LIABLER_ERROR": "Nem megfelelő felelős azonosító!"
          "INTERNAL_ERROR": "ex.message"
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Device
    post:
      summary: Eszköz létrehozása
      description: Lokális adatgyűjtő eszköz vagy mérőeszköz felvétele a rendszerbe. (Azaz bevételezése.)
      operationId: adminAddDevice
      requestBody:
        description: Az új Device adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Device"
              description: A vizsgálatok elvégzésére alkalmas konkrét mérő eszköz, valamint az adatgyűjtő eszköz jellemzői.
              properties:
                deviceId:
                  type: integer
                  description: Device egyedi azonosítója
                mac:
                  type: string
                  description: Eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
                name:
                  type: string
                  description: Eszköz megnevezése
                type:
                  type: string
                  description: Eszköz típusának kódja (pl. lokális adatgyűjtő eszköz, vérnyomásmérő, mérleg, stb. - DEVICE_TYPE szótárkód)
                status:
                  type: string
                  description: Eszköz állapotát mutató szótárkód (pl. működőképes, hibás, javítás alatt, tiltott)
                ownerType:
                  type: string
                  description: Kié az eszköz (pl. PrivátDoktoré, Ügyfélé)<br>
                syncWithBackend:
                  type: boolean
                  description: "Ha az adott eszközhöz tartozó adott ügyfélre vonatkozó Meta Data rekordbeli Sync with Backend mező értéke null, akkor mi legyen az alapértelmezett szinkronizációs elv: ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját, ha az ügyfél éppen nem csinál semmit, ha false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél"
                metaData:
                  type: string
                  description: A kliens oldali globális, tehát minden ügyfélre vonatkozó egyedi beállítások eltárolására alkalmas mező.
                pairedWithGuid:
                  type: string
                  description: Ha az adott eszköz jelenleg össze van párosítva egy adatgyűjtő telefonnal vagy eszközzel, akkor annak a GUID azonosítója.
                serialNumber:
                  type: string
                  description: Ha a saját eszközünk, akkor annak a gyári cimkén szereplő sorozatszáma, hogy könnyebbé tehető legyen az eszköz bluetooth kapcsoldás folyamata.
                registrationDate:
                  type: string
                  format: date-time
                  description: Az eszköz regisztráció időpontja
                unregistrationDate:
                  type: string
                  format: date-time
                  description: Az deregisztrálásának (törlés kezdeményezésének) időpontja
                clientAppVersion:
                  type: string
                  description: Az eszköz adatokat meghatározó kliens alkalmazás verzióját tartalmazza, hogy ha kell konevrtálni egy frissebb verzió miatt, akkor azt a kliens el tudja végezni.
                changeOwnerDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az eszköz tulajdonosa megváltozott
                changeLiablerDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az eszköz felelőse megváltozott
                secretKey:
                  type: string
                  description: Az eszközhöz rendelt titkos kulcs, ami a BLE párosításkor használatos kulcs érték
                groupValidityCount:
                  type: integer
                  format: int32
                  description: Ha az eszköz szolgáltatást csoportosan fizették ki, akkor hány darab megrendelésre vonatkozik a fizetés. Eszerint lesz azonnal aktív a megrendelés (és állítódik be a validityDate mezőbe a groupValidityDate értéke), amikor valamely ügyfél megrendelést ad erre az eszközre, ha aktuálisan még nincs ennyi aktív megrendelő rá.
                groupValidityDate:
                  type: string
                  format: date-time
                  description: Ha az eszköz megrendelését csoportosan fizették ki, akkor mi legyen egyből a megrendeléskor az érvényességi dátum. (De figyelembevéve a groupValidityCount érték szerinti darabszámokat is!)
                color:
                  type: string
                  description: Az eszköz színe. (Ennek csak bizonyos eszközöknél van jelentősége, pl. véroxigén mérőnél.)
                bookingDate:
                  type: string
                  format: date-time
                  description: Mikor érkezett a webshop felől az eszközre a megrendelés
                passType:
                  type: string
                  description: Amikor az eszköz átadásra került a felelős ügyfélnek, akkor az milyen formában történt meg (postázva lett, személyesen lett átadva, stb.)
                modifyDate:
                  type: string
                  format: date-time
                  description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
                isOkfoPassed:
                  type: boolean
                  description: Ha az értéke true, akkor az adott eszköz a felelős személynek az OKFŐ páciens bevonás során lett átadva
                liableUserId:
                  type: integer
                  description: Melyik felhasználó felelős az eszközért, azaz kinél van
                ownerId:
                  type: integer
                  description: Az eszköz tulajdonosa. (Ha üres, akkor a PrivátDoktor üzemeltető cég tulajdonában van.)
                modifierId:
                  type: integer
                  description: A rögzítő vagy utoljára módosító azonosítója
                bookerUserId:
                  type: integer
                  description: Melyik user végezte az eszköz megrendelését (a webshop-ban)
              required:
                - deviceId
                - type
                - status
                - ownerType
                - syncWithBackend
              type: object
            examples:
              Pulzoximéter bevételezés:
                value:
                  mac: "<A PD MobilApp-al kell kiolvasni a 12 jegyű hexa számot>"
                  name: "PrivátDoktor pulzoximéter"
                  type: "BT_BERRY_BM1000B"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: ""
                  color: "GREY"
              EKG öv bevételezés:
                value:
                  mac: "SH<A PD MobilApp-al kiolvasandó szám>"
                  name: "PrivátDoktor EKG"
                  type: "PrivatDoktorEKG"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: ""
              Mérleg bevételezés:
                value:
                  mac: "<A dobozon található „BDA”-nál látható szám>"
                  name: "PrivátDoktor mérleg"
                  type: "BT_OMRON_VIVA"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: "<A dobozon az „SN”-nél látható sorozatszám>"
              Vérnyomásmérő bevételezés:
                value:
                  mac: ""
                  name: "PrivátDoktor vérnyomásmérő"
                  type: "BT_ANDESFITHEALTH_B180"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: ""
              Vércukormérő bevételezés:
                value:
                  mac: "meter+<Az Eszközön található [SN] szám 4. számjegyétől>"
                  name: "PrivátDoktor vércukormérő"
                  type: "BT_ROCHE_GLUCOSE"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: ""
              Vércukor tesztcsík bevételezés:
                value:
                  mac: "<Saját sorszám kiosztás kézzel>"
                  name: "Accu-Check Instant 50 darabos tesztcsík"
                  type: "ROCHE_STRIPE"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: ""
              RasPI bevételezés:
                value:
                  mac: ""
                  name: "PrivátDoktor adatgyűjtő"
                  type: "BT_RASPI_DEVICE"
                  ownerType: "DICT_SPH_OWNED"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: ""
              Ügyfélnek beszerzett eszköz bevételezés:
                value:
                  mac: "ABC123456"
                  name: "Saját vércukormérő"
                  type: "BT_ROCHE_GLUCOSE"
                  ownerType: "DICT_SPH_PAYABLE"
                  ownerId: 2
                  syncWithBackend: false
                  serialNumber: "SPH-0001"
        required: true
      responses:
        '200': # Létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-implementation: "x-create"
      x-base-domain: Device
  /admin/devices/{deviceId}:
    get:
      summary: Eszköz adatainak lekérdezése
      operationId: adminGetDeviceById
      parameters:
        - in: path
          name: deviceId
          description: A keresett Device egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Device
    post:
      summary: Eszköz adatainak módosítása
      operationId: adminUpdateDevice
      parameters:
        - in: path
          name:  deviceId
          description: A módosítandó Device egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Device"
              description: A vizsgálatok elvégzésére alkalmas konkrét mérő eszköz, valamint az adatgyűjtő eszköz jellemzői.
              properties:
                deviceId:
                  type: integer
                  description: Device egyedi azonosítója
                mac:
                  type: string
                  description: Eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
                name:
                  type: string
                  description: Eszköz megnevezése
                type:
                  type: string
                  description: Eszköz típusának kódja (pl. lokális adatgyűjtő eszköz, vérnyomásmérő, mérleg, stb. - DEVICE_TYPE szótárkód)
                status:
                  type: string
                  description: Eszköz állapotát mutató szótárkód (pl. működőképes, hibás, javítás alatt, tiltott)
                ownerType:
                  type: string
                  description: Kié az eszköz (pl. PrivátDoktoré, Ügyfélé)<br>
                syncWithBackend:
                  type: boolean
                  description: "Ha az adott eszközhöz tartozó adott ügyfélre vonatkozó Meta Data rekordbeli Sync with Backend mező értéke null, akkor mi legyen az alapértelmezett szinkronizációs elv: ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját, ha az ügyfél éppen nem csinál semmit, ha false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél"
                metaData:
                  type: string
                  description: A kliens oldali globális, tehát minden ügyfélre vonatkozó egyedi beállítások eltárolására alkalmas mező.
                pairedWithGuid:
                  type: string
                  description: Ha az adott eszköz jelenleg össze van párosítva egy adatgyűjtő telefonnal vagy eszközzel, akkor annak a GUID azonosítója.
                serialNumber:
                  type: string
                  description: Ha a saját eszközünk, akkor annak a gyári cimkén szereplő sorozatszáma, hogy könnyebbé tehető legyen az eszköz bluetooth kapcsoldás folyamata.
                registrationDate:
                  type: string
                  format: date-time
                  description: Az eszköz regisztráció időpontja
                unregistrationDate:
                  type: string
                  format: date-time
                  description: Az deregisztrálásának (törlés kezdeményezésének) időpontja
                clientAppVersion:
                  type: string
                  description: Az eszköz adatokat meghatározó kliens alkalmazás verzióját tartalmazza, hogy ha kell konevrtálni egy frissebb verzió miatt, akkor azt a kliens el tudja végezni.
                changeOwnerDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az eszköz tulajdonosa megváltozott
                changeLiablerDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az eszköz felelőse megváltozott
                secretKey:
                  type: string
                  description: Az eszközhöz rendelt titkos kulcs, ami a BLE párosításkor használatos kulcs érték
                groupValidityCount:
                  type: integer
                  format: int32
                  description: Ha az eszköz szolgáltatást csoportosan fizették ki, akkor hány darab megrendelésre vonatkozik a fizetés. Eszerint lesz azonnal aktív a megrendelés (és állítódik be a validityDate mezőbe a groupValidityDate értéke), amikor valamely ügyfél megrendelést ad erre az eszközre, ha aktuálisan még nincs ennyi aktív megrendelő rá.
                groupValidityDate:
                  type: string
                  format: date-time
                  description: Ha az eszköz megrendelését csoportosan fizették ki, akkor mi legyen egyből a megrendeléskor az érvényességi dátum. (De figyelembevéve a groupValidityCount érték szerinti darabszámokat is!)
                color:
                  type: string
                  description: Az eszköz színe. (Ennek csak bizonyos eszközöknél van jelentősége, pl. véroxigén mérőnél.)
                bookingDate:
                  type: string
                  format: date-time
                  description: Mikor érkezett a webshop felől az eszközre a megrendelés
                passType:
                  type: string
                  description: Amikor az eszköz átadásra került a felelős ügyfélnek, akkor az milyen formában történt meg (postázva lett, személyesen lett átadva, stb.)
                modifyDate:
                  type: string
                  format: date-time
                  description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
                isOkfoPassed:
                  type: boolean
                  description: Ha az értéke true, akkor az adott eszköz a felelős személynek az OKFŐ páciens bevonás során lett átadva
                liableUserId:
                  type: integer
                  description: Melyik felhasználó felelős az eszközért, azaz kinél van
                ownerId:
                  type: integer
                  description: Az eszköz tulajdonosa. (Ha üres, akkor a PrivátDoktor üzemeltető cég tulajdonában van.)
                modifierId:
                  type: integer
                  description: A rögzítő vagy utoljára módosító azonosítója
                bookerUserId:
                  type: integer
                  description: Melyik user végezte az eszköz megrendelését (a webshop-ban)
              required:
                - deviceId
                - type
                - status
                - ownerType
                - syncWithBackend
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Device
    delete:
      summary: Eszköz visszavétele/leselejtezése (deregisztrálása)
      description: Lokális adatgyűjtő vagy mérőeszköz leselejtezése (deregisztrálása) a rendszerből és az összes eszközhöz kapcsolt felhasználóra a kapcsolat megszüntetése vele. (Praktikusan a PrivátDoktor cég eszközeinek visszavételekor így lehet elfelejtetni az eszközhöz rendeltségeket, hogy a következő felhasználónak kiadásig vagy az eszköz eladásáig már ne tudjanak rajta keresztül mérési adatokat felküldeni.)<br>Eszközt kitörölni API-n keresztül nem lehet, hanem csak az archíváló cél alkalmazáson keresztüli adatbázis művelettel lehet és kizárólag azután, ha a megfelelő függő mérések és adatok archíválva lettek.
      operationId: adminDeleteDevice
      parameters:
        - in: path
          name: deviceId
          description: A deregisztrálandó eszköz egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-base-domain: Device
  /admin/devices/{deviceId}/assignUserToDevice:
    post:
      summary: Ügyfél eszközhöz rendelése
      description: Ügyfél hozzárendelése a kiválasztott eszközhöz, hogy méréskor kiválasztható legyen, hogy az eszközön kejelzett melyik felhasználói sorszám jelenti az adott ügyfelet.
      operationId: adminAssignUserToDevice
      parameters:
        - in: path
          name: deviceId
          description: annak az eszköznek az azonosítója, amihez az ügyfelet rendeljük
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: A hozzárendelt User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name:  userIdx
          description: Hányadik eszköz pozícióhoz rendeljük a User-t (a sorszámozás 1-től indul!)
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
  /admin/devices/{deviceId}/changeDeviceLiability:
    put:
      summary: Eszköz felelősének megváltoztatása
      description: Annak megváltoztatása, hogy ki a felelős az adott eszközért. (Azaz az adott eszköz kiadása vagy visszavétele.)<br>Ilyenkor az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!
      operationId: adminChangeDeviceLiability
      parameters:
        - in: path
          name: deviceId
          description: annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: A felelős User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (alapértelmezésben false)
          schema:
            type: boolean
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
  /admin/devices/{deviceId}/passDevice:
    put:
      summary: Eszköz át- vagy visszaadása
      description: Az adott eszköz át- vagy visszaadása. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!<br>Meghatalmazott (háziorvosként) ill. orvoslátogatóként csak azt az eszközt adhatja át, amiért ő a felelős!<br>Kivéve, he ez éppen eszköz visszavétel azaz a userId paraméter éppen az aktuális user azonosítója.
      operationId: adminPassDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új felelős (és ha megvásárolt eszköz, az új tulajdonos) User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: passType
          description: Milyen módon történt az eszköz átadása (pl. POSTED vagy HANDOVER)
          schema:
            type: string
        - in: query
          name: doctorMail
          description: Ha a userId paraméter nincs megadva, akkor milyen mail cím(+pecsét) azonosító szerinti adattal kell megkeresni az eszköz átadhatóság miatt
          schema:
            type: string
        - in: query
          name: doctorStamp
          description: Ha a userId paraméter nincs megadva, akkor milyen (mail cím)+pecsét azonosító szerinti adattal kell megkeresni az eszköz átadhatóság miatt
          schema:
            type: string
        - in: query
          name: isOkfoPass
          description: Ha értéke true, akkor az OKFŐ páciens bevonás részeként kiadottnak számít az eszköz (azaz a visszavételig nem lehet a páciensre pilot befejezést végrehajtani)
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /admin/devices/{deviceId}/soldDevice:
    put:
      summary: Eszköz eladása
      description: Az adott eszköz eladása. Ilyenkor az eszköz felelőse és a tulajdonosa is megváltozik.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett! Kivéve, ha az előző felelős is ez az ügyfél volt.
      operationId: adminSoldDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új tulajdonos User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: fee
          description: Az automatikusan létrejövő szolgáltatás megvásárlás fizetendő ára (ha az eltér az eszközre vonatkozó termék alapértelmezett vásárlási árától)
          schema:
            type: integer
        - in: query
          name: isOkfoPass
          description: Ha értéke true, akkor az OKFŐ páciens bevonás részeként kiadottnak számít az eszköz (azaz a visszavételig nem lehet a páciensre pilot befejezést végrehajtani)
          schema:
            type: boolean
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-responses:
        "406":
          #---
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /admin/devices/{deviceId}/rentDevice:
    put:
      summary: Eszköz bérlése
      description: Az adott eszköz bérletbe adása. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!
      operationId: adminRentDevice
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új bérlő User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: fee
          description: Az automatikusan létrejövő szolgáltatás bérlés fizetendő ára (ha az eltér az eszközre vonatkozó termék alapértelmezett bérleti árától)
          schema:
            type: integer
        - in: query
          name: isOkfoPass
          description: Ha értéke true, akkor az OKFŐ páciens bevonás részeként kiadottnak számít az eszköz (azaz a visszavételig nem lehet a páciensre pilot befejezést végrehajtani)
          schema:
            type: boolean
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-responses:
        "406":
          #---
          "USER_NOT_FOUND": "Az adott ügyfél nem található!"
          "DEVICE_NOT_FOUND": "Az adott eszköz nem található!"
          "DEVICE_TYPE_NOT_FOUND": "Nem található ilyen eszköz típus!"
          "PRODUCTTYPE_OR_PRODUCTPACKAGEID_ERROR": "Hibás termék típus vagy termék azonosító!"
          "PRODUCTPACKAGE_NOT_FOUND": "Nem található ilyen azonosítójú termék!"
          "DEVICETYPE_PRODUCTPACKAGE_MISMATCH": "Eszköz típus és termék azonosító keveredés!"
  /admin/devices/{deviceId}/setGroupValidity:
    put:
      summary: Eszköznél csoport érvényesség beállítása
      description: Az adott eszközre vonatkozó csoportos kifizetettségi adatok (csoportos érvényességi dátum, csoportos kifizetett mennyiségés csoportos szolgáltatás ár) beállítása.
      operationId: adminSetDeviceGroupValidity
      parameters:
        - in: path
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  groupValidityDate
          description: A csoportos kifizetettség miatt eszköz megrendelésnél milyen érvényességi (határ)idő kerüljön a megrendelés rekordba
          schema:
            type: string
        - in: query
          name:  groupValidityCount
          description: A csoportos kifizetettség miatt maximum hány megrendelőnél lehet azonnal ACTIVE státuszú a megrendelés
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-responses:
        "406":
          "INVALID_PARAMETERS": "Valamelyik paramétert meg kell adni!"
          "INVALID_DATE": "Nem megfelelő dátum!"
  /admin/users:
    get:
      summary: Felhasználó lista lekérdezése
      description: A szűrő feltételnek megfelelő felhasználók listájának lekérése.
      operationId: adminGetUsersList
      parameters:
        - $ref: "#/components/parameters/FilterParamUser"
      responses:
        '200': # OK
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: User
    post:
      summary: Felhasználó létrehozása
      description: Új felhasználó (pl.orvos, vagy adminisztrátor) adatainak rögzítése a rendszerben. (Az ügyfelek nem így kerülnek be, hanem úgy, hogy használják a regisztrációs funkciót!)
      operationId: adminAddUser
      requestBody:
        description: Az új User adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/User"
              description: "Felhasználói adatok. A UserID kötelező, ezért request esetén (pl: /registerUser) 0-át kell itt átadni!"
              properties:
                userId:
                  type: integer
                  description: User egyedi azonosítója
                firstName:
                  type: string
                  description: Az ügyfél keresztneve
                lastName:
                  type: string
                  description: Az ügyfél családi neve
                email:
                  type: string
                  description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
                phoneNumber:
                  type: string
                  description: Max. 18, csak szám.
                language:
                  type: string
                  description: Nyelv (hu, en, ch, ...)
                userStatus:
                  type: string
                  description: "A felhasználó állapotát jelző szótárkód (pl: regiszráció alatt, aktív, deregisztrált).<br>"
                metaData:
                  type: string
                  description: A kliens oldali egyedi beállítások eltárolására alkalmas mező.
                postalCode:
                  type: string
                city:
                  type: string
                  description: Min. 1, max. 30 karakter.
                address:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 30 karakter.<br>
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
                birthYear:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az év
                birthMonth:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az hónap
                birthDay:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból a nap
                birthPlace:
                  type: string
                  description: Születési hely
                motherName:
                  type: string
                gender:
                  type: string
                loginToken:
                  type: string
                  description: JWT offline/refresh token. 30 naponta törölni kellene a szerver oldalon az adatbázisból, hogy mindenképpen újra be kelljen név/jelszóval lépni.
                loginCert:
                  type: string
                  description: A felhasználói bejelentkezéshez használható tanúsítvány publikus kulcs fele. Elsősorban a lokális adatgyűjtőeszközök esetében használatos arra, hogy a bejelentkezés ne jelszó alapon történjen.
                kcUserId:
                  type: string
                  description: A felhasználó azonosítója az authorizációs szerveren (Keycloak).
                registrationDate:
                  type: string
                  format: date-time
                  description: A felhasználói regisztráció időpontja
                unregistrationDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a felhasználó jelezte, hogy meg akarja szüntetni a regisztrációját a rendszerben
                userGuid:
                  type: string
                  description: A felhasználó GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az alkönyvtárnév meghatározására.)
                invoiceName:
                  type: string
                  description: Az ügyfélnek szóló számlákra írandó ügyfél név.
                invoicePostalCode:
                  type: string
                invoiceCity:
                  type: string
                invoiceAddress:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 50 karakter.
                deliveryPostalCode:
                  type: string
                deliveryCity:
                  type: string
                deliveryAddress:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 50 karakter.
                taxNumber:
                  type: string
                userChecking:
                  type: boolean
                  description: Az értéke akkor true, ha a számlázás szempontjából valami olyan adateltérést érzékelt a rendszer, ami miatt esetleg aktualizálni kell majd az ügyfél valamely adatát és addig nem szabad számlát kiállítani a számára.
                checkStartDate:
                  type: string
                  format: date-time
                  description: Az az időpont amikor az adategyeztetés szüksége felmerült
                checkEndDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az ügyfél adategyeztetés befejeződött
                defaultFeePeriod:
                  type: integer
                  format: int32
                  default: 1
                  description: Ez az fizetési gyakoriság lesz beálítva a következő szolgáltatás megrendelésekor (1, 3, 6, 12 hónap).
                balance:
                  type: integer
                  format: int32
                  default: 0
                  description: Az ügyfél által befizetett, de még díj rendezésére fel nem használt összeg.
                balanceDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor utoljára aktualizálva lett az Egyenleg mező értéke.
                primaryCardType:
                  type: string
                  description: Az ügyfél személyes azonosítására használt irat típusa (pl. személyi igazolvány)
                primaryCardNumber:
                  type: string
                  description: Az ügyfél személyes azonosítására használt irat (pl. személyi igazolvány) azonosító száma
                secondaryCardType:
                  type: string
                  description: Az ügyfél személyes azonosítására használt másodlagos irat típusa (pl. jogosítvány)
                secondaryCardNumber:
                  type: string
                  description: Az ügyfél személyes azonosítására használt másodlagos irat (pl. jogosítvány) azonosító száma
                suspendDate:
                  type: string
                  format: date-time
                  description: Az utolsó megrendelés nem fizetés miatti letiltás időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
                modifyReason:
                  type: string
                  description: "Az utolsó módosítás milyen funkció miatt történt (pl: IMPORT, ADMIN)"
                reasonReference:
                  type: integer
                  format: int32
                  description: "A módosításhoz kapcsolódó referencia azonosító (pl: ha a modifyReason=IMPORT, akkor az adott import állományhoz tartozó invoicingEventlogId)"
                reasonReferenceLine:
                  type: integer
                  format: int32
                  description: Ha a módosítás import állomány miatt keletkezett, akkor az adott csv állomány hányadik sora a forrás adat
                userName:
                  type: string
                  description: Kalkulált mező! Az ügyfél neve a lastName+firstName alapján, hogy a névtöredékre keresési műveletek gyorsíthatók legyenek index-el.
                stamp:
                  type: string
                  description: Az EESZT rendszerben használható orvosi pecsét azonosító száma
                eesztBindingDate:
                  type: string
                  format: date-time
                  description: Az a dátum, amikor megtörtént az ügyfél EESZT rendszerhez rendelése
                eesztOrganization:
                  type: string
                  description: Ha az adott ügyfél orvos, akkor az az EESZT szervetei azonosító (Exxxx érték), ami mutatja, hogy mely szervezet nevében végzi az adatok feltöltését
                isEesztUploader:
                  type: boolean
                  description: Értéke true, ha az ügyfél olyan orvos, aki tölt fel adatokat az EESZT rendszerbe
                inviteDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az adott ügyfelet előregisztrálta a meghívó orvos
                okfoPlannedEndDate:
                  type: string
                  format: date-time
                  description: Az adott ügyfél számára a tervezett OKFŐ projekt részvétel befejezési dátum
                okfoEndDate:
                  type: string
                  format: date-time
                  description: Az adott ügyfél számára a tényleges OKFŐ projekt részvétel befejezési dátum
                mustChangePassword:
                  type: boolean
                  description: Ha értéke true, akkor a következő login során kötelező a kliens programnak kierőszakolnia, hogy az ügyfél lecserélje a jelszavát
                okfoEndRating:
                  type: string
                  description: Az Okfő projekt lezárásakor a bevonó orvos által tett értékelés(i kód) - pl. SUCCESSFUL, FAILED
                okfoEndComment:
                  type: string
                  description: Az Okfő projekt lezárásakor a bevonó orvos által tett szöveges megjegyzés
                externalId:
                  type: integer
                  format: int32
                  description: Az adott ügyfél külső rendszerbeli azonosítója (pl. eeszt miatt az interfész rendszerbeli azonosító)
                eesztDisabled:
                  type: boolean
                  description: Ha értéke true, akkor technikai okok miatt az adott ügyfél semmilyen adata nem kerülhet fel az EESZT rendszerbe (pl. azért, mert technikai vagy teszt ügyfél)
                modifierId:
                  type: integer
                  description: User kapcsoló mezője
                inviterUserId:
                  type: integer
                  description: Melyik orvos végezte az előregisztrációt erre az ügyfélre
              required:
                - userId
                - firstName
                - lastName
                - email
                - language
              type: object
            examples:
              Új ügyfél regisztrálása:
                value:
                  lastName: "Kis"
                  firstName: "Tibor"
                  email: "xxx@mail.com"
                  phoneNumber: "06201112233"
                  language: "hu"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_MALE"
                  password: "password123"
                  acceptTermIds: [1,2]
        required: true
      responses:
        '200': # Created
          $ref: "#/components/schemas/User"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: User
  /admin/users/{userId}:
    get:
      summary: Felhasználó adatainak lekérdezése
      description: Az adott felhasználó részletes adatainak lekérése.
      operationId: adminGetUserById
      parameters:
        - in: path
          name: userId
          description: A keresett User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          $ref: "#/components/schemas/User"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: User
    post:
      summary: Felhasználó adatainak módosítása
      description: Az adott felhasználó részletes adatainak módosítása.
      operationId: adminUpdateUser
      parameters:
        - in: path
          name:  userId
          description: A módosítandó User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/User"
              description: "Felhasználói adatok. A UserID kötelező, ezért request esetén (pl: /registerUser) 0-át kell itt átadni!"
              properties:
                userId:
                  type: integer
                  description: User egyedi azonosítója
                firstName:
                  type: string
                  description: Az ügyfél keresztneve
                lastName:
                  type: string
                  description: Az ügyfél családi neve
                email:
                  type: string
                  description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
                phoneNumber:
                  type: string
                  description: Max. 18, csak szám.
                language:
                  type: string
                  description: Nyelv (hu, en, ch, ...)
                userStatus:
                  type: string
                  description: "A felhasználó állapotát jelző szótárkód (pl: regiszráció alatt, aktív, deregisztrált).<br>"
                metaData:
                  type: string
                  description: A kliens oldali egyedi beállítások eltárolására alkalmas mező.
                postalCode:
                  type: string
                city:
                  type: string
                  description: Min. 1, max. 30 karakter.
                address:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 30 karakter.<br>
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
                birthYear:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az év
                birthMonth:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az hónap
                birthDay:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból a nap
                birthPlace:
                  type: string
                  description: Születési hely
                motherName:
                  type: string
                gender:
                  type: string
                loginToken:
                  type: string
                  description: JWT offline/refresh token. 30 naponta törölni kellene a szerver oldalon az adatbázisból, hogy mindenképpen újra be kelljen név/jelszóval lépni.
                loginCert:
                  type: string
                  description: A felhasználói bejelentkezéshez használható tanúsítvány publikus kulcs fele. Elsősorban a lokális adatgyűjtőeszközök esetében használatos arra, hogy a bejelentkezés ne jelszó alapon történjen.
                kcUserId:
                  type: string
                  description: A felhasználó azonosítója az authorizációs szerveren (Keycloak).
                registrationDate:
                  type: string
                  format: date-time
                  description: A felhasználói regisztráció időpontja
                unregistrationDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a felhasználó jelezte, hogy meg akarja szüntetni a regisztrációját a rendszerben
                userGuid:
                  type: string
                  description: A felhasználó GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az alkönyvtárnév meghatározására.)
                invoiceName:
                  type: string
                  description: Az ügyfélnek szóló számlákra írandó ügyfél név.
                invoicePostalCode:
                  type: string
                invoiceCity:
                  type: string
                invoiceAddress:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 50 karakter.
                deliveryPostalCode:
                  type: string
                deliveryCity:
                  type: string
                deliveryAddress:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 50 karakter.
                taxNumber:
                  type: string
                userChecking:
                  type: boolean
                  description: Az értéke akkor true, ha a számlázás szempontjából valami olyan adateltérést érzékelt a rendszer, ami miatt esetleg aktualizálni kell majd az ügyfél valamely adatát és addig nem szabad számlát kiállítani a számára.
                checkStartDate:
                  type: string
                  format: date-time
                  description: Az az időpont amikor az adategyeztetés szüksége felmerült
                checkEndDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az ügyfél adategyeztetés befejeződött
                defaultFeePeriod:
                  type: integer
                  format: int32
                  default: 1
                  description: Ez az fizetési gyakoriság lesz beálítva a következő szolgáltatás megrendelésekor (1, 3, 6, 12 hónap).
                balance:
                  type: integer
                  format: int32
                  default: 0
                  description: Az ügyfél által befizetett, de még díj rendezésére fel nem használt összeg.
                balanceDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor utoljára aktualizálva lett az Egyenleg mező értéke.
                primaryCardType:
                  type: string
                  description: Az ügyfél személyes azonosítására használt irat típusa (pl. személyi igazolvány)
                primaryCardNumber:
                  type: string
                  description: Az ügyfél személyes azonosítására használt irat (pl. személyi igazolvány) azonosító száma
                secondaryCardType:
                  type: string
                  description: Az ügyfél személyes azonosítására használt másodlagos irat típusa (pl. jogosítvány)
                secondaryCardNumber:
                  type: string
                  description: Az ügyfél személyes azonosítására használt másodlagos irat (pl. jogosítvány) azonosító száma
                suspendDate:
                  type: string
                  format: date-time
                  description: Az utolsó megrendelés nem fizetés miatti letiltás időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
                modifyReason:
                  type: string
                  description: "Az utolsó módosítás milyen funkció miatt történt (pl: IMPORT, ADMIN)"
                reasonReference:
                  type: integer
                  format: int32
                  description: "A módosításhoz kapcsolódó referencia azonosító (pl: ha a modifyReason=IMPORT, akkor az adott import állományhoz tartozó invoicingEventlogId)"
                reasonReferenceLine:
                  type: integer
                  format: int32
                  description: Ha a módosítás import állomány miatt keletkezett, akkor az adott csv állomány hányadik sora a forrás adat
                userName:
                  type: string
                  description: Kalkulált mező! Az ügyfél neve a lastName+firstName alapján, hogy a névtöredékre keresési műveletek gyorsíthatók legyenek index-el.
                stamp:
                  type: string
                  description: Az EESZT rendszerben használható orvosi pecsét azonosító száma
                eesztBindingDate:
                  type: string
                  format: date-time
                  description: Az a dátum, amikor megtörtént az ügyfél EESZT rendszerhez rendelése
                eesztOrganization:
                  type: string
                  description: Ha az adott ügyfél orvos, akkor az az EESZT szervetei azonosító (Exxxx érték), ami mutatja, hogy mely szervezet nevében végzi az adatok feltöltését
                isEesztUploader:
                  type: boolean
                  description: Értéke true, ha az ügyfél olyan orvos, aki tölt fel adatokat az EESZT rendszerbe
                inviteDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az adott ügyfelet előregisztrálta a meghívó orvos
                okfoPlannedEndDate:
                  type: string
                  format: date-time
                  description: Az adott ügyfél számára a tervezett OKFŐ projekt részvétel befejezési dátum
                okfoEndDate:
                  type: string
                  format: date-time
                  description: Az adott ügyfél számára a tényleges OKFŐ projekt részvétel befejezési dátum
                mustChangePassword:
                  type: boolean
                  description: Ha értéke true, akkor a következő login során kötelező a kliens programnak kierőszakolnia, hogy az ügyfél lecserélje a jelszavát
                okfoEndRating:
                  type: string
                  description: Az Okfő projekt lezárásakor a bevonó orvos által tett értékelés(i kód) - pl. SUCCESSFUL, FAILED
                okfoEndComment:
                  type: string
                  description: Az Okfő projekt lezárásakor a bevonó orvos által tett szöveges megjegyzés
                externalId:
                  type: integer
                  format: int32
                  description: Az adott ügyfél külső rendszerbeli azonosítója (pl. eeszt miatt az interfész rendszerbeli azonosító)
                eesztDisabled:
                  type: boolean
                  description: Ha értéke true, akkor technikai okok miatt az adott ügyfél semmilyen adata nem kerülhet fel az EESZT rendszerbe (pl. azért, mert technikai vagy teszt ügyfél)
                modifierId:
                  type: integer
                  description: User kapcsoló mezője
                inviterUserId:
                  type: integer
                  description: Melyik orvos végezte az előregisztrációt erre az ügyfélre
              required:
                - userId
                - firstName
                - lastName
                - email
                - language
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/User"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: User
    delete:
      summary: Felhasználó törlése
      description: Nem implementált!<br>Mivel e rendszerben a felhasználók törlése helyett csak deperszonalizálás zajlik, ezért a felhasználó fizikai törlését csak direkt adatbázis művelettel lehet kezdeményezni úgy, hogy előtte a megfelelő archiválási műveleteket végrehajtotta a rendszer.
      operationId: adminDeleteUser
      parameters:
        - in: path
          name: userId
          description: A törlendő User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-base-domain: User
  /admin/users/{userId}/unregisterUser:
    delete:
      summary: Felhasználó regisztrációjának megszüntetése
      description: Az adott felhasználó regisztrált állapotának megszüntetése, a hozzá kapcsolható személyes információk deperszonalizálása.<br>Abban az esetben használatos, ha pl. a felhasználó már törölte a telefonjáról az alkalmazást, de mégis ragaszkodik hozzá, hogy törlődjenek az adatai. Ilyenkor megfelelő személyi hitelesítést követően ezzel a funkcióval van lehetősége az adminisztrátornak az adat deperszonalizáció kezdeményezésére.<br>(A felhasználó törlését csak direkt adatbázis művelettel lehet kezdeményezni úgy, hogy előtte a megfelelő archiválási műveleteket végrehajtotta a rendszer.)
      operationId: adminUnregisterUser
      parameters:
        - in: path
          name: userId
          description: A törlendő User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-responses:
        "409":
          #---
          "USER_NOT_FOUND": "Az adott ügyfél nem található a rendszerben!"
          "DEPERSONALIZATION_CONFLICT": "A felhasználó deregisztrálása sikertelen!"
      x-base-domain: User
  /admin/users/{userId}/addUserToGroup:
    post:
      summary: Felhasználó csoporthoz adása
      description: Egy felhasználó hozzáadása valamely felhasználói csoporthoz. (De a csoport típusa nem lehet GROUP_SYSADMIN, GROUP_ADMIN, GROUP_DOCTOR, GROUP_DSKILL_xxx)
      operationId: adminAddUserToGroup2
      parameters:
        - in: path
          name:  userId
          description: A csoporthoz adandó User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Az adott User group és User összerendelés adatai
        content:
          'application/json':
            schema:
              properties:
                group:
                  type: string
                  description: annak a csoportnak az azonosítója, amihez hozzá kell rendelni a felhasználót (ebben a funkcióban az érték nem lehet GROUP_DOCTOR vagy GROUP_ADMIN vagy GROUP_SYSADMIN, mert ezekre van külön API funkció más elérésen keresztül)
                comment:
                  type: string
                  description: A csoporthoz rendelésre vonatkozó megjegyzés szövege
            examples:
              kórház csoport:
                value:
                  group: "GROUP_SPEC_HOSPITAL"
              sportklub csoport:
                value:
                  group: "GROUP_SPEC_SPORTCLUB"
              háziorvosi szakkonzulens csoport:
                value:
                  group: "GROUP_SPEC_SPECIALISTDOCTOR"
                  comment: "Háziorvosi szakkonzulens"
              kiértékelési szakkonzulens csoport:
                value:
                  group: "GROUP_SPEC_SPECIALISTANALYZER"
                  comment: "Kiértékelési szakkonzulens"
              INVITENODEVICE csoport:
                value:
                  group: "GROUP_SPEC_INVITENODEVICE"
                  comment: "Speciális eszköz nélküli páciens meghívó"
              INVITEAUTOREG csoport:
                value:
                  group: "GROUP_SPEC_INVITEAUTOREG"
                  comment: "Speciális automatikusan pácienst aktiváló meghívó"
        required: true
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - sysadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-responses:
        "406":
          "GROUP_NOT_VALID": "Hiányzik a User csoport!"
          "SPEC_GROUP_ERROR": "Ez a speciális group nem kezelhető ezzel a funkcióval!"
      x-base-domain: UserGroup
  /admin/users/{userId}/deleteUserFromGroup/{group}:
    delete:
      summary: Felhasználó törlése csoportból
      description: Egy felhasználó törlése valamely felhasználói csoportból. (De a csoport típusa nem lehet GROUP_SYSADMIN, GROUP_ADMIN, GROUP_DOCTOR, GROUP_DSKILL_xxx)
      operationId: adminDeleteUserFromGroup2
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: group
          description: annak a csoportnak az azonosítója, amiből törölni kell a felhasználót (ebben a funkcióban az érték nem lehet GROUP_DOCTOR vagy GROUP_ADMIN vagy GROUP_SYSADMIN vagy GROUP_DSKILL_xxx, mert ezekre van külön API funkció más elérésen keresztül)
          required: true
          schema:
            type: string
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - sysadmin
      tags:
        - Admin
        - CAdmin
      x-responses:
        "406":
          "SPEC_GROUP_ERROR": "Ez a speciális group nem kezelhető ezzel a funkcióval!"
          "NOT_IN_GROUP": "Ez a felhasználó nincs is benne a csoportban!"
      x-base-domain: UserGroup
  /admin/users/{userId}/addDoctorSkill:
    post:
      summary: Orvos szakterülethez hozzáadása
      description: Egy már regisztrált orvos adott szakterülethez rendelése (azaz az adot GROUP_DSKILL_xxx csoportba berakása).
      operationId: adminAddDoctorSkill
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Az adott Orvos User berakása a megadott Orvos szakmai csoportba (GROUP_DSKILL_xxx)
        content:
          'application/json':
            schema:
              type: object
              properties:
                skillType:
                  type: string
                  description: annak az orvos szakmai csoportnak az azonosítója, amihez hozzá kell rendelni a felhasználót (ebben a funkcióban az érték mindenképpen GROUP_DSKILL_xxx formátumú kell legyen)
        required: true
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
      tags:
        - Admin
        - CAdmin
      x-base-domain: UserGroup
  /admin/users/{userId}/deleteDoctorSkill/{skill}:
    delete:
      summary: Orvos szakterületének kitörlése
      description: Egy már regisztrált orvos adott szakterületére vonatkozó bejegyzés megszüntetése (azaz az adot GROUP_DSKILL_xxx csoportból törlése).
      operationId: adminDeleteDoctorSkill
      parameters:
        - in: path
          name: userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: skill
          description: annak az orvos szakmai csoportnak az azonosítója, amiből törölni kell a felhasználót (ebben a funkcióban az érték mindenképpen GROUP_DSKILL_xxx formátumú kell legyen)
          required: true
          schema:
            type: string
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
      tags:
        - Admin
        - CAdmin
      x-responses:
        "406":
          #---
          "SKILL_NOT_FOUND": "Az adott szakértelem nem található!"
      x-base-domain: UserGroup
  /admin/users/{userId}/generalDoctor/{doctorId}/addPatient/{userId}:
    post:
      summary: Kezelőorvos hozzáadása adott ügyfélhez
      description: Kezelőorvos hozzákapcsolása adott ügyfélhez.
      operationId: adminGeneralDoctorAddPatient
      parameters:
        - in: path
          name:  doctorId
          description: A kezelőorvos userId azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name:  userId
          description: A páciens userId azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
      tags:
        - Admin
        - CAdmin
      x-base-domain: UserGroup
  /admin/users/{userId}/generalDoctor/{doctorId}/revokePatient/{userId}:
    delete:
      summary: Kezelőorvosi kapcsolat visszavonása
      description: Adott kezelőorvos és adott páciens kezelőorvosi kapcsolatának megszüntetése.
      operationId: adminGeneralDoctorRevokePatient
      parameters:
        - in: path
          name:  doctorId
          description: A kezelőorvos userId azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name:  userId
          description: A páciens userId azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
      tags:
        - Admin
        - CAdmin
      x-base-domain: UserGroup
  /admin/users/{userId}/registerAsDoctor:
    post:
      summary: Felhasználó orvosként regisztrálása
      description: Egy már regisztrált felhasználó hozzáadása az orvosok csoportjához.
      operationId: adminRegisterAsDoctor
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Az adott User berakása az Orvosok (GROUP_DOCTOR) csoportjába és megadott Orvosszakmai csoportba (GROUP_DSKILL_xxx)
        content:
          'application/json':
            schema:
              type: object
              properties:
                skillType:
                  type: string
                  description: annak az orvos szakmai csoportnak az azonosítója, amihez hozzá kell rendelni a felhasználót (ebben a funkcióban az érték mindenképpen GROUP_DSKILL_xxx formátumú kell legyen)
            examples:
              Orvosi szerepkörbe besorolás (traumatológusnak):
                value:
                  skillType: "GROUP_DSKILL_TRAUMATOLOGY"
        required: true
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-base-domain: UserGroup
  /admin/users/{userId}/registerAsGroupApprover:
    post:
      summary: Orvos csoportos jóváhagyóként regisztrálása
      description: Egy már regisztrált orvos számára a csoportos kiértékelés jóváhagyási jog megadása.
      operationId: adminRegisterAsGroupApprover
      parameters:
        - in: path
          name:  userId
          description: Az orvos felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
            - officer
      tags:
        - Admin
        - CAdmin
        - OfficeManager
      x-base-domain: UserGroup
  /admin/users/{userId}/unregisterAsDoctor:
    delete:
      summary: Felhasználó törlése az orvosok közül
      description: Az adott orvos törlése az orvosok csoportjából (és az összes orvosi szakmai csoportból is).
      operationId: adminUnregisterAsDoctor
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
      tags:
        - Admin
        - CAdmin
      x-base-domain: UserGroup
  /admin/users/{userId}/unregisterAsGroupApprover:
    delete:
      summary: Csoportos jóváhagyási szerep visszavonása az orvostól
      description: Az adott orvos csoportos kiértékelés jóváhagyási jogának törlése.
      operationId: adminUnregisterAsGroupApprover
      parameters:
        - in: path
          name:  userId
          description: Az orvos felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - cadmin
      tags:
        - Admin
        - CAdmin
      x-base-domain: UserGroup
  /admin/users/{userId}/registerAsOfficer:
    post:
      summary: Felhasználó regisztrálása officer-ként
      description: Egy már regisztrált felhasználó számára a rendszer adminisztrátor (officer) szerepkör megadása.
      operationId: adminRegisterAsOfficer
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-responses:
        "404":
          "NOT_FOUND": "Nem található ez a felhasználó!"
        "406":
          "ROLE_HAS_ALREADY": "Ennek a felhasználónak van már officer szerepköre!"
      x-base-domain: UserGroup
  /admin/users/{userId}/unregisterAsOfficer:
    delete:
      summary: Felhasználó törlése az officer-ek közül
      description: Az adott felhasználó rendszer adminisztrátor (officer) szerepkörének visszavonása.
      operationId: adminUnregisterAsOfficer
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-responses:
        "404":
          "NOT_FOUND": "Nem található ez a felhasználó!"
        "406":
          "USER_NOT_OFFICER": "Ennek a felhasználónak nincsen officer szerepköre!"
      x-base-domain: UserGroup
  /admin/users/{userId}/registerAsAdmin:
    post:
      summary: Felhasználó adminként regisztrálása
      description: Egy már regisztrált felhasználó hozzáadása az adminok csoportjához.
      operationId: adminRegisterAsAdmin
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Admin
      x-base-domain: UserGroup
  /admin/users/{userId}/unregisterAsAdmin:
    delete:
      summary: Felhasználó törlése az adminok közül
      description: Az adott ügyfél törlése az adminisztrátorok csoportjából.
      operationId: adminUnregisterAsAdmin
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Admin
      x-base-domain: UserGroup
  /admin/users/{userId}/registerAsInsider:
    post:
      summary: Felhasználó belsősként regisztrálása
      description: Egy már regisztrált felhasználó hozzáadása a belsős (insider) felhasználók csoportjához.
      operationId: adminRegisterAsInsider
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Config
        - Admin
      x-base-domain: UserGroup
  /admin/users/{userId}/unregisterAsInsider:
    delete:
      summary: Felhasználó törlése a belsősök közül
      description: Az adott ügyfél törlése a belsős (insider) felhasználók csoportjából.
      operationId: adminUnregisterAsInsider
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Config
        - Admin
      x-base-domain: UserGroup
  /admin/users/{userId}/registerAsDvisitor:
    post:
      summary: Felhasználó orvoslátogatóként regisztrálása
      description: Egy már regisztrált felhasználó hozzáadása az orvoslátogatók csoportjához.
      operationId: adminRegisterAsDvisitor
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-base-domain: UserGroup
  /admin/users/{userId}/unregisterAsDvisitor:
    delete:
      summary: Felhasználó törlése az orvoslátogatók közül
      description: Az adott ügyfél törlése az orvoslátogatók csoportjából.
      operationId: adminUnregisterAsDvisitor
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-base-domain: UserGroup
  /admin/users/{userId}/startUserChecking:
    get:
      summary: Ügyfél ellenőrzés elkezdése
      description: A számlázáshoz kapott ügyfél külső adatok alapján az információk manuális ellenőrzésének elkezdése.
      operationId: adminStartUserChecking
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - Bills
        - OfficeManager
      x-responses:
        "406":
          "USER_CHECKING_STARTED_YET": "Érvénytelen ügyfél azonosító!"
  /admin/users/{userId}/endUserChecking:
    post:
      summary: Ügyfél ellenőrzés befejezése
      description: Az ügyfél információk manuális ellenőrzése befejezve.<br>
      operationId: adminEndUserChecking
      parameters:
        - in: path
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - Bills
        - OfficeManager
      x-responses:
        "406":
          "USER_CHECKING_STOPPED": "Érvénytelen ügyfél azonosító!"
  /admin/users/createUserGroup:
    post:
      summary: Új felhasználói csoport
      description: Új felhasználói csoport létrehozása. (Valójában egy új rekord felvétele a szótár állományba a USER_GROUP_TYPE vagy a COMPETENCY_CENTER_TYPE csoportba.)
      operationId: adminCreateUserGroup
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: "A felhasználói csoport azonosító kódja (pl: GROUP_TESTER)"
                name:
                  type: string
                  description: A felhasználói csoport elnevezése
              required:
                - code
                - name
        required: true
      responses:
        '200': # OK
          $ref: "#/components/schemas/Dictionary"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
  /admin/dictionarys:
    get:
      summary: Szótár lista lekérdezése
      operationId: adminGetDictionaryList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dictionary"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - sysadmin
      tags:
        - Config
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Dictionary
    post:
      summary: Szótár létrehozása
      operationId: adminAddDictionary
      requestBody:
        description: Az új Dictionary adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Dictionary"
              description: A rendszer azonosító, vezérlő és csoportosító információinak azonosítói, nevei és (választáskori) értékei.
              properties:
                dictionaryId:
                  type: integer
                  description: Dictionary egyedi azonosítója
                dictionaryGroup:
                  type: string
                  description: "Adott szótár elemek összefogására alkalmas csoport azonosító. (Pl: városok)"
                index:
                  type: integer
                  format: int32
                  description: A szótár csoporton belül hányadik elem. (Lista szerű megjelenítéskor van jelentősége.)
                code:
                  type: string
                  description: A szótár elem könnyen használható statikus, szöveges azonosítója. (Pl. a városok esetében az irányítószám, string formában)
                name:
                  type: string
                  description: "A szótárkód megjeleníthető, értelemes elnevezése. (Pl: városok esetében a helység neve)"
                value:
                  type: string
                  description: "A szótár elem értéke. Opcionális, de némely szótár elem esetében lehet haszna, pl: valamilyen az adott elemhez kötődő vezérlési információ."
              required:
                - dictionaryId
                - dictionaryGroup
                - code
                - name
              type: object
        required: true
      responses:
        '200': # A létrehozás sikeresen megtörtént
          description: A létrehozás sikeresen megtörtént
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Dictionary"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Config
      x-implementation: "x-create"
      x-base-domain: Dictionary
  /admin/dictionarys/{dictionaryId}:
    get:
      summary: Szótár adatainak lekérdezése
      operationId: adminGetDictionaryById
      parameters:
        - in: path
          name: dictionaryId
          description: A keresett Dictionary egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Dictionary"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - sysadmin
      tags:
        - Config
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Dictionary
    post:
      summary: Szótár adatainak módosítása
      operationId: adminUpdateDictionary
      parameters:
        - in: path
          name:  dictionaryId
          description: A módosítandó Dictionary egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Dictionary"
              description: A rendszer azonosító, vezérlő és csoportosító információinak azonosítói, nevei és (választáskori) értékei.
              properties:
                dictionaryId:
                  type: integer
                  description: Dictionary egyedi azonosítója
                dictionaryGroup:
                  type: string
                  description: "Adott szótár elemek összefogására alkalmas csoport azonosító. (Pl: városok)"
                index:
                  type: integer
                  format: int32
                  description: A szótár csoporton belül hányadik elem. (Lista szerű megjelenítéskor van jelentősége.)
                code:
                  type: string
                  description: A szótár elem könnyen használható statikus, szöveges azonosítója. (Pl. a városok esetében az irányítószám, string formában)
                name:
                  type: string
                  description: "A szótárkód megjeleníthető, értelemes elnevezése. (Pl: városok esetében a helység neve)"
                value:
                  type: string
                  description: "A szótár elem értéke. Opcionális, de némely szótár elem esetében lehet haszna, pl: valamilyen az adott elemhez kötődő vezérlési információ."
              required:
                - dictionaryId
                - dictionaryGroup
                - code
                - name
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Dictionary"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Config
      x-implementation: "x-replaceById"
      x-base-domain: Dictionary
    delete:
      summary: Szótár törlése
      operationId: adminDeleteDictionary
      parameters:
        - in: path
          name: dictionaryId
          description: A törlendő Dictionary egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - sysadmin
      tags:
        - Config
      x-implementation: "x-delete"
      x-base-domain: Dictionary
  /admin/eventlogs:
    get:
      summary: Általános Esemény napló lista lekérdezése
      operationId: adminGetEventlogList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Eventlog"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - sysadmin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Eventlog
    post:
      summary: Általános Esemény napló létrehozása
      operationId: adminAddEventlog
      requestBody:
        description: Az új Eventlog adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Eventlog"
              description: A rendszer működésével kapcsolatos események körülményei, adatai.
              properties:
                eventlogId:
                  type: integer
                  description: Eventlog egyedi azonosítója
                eventType:
                  type: string
                  description: Olyan szótárkód, ami az esemény típusát jelenti.
                eventSubtype:
                  type: string
                  description: Az esemény típuson belüli altípus, ami könnyebbé teszi a szűrést és a csoportosítást.
                eventData:
                  type: string
                  description: Az eseményhez tartozó pontosító adat.
                eventTime:
                  type: string
                  format: date-time
                  description: Az esemény bekövetkezésének dátuma és időpontja.
                userId:
                  type: integer
                  description: Melyik felhasználó tevékenysége miatt keletkezett az esemény.
                deviceId:
                  type: integer
                  description: Melyik eszközre vonatkozik az esemény.
              required:
                - eventlogId
                - eventType
                - eventData
                - eventTime
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Eventlog"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Eventlog
  /admin/eventlogs/{eventlogId}:
    get:
      summary: Általános Esemény napló adatainak lekérdezése
      operationId: adminGetEventlogById
      parameters:
        - in: path
          name: eventlogId
          description: A keresett Eventlog egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Eventlog"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Eventlog
  /admin/userGroups:
    get:
      summary: Felhasználói csoporthoz rendelések lekérdezése
      operationId: adminGetUserGroupList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserGroup"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: UserGroup
    post:
      summary: Felhasználó csoporthoz adása
      description: Egy felhasználó hozzáadása valamely felhasználói csoporthoz.
      operationId: adminAddUserToGroup
      requestBody:
        description: Az új User group adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserGroup"
              description: A felhasználók különböző szempontok szerinti csoportosítása.
              properties:
                userGroupId:
                  type: integer
                  description: User group egyedi azonosítója
                groupType:
                  type: string
                  description: Olyan szótárkód, ami a csoport típusát jelenti.
                index:
                  type: integer
                  format: int32
                  description: A csoporton belüli pozíció (amit pl. megjelenítési sorrendként lehet használni).
                patientId:
                  type: integer
                  format: int32
                  description: Ha a csoport típus<br>- GROUP_DROLE_GENERAL, akkor azt tartalmazza, hogy melyik páciensnek a kezelőorvosa<br>- GROUP_PCROLE_RELATIVE, akkor hogy melyik páciensnek a hozzátartozója
                fromDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól érvényes az adott csoportba tartozás.
                toDate:
                  type: string
                  format: date-time
                  description: Az az időpont, ameddig érvényes az adott csoportba tartozás.
                comment:
                  type: string
                  description: Az adott csoport kapcsolathoz tartozó megjegyzés (pl. inviteGeneralDoctor esetén az adott ügyfél adott orvossal kapcsolatos leírás adata)
                groupRole:
                  type: string
                  description: A userId-ben lévő ügyfél az adott csoporton belül milyen szerepet tölt be (pl. csoporttag MEMBER, csoport vezető - LEADER, intézmény vezető - BOSS, csoport látogató - GROUPVISITOR). Elsősorban a csoportos mérések szervezeti felépítésének tükrözésére alkalmas.<br>Alapértelmezésben az értéke üres, azaz egyszerű csoport tag.
                userId:
                  type: integer
                  description: A csoporthoz tartozó felhasználó azonosítója
                modifierId:
                  type: integer
                  description: Csoporthoz rendelést végző (vagy megváltoztató) felhasználó azonosítója
              required:
                - userGroupId
                - groupType
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserGroup"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
        - CAdmin
      x-implementation: "x-create"
      x-base-domain: UserGroup
  /admin/userGroups/{userGroupId}:
    get:
      summary: Felhasználói csoporthoz rendelés lekérdezése
      description: Az adott felhasználó adott csoportbeli adatának lekérdezése (azaz a csoporton belüli pozíciójának lekérdezése).<br>
      operationId: adminGetUserGroupById
      parameters:
        - in: path
          name: userGroupId
          description: A keresett User group egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserGroup"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
        - CAdmin
      x-implementation: "x-findById"
      x-base-domain: UserGroup
    post:
      summary: Felhasználói csoporthoz rendelés módosítása
      description: Az adott felhasználó adott csoportbeli adatának módosítása (a csoporton belüli pozíciójának megváltoztatása).<br>
      operationId: adminUpdateUserToGroup
      parameters:
        - in: path
          name:  userGroupId
          description: A módosítandó User group egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserGroup"
              description: A felhasználók különböző szempontok szerinti csoportosítása.
              properties:
                userGroupId:
                  type: integer
                  description: User group egyedi azonosítója
                groupType:
                  type: string
                  description: Olyan szótárkód, ami a csoport típusát jelenti.
                index:
                  type: integer
                  format: int32
                  description: A csoporton belüli pozíció (amit pl. megjelenítési sorrendként lehet használni).
                patientId:
                  type: integer
                  format: int32
                  description: Ha a csoport típus<br>- GROUP_DROLE_GENERAL, akkor azt tartalmazza, hogy melyik páciensnek a kezelőorvosa<br>- GROUP_PCROLE_RELATIVE, akkor hogy melyik páciensnek a hozzátartozója
                fromDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól érvényes az adott csoportba tartozás.
                toDate:
                  type: string
                  format: date-time
                  description: Az az időpont, ameddig érvényes az adott csoportba tartozás.
                comment:
                  type: string
                  description: Az adott csoport kapcsolathoz tartozó megjegyzés (pl. inviteGeneralDoctor esetén az adott ügyfél adott orvossal kapcsolatos leírás adata)
                groupRole:
                  type: string
                  description: A userId-ben lévő ügyfél az adott csoporton belül milyen szerepet tölt be (pl. csoporttag MEMBER, csoport vezető - LEADER, intézmény vezető - BOSS, csoport látogató - GROUPVISITOR). Elsősorban a csoportos mérések szervezeti felépítésének tükrözésére alkalmas.<br>Alapértelmezésben az értéke üres, azaz egyszerű csoport tag.
                userId:
                  type: integer
                  description: A csoporthoz tartozó felhasználó azonosítója
                modifierId:
                  type: integer
                  description: Csoporthoz rendelést végző (vagy megváltoztató) felhasználó azonosítója
              required:
                - userGroupId
                - groupType
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserGroup"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: UserGroup
    delete:
      summary: Felhasználói csoporthoz rendelés törlése
      description: Az adott felhasználó csoporthoz rendelés törlése.
      operationId: adminDeleteUserFromGroup
      parameters:
        - in: path
          name: userGroupId
          description: A törlendő User group egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: UserGroup
  /admin/calendars:
    get:
      summary: Naptár lista lekérdezése
      operationId: adminGetCalendarList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Calendar"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Calendar
    post:
      summary: Naptár létrehozása
      operationId: adminAddCalendar
      requestBody:
        description: Az új Calendar adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Calendar"
              description: Az orvosok ügyeleti rendjének és a felhasználók különböző időponthoz kötődő előírásainak és tennivalóinak naptára.
              properties:
                calendarId:
                  type: integer
                  description: Calendar egyedi azonosítója
                startTime:
                  type: string
                  format: date-time
                  description: Az adott naptár esemény kezdete
                endTime:
                  type: string
                  format: date-time
                  description: A naptár esemény befejeződési időpontja
                timeLength:
                  type: integer
                  format: int32
                  description: Az esemény hossza (percekben számolva) - kalkulált mező a startTime-ból és az endTime-ból
                eventType:
                  type: string
                  description: "Az adott időponthoz kötődő esemény típusa (pl: orvosi ügyelet, adott páciensnek szóló mérési előírás, figyelmeztetés megjelenítés, stb.)."
                extendedData:
                  type: string
                  description: A naptári időponthoz kapcsolt kiegészítő információ.
                status:
                  type: string
                  description: "A naptári esemény állapota, pl: aktív, inaktív, befejezett."
                createDate:
                  type: string
                  format: date-time
                  description: A naptári esemény létrehozásának időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptári esemény utolsó módosításának időpontja
                acceptanceDate:
                  type: string
                  format: date-time
                  description: Ha az adott esemény típus elfogadásra kötelezett (pl. orvosi ügyeleti esemény), akkor az az időpont, amikor az esemény tulajdonosa (a cél személy) elfogadta
                preWarningTime:
                  type: string
                  format: date-time
                  description: Az adott esemény (pl. ügyelet) kezdete előtt kiküldött figyelmeztető mail időpontja
                forcedWarningTime:
                  type: string
                  format: date-time
                  description: Az adott esemény kezdetekor (pl. ügyeleti időpont elkezdődésekor, ha még nincs bejelentkezve az adott orvos) küldött felszólító mail kiküldésének időpontja
                commentReference:
                  type: integer
                  format: int32
                  description: Pl. amikor visszautasítja a tervezett ügyeleti eseményt az orvos, akkor kötelező hozzáfűznie egy szöveges megjegyzést<br>A megjegyzés szövege az Eventlog táblában tárolódik, ebben mezőben pedig az adott EVT_REJECT_CALENDAREVENT típusú rekord egyedi azonosítója van.
                isChanged:
                  type: boolean
                  description: Ha értéke true, akkor olyan változás történt az esemény adataiban, ami miatt ki kell értesíteni a targetUserId azonosítójú orvost (pl. új ügyeleti esemény, vagy megváltozott az ügyelet hossza)
                completionStart:
                  type: string
                  format: date-time
                  description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor ténylegesen végrehajtotta az időpontra előírt tennivalót.<br>Orvosi ügyeleti eseménynél itt található, hogy mikor lépett be az ügyeletes orvos.
                completionEnd:
                  type: string
                  format: date-time
                  description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor befejezte az időpontra előírt tennivalót. Elsősorban orvosi ügyeleti eseménynél van jelentősége, mert itt található, hogy mikor tevékenykedett legutóbb vagy lépett ki az ügyeletes orvos.
                completionLength:
                  type: integer
                  format: int32
                  description: Az elvégzés hossza (percekben számolva) - kalkulált mező a completionStart-ból és a completionEnd-ből.<br>De ha az esemény orvosi ügyelet, akkor az adott ügyelet alatt ténylegesen bejelentkezve töltött időt tartalmazza!
                completionPercent:
                  type: integer
                  format: int32
                  description: "Az esemény hosszához képest mennyire van kész az elvégzés - kalkulált mező: a startTime, endTime, completionStart, completionEnd arányból számítódik.<br>Elsősorban az orvosi ügyeletek elszámolhatósága miatt van jelentősége."
                adhocType:
                  type: string
                  description: "Ha értéke 'ADHOC', akkor automatikusan növekvő nem előre tervezett esemény (pl: adhoc orvosi jelentkezés ügyeletes nélküli időszakra). Ha értéke 'ADHOCFIX', akkor pedig fix vég időpontú nem előre tervezett esemény (pl. mert az orvos jelezte a kérelemkor, hogy meddig tudja vállalni az ügyeletet)."
                targetUserId:
                  type: integer
                  description: Melyik felhasználóra vonatkozik a naptár bejegyzés
                regulationId:
                  type: integer
                  description: Melyik előírásra vonatkozik a naptár bejegyzés.
                userGroupId:
                  type: integer
                  description: Melyik felhasználó csoportra vonatkozik a naptár esemény
                creatorId:
                  type: integer
                  description: Eseményt létrehozó felhasználó azonosítója
                modifierId:
                  type: integer
                  description: Módosító felhasználó azonosítója
              required:
                - calendarId
                - startTime
                - eventType
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Calendar"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Calendar
  /admin/calendars/{calendarId}:
    get:
      summary: Naptár adatainak lekérdezése
      operationId: adminGetCalendarById
      parameters:
        - in: path
          name: calendarId
          description: A keresett Calendar egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Calendar"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Calendar
    post:
      summary: Naptár adatainak módosítása
      operationId: adminUpdateCalendar
      parameters:
        - in: path
          name:  calendarId
          description: A módosítandó Calendar egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Calendar"
              description: Az orvosok ügyeleti rendjének és a felhasználók különböző időponthoz kötődő előírásainak és tennivalóinak naptára.
              properties:
                calendarId:
                  type: integer
                  description: Calendar egyedi azonosítója
                startTime:
                  type: string
                  format: date-time
                  description: Az adott naptár esemény kezdete
                endTime:
                  type: string
                  format: date-time
                  description: A naptár esemény befejeződési időpontja
                timeLength:
                  type: integer
                  format: int32
                  description: Az esemény hossza (percekben számolva) - kalkulált mező a startTime-ból és az endTime-ból
                eventType:
                  type: string
                  description: "Az adott időponthoz kötődő esemény típusa (pl: orvosi ügyelet, adott páciensnek szóló mérési előírás, figyelmeztetés megjelenítés, stb.)."
                extendedData:
                  type: string
                  description: A naptári időponthoz kapcsolt kiegészítő információ.
                status:
                  type: string
                  description: "A naptári esemény állapota, pl: aktív, inaktív, befejezett."
                createDate:
                  type: string
                  format: date-time
                  description: A naptári esemény létrehozásának időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptári esemény utolsó módosításának időpontja
                acceptanceDate:
                  type: string
                  format: date-time
                  description: Ha az adott esemény típus elfogadásra kötelezett (pl. orvosi ügyeleti esemény), akkor az az időpont, amikor az esemény tulajdonosa (a cél személy) elfogadta
                preWarningTime:
                  type: string
                  format: date-time
                  description: Az adott esemény (pl. ügyelet) kezdete előtt kiküldött figyelmeztető mail időpontja
                forcedWarningTime:
                  type: string
                  format: date-time
                  description: Az adott esemény kezdetekor (pl. ügyeleti időpont elkezdődésekor, ha még nincs bejelentkezve az adott orvos) küldött felszólító mail kiküldésének időpontja
                commentReference:
                  type: integer
                  format: int32
                  description: Pl. amikor visszautasítja a tervezett ügyeleti eseményt az orvos, akkor kötelező hozzáfűznie egy szöveges megjegyzést<br>A megjegyzés szövege az Eventlog táblában tárolódik, ebben mezőben pedig az adott EVT_REJECT_CALENDAREVENT típusú rekord egyedi azonosítója van.
                isChanged:
                  type: boolean
                  description: Ha értéke true, akkor olyan változás történt az esemény adataiban, ami miatt ki kell értesíteni a targetUserId azonosítójú orvost (pl. új ügyeleti esemény, vagy megváltozott az ügyelet hossza)
                completionStart:
                  type: string
                  format: date-time
                  description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor ténylegesen végrehajtotta az időpontra előírt tennivalót.<br>Orvosi ügyeleti eseménynél itt található, hogy mikor lépett be az ügyeletes orvos.
                completionEnd:
                  type: string
                  format: date-time
                  description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor befejezte az időpontra előírt tennivalót. Elsősorban orvosi ügyeleti eseménynél van jelentősége, mert itt található, hogy mikor tevékenykedett legutóbb vagy lépett ki az ügyeletes orvos.
                completionLength:
                  type: integer
                  format: int32
                  description: Az elvégzés hossza (percekben számolva) - kalkulált mező a completionStart-ból és a completionEnd-ből.<br>De ha az esemény orvosi ügyelet, akkor az adott ügyelet alatt ténylegesen bejelentkezve töltött időt tartalmazza!
                completionPercent:
                  type: integer
                  format: int32
                  description: "Az esemény hosszához képest mennyire van kész az elvégzés - kalkulált mező: a startTime, endTime, completionStart, completionEnd arányból számítódik.<br>Elsősorban az orvosi ügyeletek elszámolhatósága miatt van jelentősége."
                adhocType:
                  type: string
                  description: "Ha értéke 'ADHOC', akkor automatikusan növekvő nem előre tervezett esemény (pl: adhoc orvosi jelentkezés ügyeletes nélküli időszakra). Ha értéke 'ADHOCFIX', akkor pedig fix vég időpontú nem előre tervezett esemény (pl. mert az orvos jelezte a kérelemkor, hogy meddig tudja vállalni az ügyeletet)."
                targetUserId:
                  type: integer
                  description: Melyik felhasználóra vonatkozik a naptár bejegyzés
                regulationId:
                  type: integer
                  description: Melyik előírásra vonatkozik a naptár bejegyzés.
                userGroupId:
                  type: integer
                  description: Melyik felhasználó csoportra vonatkozik a naptár esemény
                creatorId:
                  type: integer
                  description: Eseményt létrehozó felhasználó azonosítója
                modifierId:
                  type: integer
                  description: Módosító felhasználó azonosítója
              required:
                - calendarId
                - startTime
                - eventType
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Calendar"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Calendar
    delete:
      summary: Naptár törlése
      operationId: adminDeleteCalendar
      parameters:
        - in: path
          name: calendarId
          description: A törlendő Calendar egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Calendar
  /admin/attachments:
    get:
      summary: Csatolmány lista lekérdezése
      operationId: adminGetAttachmentList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Attachment"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Attachment
    post:
      summary: Csatolmány létrehozása
      operationId: adminAddAttachment
      requestBody:
        description: Az új Attachment adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Attachment"
              description: Csatolt dokumentumok listája
              properties:
                attachmentId:
                  type: integer
                  description: Attachment egyedi azonosítója
                createDate:
                  type: string
                  format: date-time
                  description: A rekord létrehozásának dátuma.
                isAnalyseDoc:
                  type: boolean
                  description: Értéke akkor true, ha ez nem manuálisan csatolt állomány, hanem egy rendszerbeli kiértékelés vagy jegyzőkönyv PDF formára konvertált formája.<br>
                documentId:
                  type: integer
                  description: Melyik dokumentum van csatolva a kiértékeléshez.
                analyseId:
                  type: integer
                  description: Az elemzés, amihez csatolt az adott dokumentum.
                patientId:
                  type: integer
                  description: Annak a páciensnek az azonosítója, akihez tartozik az adott csatolmány. (A kiértékeléshez tartozó dokumentumoknál nincs kitöltve.)
                measurementId:
                  type: integer
                  description: Az adott dokumentum melyik méréshez kapcsolódik
              required:
                - attachmentId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Attachment"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Attachment
  /admin/attachments/{attachmentId}:
    get:
      summary: Csatolmány adatainak lekérdezése
      operationId: adminGetAttachmentById
      parameters:
        - in: path
          name: attachmentId
          description: A keresett Attachment egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Attachment"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Attachment
    post:
      summary: Csatolmány adatainak módosítása
      operationId: adminUpdateAttachment
      parameters:
        - in: path
          name:  attachmentId
          description: A módosítandó Attachment egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Attachment"
              description: Csatolt dokumentumok listája
              properties:
                attachmentId:
                  type: integer
                  description: Attachment egyedi azonosítója
                createDate:
                  type: string
                  format: date-time
                  description: A rekord létrehozásának dátuma.
                isAnalyseDoc:
                  type: boolean
                  description: Értéke akkor true, ha ez nem manuálisan csatolt állomány, hanem egy rendszerbeli kiértékelés vagy jegyzőkönyv PDF formára konvertált formája.<br>
                documentId:
                  type: integer
                  description: Melyik dokumentum van csatolva a kiértékeléshez.
                analyseId:
                  type: integer
                  description: Az elemzés, amihez csatolt az adott dokumentum.
                patientId:
                  type: integer
                  description: Annak a páciensnek az azonosítója, akihez tartozik az adott csatolmány. (A kiértékeléshez tartozó dokumentumoknál nincs kitöltve.)
                measurementId:
                  type: integer
                  description: Az adott dokumentum melyik méréshez kapcsolódik
              required:
                - attachmentId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Attachment"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Attachment
    delete:
      summary: Csatolmány törlése
      operationId: adminDeleteAttachment
      parameters:
        - in: path
          name: attachmentId
          description: A törlendő Attachment egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Attachment
  /admin/documents:
    get:
      summary: Dokumentum lista lekérdezése
      operationId: adminGetDocumentList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Document
    post:
      summary: Dokumentum létrehozása
      operationId: adminAddDocument
      requestBody:
        description: Az új Document adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Document"
              description: Elektronikus dokumentumok
              properties:
                documentId:
                  type: integer
                  description: Document egyedi azonosítója
                documentType:
                  type: string
                  description: "A dokumentum típusát jelző szótárkód, pl: PDF, keskeny PDF, hang állomány, kép állomány, link, html, fájl."
                name:
                  type: string
                  description: A listákban a dokumentum megnevezéseként megjelenő szöveg. (Pácienshez csatolt feltöltött dokumentum esetén itt van a tartalom rövid leírása.)
                path:
                  type: string
                  description: A dokumentum url elérési útja, vagy hivatkozási azonosítója.
                theDocument:
                  type: string
                  format: binary
                  description: Ha nem elérési úton keresztül található meg a dokumentum, akkor ebben a bináris adatban van.
                documentGuid:
                  type: string
                  description: A dokumentum GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az állománynév meghatározására.)
                createDate:
                  type: string
                  format: date-time
                  description: A rekord létrehozásának dátuma.
                pdfConvertDate:
                  type: string
                  format: date-time
                  description: A dokumentum Pdf-é konvertálás időpontja.
                originalFileName:
                  type: string
                  description: A feltöltött dokumentumok esetén az eredeti fájl neve.
                readDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a dokumentum tulajdonosa (azaz a páciens) először megtekintette a dokumentumot.
                mustEesztUpload:
                  type: boolean
                  description: Ha az értéke true, akkor ennek a dokumentumnak a feltöltését el kell végezni az EESZT rendszer felé
                eesztUploadDate:
                  type: string
                  format: date-time
                  description: Mikor történt meg az EESZT rendszerbe a feltöltés
                externalDocumentId:
                  type: string
                  description: "A PrivátDoktoron kívüli külső rendszerbeli azonosítója a dokumentumnak (pl: EESZT dokumentum azonosító, amikor sikeresen lezajlott a feltöltés)"
                documentCathegory:
                  type: string
                  description: A dokumentum kategóriája (pl. anamnézis, template html, stb.)
                groupCode:
                  type: string
                  description: Akkor van kitöltve, ha az adott dokumentum csoporthoz tartozik. Ilyenkor nem csak a dokumentum tulajdonos és a feltöltő, hanem a csoport vezetői is láthatják a dokumentumot.
                ownerId:
                  type: integer
                  description: A dokumentum tulajdonosa (általában a páciens, akiről szól a dokumentum)
                uploaderId:
                  type: integer
                  description: A dokumentum feltöltését végző doktor (vagy esetleg páciens) azonosítója
              required:
                - documentId
                - documentType
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Document
  /admin/documents/{documentId}:
    get:
      summary: Dokumentum adatainak lekérdezése
      operationId: adminGetDocumentById
      parameters:
        - in: path
          name: documentId
          description: A keresett Document egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Document
    post:
      summary: Dokumentum adatainak módosítása
      operationId: adminUpdateDocument
      parameters:
        - in: path
          name:  documentId
          description: A módosítandó Document egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Document"
              description: Elektronikus dokumentumok
              properties:
                documentId:
                  type: integer
                  description: Document egyedi azonosítója
                documentType:
                  type: string
                  description: "A dokumentum típusát jelző szótárkód, pl: PDF, keskeny PDF, hang állomány, kép állomány, link, html, fájl."
                name:
                  type: string
                  description: A listákban a dokumentum megnevezéseként megjelenő szöveg. (Pácienshez csatolt feltöltött dokumentum esetén itt van a tartalom rövid leírása.)
                path:
                  type: string
                  description: A dokumentum url elérési útja, vagy hivatkozási azonosítója.
                theDocument:
                  type: string
                  format: binary
                  description: Ha nem elérési úton keresztül található meg a dokumentum, akkor ebben a bináris adatban van.
                documentGuid:
                  type: string
                  description: A dokumentum GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az állománynév meghatározására.)
                createDate:
                  type: string
                  format: date-time
                  description: A rekord létrehozásának dátuma.
                pdfConvertDate:
                  type: string
                  format: date-time
                  description: A dokumentum Pdf-é konvertálás időpontja.
                originalFileName:
                  type: string
                  description: A feltöltött dokumentumok esetén az eredeti fájl neve.
                readDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a dokumentum tulajdonosa (azaz a páciens) először megtekintette a dokumentumot.
                mustEesztUpload:
                  type: boolean
                  description: Ha az értéke true, akkor ennek a dokumentumnak a feltöltését el kell végezni az EESZT rendszer felé
                eesztUploadDate:
                  type: string
                  format: date-time
                  description: Mikor történt meg az EESZT rendszerbe a feltöltés
                externalDocumentId:
                  type: string
                  description: "A PrivátDoktoron kívüli külső rendszerbeli azonosítója a dokumentumnak (pl: EESZT dokumentum azonosító, amikor sikeresen lezajlott a feltöltés)"
                documentCathegory:
                  type: string
                  description: A dokumentum kategóriája (pl. anamnézis, template html, stb.)
                groupCode:
                  type: string
                  description: Akkor van kitöltve, ha az adott dokumentum csoporthoz tartozik. Ilyenkor nem csak a dokumentum tulajdonos és a feltöltő, hanem a csoport vezetői is láthatják a dokumentumot.
                ownerId:
                  type: integer
                  description: A dokumentum tulajdonosa (általában a páciens, akiről szól a dokumentum)
                uploaderId:
                  type: integer
                  description: A dokumentum feltöltését végző doktor (vagy esetleg páciens) azonosítója
              required:
                - documentId
                - documentType
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Document
    delete:
      summary: Dokumentum törlése
      operationId: adminDeleteDocument
      parameters:
        - in: path
          name: documentId
          description: A törlendő Document egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Document
  /admin/analyseRules:
    get:
      summary: Kiértékelési szabály lista lekérdezése
      operationId: adminGetAnalyseRuleList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalyseRule"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: AnalyseRule
    post:
      summary: Kiértékelési szabály létrehozása
      operationId: adminAddAnalyseRule
      requestBody:
        description: Az új Analyse rule adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/AnalyseRule"
              description: Mérési adat típus automatikus (elő)értelmezésének szabályai (érték határok, feldolgozási funkció típusok).
              properties:
                analyseRuleId:
                  type: integer
                  description: Analyse rule egyedi azonosítója
                name:
                  type: string
                  description: Az adott paraméterek szerinti feldolgozás típus rövid megnevezése.
                measureType:
                  type: string
                  description: "A mérés típusát mutató szótárkód (pl: vérnyomás, vércukor, súly, stb.), amire a feldolgozási módszer vonatkozik."
                processType:
                  type: string
                  description: "Az automatikus elemzés típus szótárkódja, pl: intervallumba tartozás vizsgálata, gyakoriság vizsgálata, kiterjedtség vizsgálata, eltérés százalékos vizsgálat, stb."
                normalMinimum:
                  type: number
                  description: Normális alsó érték
                normalMaximum:
                  type: number
                  description: Normális felső érték
                warningMinimum:
                  type: number
                  description: A normális érték alatti, figyelemre méltó alsó érték, ami az Alarm státuszt Warning-ra állítja.
                warningMaximum:
                  type: number
                  description: A normális érték feletti, figyelemre méltó felső érték, ami az Alarm státuszt Warning-ra állítja.
                errorMinimum:
                  type: number
                  description: A normális érték alatti jelentős eltérés, ami már nem csak figyelemre méltó alsó érték, ezért az Alarm státuszt Error-ra állítja. (Az ez alatt értékek eredményezik az Urgent státuszt.)
                errorMaximum:
                  type: number
                  description: A normális érték feletti jelentős eltérés, ami már nem csak figyelemre méltó felső érték, ezért az Alarm státuszt Error-ra állítja. (Az efölötti értékek eredményezik az Urgent státuszt.)
              required:
                - analyseRuleId
                - measureType
                - processType
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AnalyseRule"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: AnalyseRule
  /admin/analyseRules/{analyseRuleId}:
    get:
      summary: Kiértékelési szabály adatainak lekérdezése
      operationId: adminGetAnalyseRuleById
      parameters:
        - in: path
          name: analyseRuleId
          description: A keresett Analyse rule egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AnalyseRule"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: AnalyseRule
    post:
      summary: Kiértékelési szabály adatainak módosítása
      operationId: adminUpdateAnalyseRule
      parameters:
        - in: path
          name:  analyseRuleId
          description: A módosítandó Analyse rule egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/AnalyseRule"
              description: Mérési adat típus automatikus (elő)értelmezésének szabályai (érték határok, feldolgozási funkció típusok).
              properties:
                analyseRuleId:
                  type: integer
                  description: Analyse rule egyedi azonosítója
                name:
                  type: string
                  description: Az adott paraméterek szerinti feldolgozás típus rövid megnevezése.
                measureType:
                  type: string
                  description: "A mérés típusát mutató szótárkód (pl: vérnyomás, vércukor, súly, stb.), amire a feldolgozási módszer vonatkozik."
                processType:
                  type: string
                  description: "Az automatikus elemzés típus szótárkódja, pl: intervallumba tartozás vizsgálata, gyakoriság vizsgálata, kiterjedtség vizsgálata, eltérés százalékos vizsgálat, stb."
                normalMinimum:
                  type: number
                  description: Normális alsó érték
                normalMaximum:
                  type: number
                  description: Normális felső érték
                warningMinimum:
                  type: number
                  description: A normális érték alatti, figyelemre méltó alsó érték, ami az Alarm státuszt Warning-ra állítja.
                warningMaximum:
                  type: number
                  description: A normális érték feletti, figyelemre méltó felső érték, ami az Alarm státuszt Warning-ra állítja.
                errorMinimum:
                  type: number
                  description: A normális érték alatti jelentős eltérés, ami már nem csak figyelemre méltó alsó érték, ezért az Alarm státuszt Error-ra állítja. (Az ez alatt értékek eredményezik az Urgent státuszt.)
                errorMaximum:
                  type: number
                  description: A normális érték feletti jelentős eltérés, ami már nem csak figyelemre méltó felső érték, ezért az Alarm státuszt Error-ra állítja. (Az efölötti értékek eredményezik az Urgent státuszt.)
              required:
                - analyseRuleId
                - measureType
                - processType
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AnalyseRule"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: AnalyseRule
    delete:
      summary: Kiértékelési szabály törlése
      operationId: adminDeleteAnalyseRule
      parameters:
        - in: path
          name: analyseRuleId
          description: A törlendő Analyse rule egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: AnalyseRule
  /admin/processedDatas:
    get:
      summary: Feldolgozott adat lista lekérdezése
      operationId: adminGetProcessedDataList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessedData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: ProcessedData
    post:
      summary: Feldolgozott adat létrehozása
      operationId: adminAddProcessedData
      requestBody:
        description: Az új Processed Data adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ProcessedData"
              description: Az automatikus (elő)feldolgozás információi.
              properties:
                processedDataId:
                  type: integer
                  description: Processed Data egyedi azonosítója
                startDate:
                  type: string
                  format: date-time
                  description: Az automatikus elemző folyamat elindulásának időpontja.
                endDate:
                  type: string
                  format: date-time
                  description: Az automatikus elemzés befejezésének időpontja. Ha nincs kitöltve, akkor még nem fejeződött be az elemzés.
                status:
                  type: string
                  description: "Az elemzés állapotát jelző szótárkód (pl: jóváhagyandó, jóváhagyott, felülvizsgálandó, hibás)."
                alarmType:
                  type: string
                  description: "A mérés elemzése alapján szükségesnek vélt riasztási kód (pl: rendben, figyelmeztetés, veszélyes, életveszélyes).<br>Beállítása az automatikus kiértékelése során valamely elemzési szabály alapján történik, vagy ha egy orvos a mérés elemzésekor be- vagy átállítja. (Az aktuális értéknek mindig az End date szerint rendezett rekordok közül a legfrissebből származót tekinti a rendszer!)<br>"
                comment:
                  type: string
                  description: "A mérési adat feldolgozással kapcsolatos megjegyzés, pl:<br>- automatikus elemzés esetén értéke 'Automatikus'<br>- ha egy orvos állította be vagy át a Riasztási típust, akkor pedig az orvos megjegyzése az átállítás okáról"
                measurementId:
                  type: integer
                  description: Measurement kapcsoló mezője
                analyseRuleId:
                  type: integer
                  description: Annak a kiértékelési szabálynak az azonosítója, amit az (elő)feldolgozás során használt a rendszer.
                alarmerId:
                  type: integer
                  description: A riasztási szintet be- vagy átállító (orvos) azonosítója
              required:
                - processedDataId
                - startDate
                - status
                - alarmType
                - comment
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ProcessedData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: ProcessedData
  /admin/processedDatas/{processedDataId}:
    get:
      summary: Feldolgozott adat adatainak lekérdezése
      operationId: adminGetProcessedDataById
      parameters:
        - in: path
          name: processedDataId
          description: A keresett Processed Data egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ProcessedData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: ProcessedData
    post:
      summary: Feldolgozott adat adatainak módosítása
      operationId: adminUpdateProcessedData
      parameters:
        - in: path
          name:  processedDataId
          description: A módosítandó Processed Data egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ProcessedData"
              description: Az automatikus (elő)feldolgozás információi.
              properties:
                processedDataId:
                  type: integer
                  description: Processed Data egyedi azonosítója
                startDate:
                  type: string
                  format: date-time
                  description: Az automatikus elemző folyamat elindulásának időpontja.
                endDate:
                  type: string
                  format: date-time
                  description: Az automatikus elemzés befejezésének időpontja. Ha nincs kitöltve, akkor még nem fejeződött be az elemzés.
                status:
                  type: string
                  description: "Az elemzés állapotát jelző szótárkód (pl: jóváhagyandó, jóváhagyott, felülvizsgálandó, hibás)."
                alarmType:
                  type: string
                  description: "A mérés elemzése alapján szükségesnek vélt riasztási kód (pl: rendben, figyelmeztetés, veszélyes, életveszélyes).<br>Beállítása az automatikus kiértékelése során valamely elemzési szabály alapján történik, vagy ha egy orvos a mérés elemzésekor be- vagy átállítja. (Az aktuális értéknek mindig az End date szerint rendezett rekordok közül a legfrissebből származót tekinti a rendszer!)<br>"
                comment:
                  type: string
                  description: "A mérési adat feldolgozással kapcsolatos megjegyzés, pl:<br>- automatikus elemzés esetén értéke 'Automatikus'<br>- ha egy orvos állította be vagy át a Riasztási típust, akkor pedig az orvos megjegyzése az átállítás okáról"
                measurementId:
                  type: integer
                  description: Measurement kapcsoló mezője
                analyseRuleId:
                  type: integer
                  description: Annak a kiértékelési szabálynak az azonosítója, amit az (elő)feldolgozás során használt a rendszer.
                alarmerId:
                  type: integer
                  description: A riasztási szintet be- vagy átállító (orvos) azonosítója
              required:
                - processedDataId
                - startDate
                - status
                - alarmType
                - comment
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ProcessedData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: ProcessedData
    delete:
      summary: Feldolgozott adat törlése
      operationId: adminDeleteProcessedData
      parameters:
        - in: path
          name: processedDataId
          description: A törlendő Processed Data egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: ProcessedData
  /admin/analyses:
    get:
      summary: Kiértékelés lista lekérdezése
      operationId: adminGetAnalyseList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analyse
    post:
      summary: Kiértékelés létrehozása
      operationId: adminAddAnalyse
      requestBody:
        description: Az új Analyse adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Analyse"
              description: A mérési eredmény(ek) orvosi szempontú értékelése ill. a jelenségek magyarázata, amit a páciens is megkap.
              properties:
                analyseId:
                  type: integer
                  description: Analyse egyedi azonosítója
                status:
                  type: string
                  description: "Az elemzési eredmény állapota, pl: folyamatban, publikus, nem publikus, elavult."
                subject:
                  type: string
                  description: Az elemzés tárgya, azaz rövid megnevezése
                text:
                  type: string
                  description: Az elemzés részletes szövege (HTML formátumban).
                viewStatus:
                  type: string
                  description: "Az adott kiértékelés állapota megtekinthetőség szempontjából.<br>Lehetséges értékei: kiértékelés alatt, megtekinthető, megtekintett, elavult"
                analyzeDate:
                  type: string
                  format: date-time
                  description: A kiértékelés készítésének kezdete
                publishDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól az ügyfél láthatja a kiértékelést (azaz amikor a View status értéke ANALYSE_VIEW_UNREAD értékre változott)
                metaData:
                  type: string
                  description: A kiértékeléskor használatos egyéb információk JSON formátumban, pl. a mérési diagram(ok)ra felrakott jelölési objektumok és azok pozíciója.
                obsolatedDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól kezdve elavultnak számít a kiértékelés (pl. mert a pulseoxy esetén az előzmény mérések közül valamelyiket törölték)
                prevStatus:
                  type: string
                  description: Az aktuális státusz előtti érték, ami arra használatos, hogyha a kiértékelést végző meggondolja magát és módosítás mentése nélkül kilép a szerkesztésből, akkor mely státuszra kell visszaállni. (Ha a mező értéke NULL, akkor pedig törölni kell a kiértékelés rekordot.)
                analyseGuid:
                  type: string
                  description: A kiértékelés GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját.
                userId:
                  type: integer
                  description: Annak az ügyfélnek az azonosítója, akiről (akinek a méréseiről) szól a kiértékelés.
                preConsultationId:
                  type: integer
                  description: Kiértékelés előzményének tekinthető konzultáció azonosítója
              required:
                - analyseId
                - status
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Analyse
  /admin/analyses/{analyseId}:
    get:
      summary: Kiértékelés adatainak lekérdezése
      operationId: adminGetAnalyseById
      parameters:
        - in: path
          name: analyseId
          description: A keresett Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Analyse
    post:
      summary: Kiértékelés adatainak módosítása
      operationId: adminUpdateAnalyse
      parameters:
        - in: path
          name:  analyseId
          description: A módosítandó Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Analyse"
              description: A mérési eredmény(ek) orvosi szempontú értékelése ill. a jelenségek magyarázata, amit a páciens is megkap.
              properties:
                analyseId:
                  type: integer
                  description: Analyse egyedi azonosítója
                status:
                  type: string
                  description: "Az elemzési eredmény állapota, pl: folyamatban, publikus, nem publikus, elavult."
                subject:
                  type: string
                  description: Az elemzés tárgya, azaz rövid megnevezése
                text:
                  type: string
                  description: Az elemzés részletes szövege (HTML formátumban).
                viewStatus:
                  type: string
                  description: "Az adott kiértékelés állapota megtekinthetőség szempontjából.<br>Lehetséges értékei: kiértékelés alatt, megtekinthető, megtekintett, elavult"
                analyzeDate:
                  type: string
                  format: date-time
                  description: A kiértékelés készítésének kezdete
                publishDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól az ügyfél láthatja a kiértékelést (azaz amikor a View status értéke ANALYSE_VIEW_UNREAD értékre változott)
                metaData:
                  type: string
                  description: A kiértékeléskor használatos egyéb információk JSON formátumban, pl. a mérési diagram(ok)ra felrakott jelölési objektumok és azok pozíciója.
                obsolatedDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól kezdve elavultnak számít a kiértékelés (pl. mert a pulseoxy esetén az előzmény mérések közül valamelyiket törölték)
                prevStatus:
                  type: string
                  description: Az aktuális státusz előtti érték, ami arra használatos, hogyha a kiértékelést végző meggondolja magát és módosítás mentése nélkül kilép a szerkesztésből, akkor mely státuszra kell visszaállni. (Ha a mező értéke NULL, akkor pedig törölni kell a kiértékelés rekordot.)
                analyseGuid:
                  type: string
                  description: A kiértékelés GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját.
                userId:
                  type: integer
                  description: Annak az ügyfélnek az azonosítója, akiről (akinek a méréseiről) szól a kiértékelés.
                preConsultationId:
                  type: integer
                  description: Kiértékelés előzményének tekinthető konzultáció azonosítója
              required:
                - analyseId
                - status
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Analyse
    delete:
      summary: Kiértékelés törlése
      operationId: adminDeleteAnalyse
      parameters:
        - in: path
          name: analyseId
          description: A törlendő Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Analyse
  /admin/regulations:
    get:
      summary: Előírás lista lekérdezése
      operationId: adminGetRegulationList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Regulation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Regulation
    post:
      summary: Előírás létrehozása
      operationId: adminAddRegulation
      requestBody:
        description: Az új Regulation adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Regulation"
              description: Valamely felhasználóra vonatkozóan adott időpontra, vagy időszakra elvárt tevékenység típusa és paraméterei.
              properties:
                regulationId:
                  type: integer
                  description: Regulation egyedi azonosítója
                regulationType:
                  type: string
                  description: "Az előírás típus szótárkódja, pl: vérnyomás mérése."
                name:
                  type: string
                  description: "Az előírás rövid szövege, pl: elvégzendő gyógyszer bevétel, elvégzendő vérnyomás mérés, stb."
                description:
                  type: string
                  description: "Az előíráshoz tartozó részletes szöveg, ami akkor van kitöltve, ha a rövid név nem egyértelmű. Pl: a gyógyszer bevétel típusú előírásnál a gyógyszer neve."
                status:
                  type: string
                  description: "Az előírás állapotát mutató szótárkód (pl: aktív, tiltott)."
                parameter:
                  type: string
                  description: "Az előírásra vonatkozó egyéb paraméterek, pl: hány szemet kell bevenni az adott gyógyszerből."
                cycle:
                  type: string
                  description: "Az előírás ciklikussága (pl: minden munkanapon 12:00-kor)."
              required:
                - regulationId
                - regulationType
                - status
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Regulation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Regulation
  /admin/regulations/{regulationId}:
    get:
      summary: Előírás adatainak lekérdezése
      operationId: adminGetRegulationById
      parameters:
        - in: path
          name: regulationId
          description: A keresett Regulation egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Regulation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Regulation
    post:
      summary: Előírás adatainak módosítása
      operationId: adminUpdateRegulation
      parameters:
        - in: path
          name:  regulationId
          description: A módosítandó Regulation egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Regulation"
              description: Valamely felhasználóra vonatkozóan adott időpontra, vagy időszakra elvárt tevékenység típusa és paraméterei.
              properties:
                regulationId:
                  type: integer
                  description: Regulation egyedi azonosítója
                regulationType:
                  type: string
                  description: "Az előírás típus szótárkódja, pl: vérnyomás mérése."
                name:
                  type: string
                  description: "Az előírás rövid szövege, pl: elvégzendő gyógyszer bevétel, elvégzendő vérnyomás mérés, stb."
                description:
                  type: string
                  description: "Az előíráshoz tartozó részletes szöveg, ami akkor van kitöltve, ha a rövid név nem egyértelmű. Pl: a gyógyszer bevétel típusú előírásnál a gyógyszer neve."
                status:
                  type: string
                  description: "Az előírás állapotát mutató szótárkód (pl: aktív, tiltott)."
                parameter:
                  type: string
                  description: "Az előírásra vonatkozó egyéb paraméterek, pl: hány szemet kell bevenni az adott gyógyszerből."
                cycle:
                  type: string
                  description: "Az előírás ciklikussága (pl: minden munkanapon 12:00-kor)."
              required:
                - regulationId
                - regulationType
                - status
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Regulation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Regulation
    delete:
      summary: Előírás törlése
      operationId: adminDeleteRegulation
      parameters:
        - in: path
          name: regulationId
          description: A törlendő Regulation egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Regulation
  /admin/assignedUsers:
    get:
      summary: Eszközhöz rendelt felhasználók lista lekérdezése
      operationId: adminGetAssignedUserList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssignedUser"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: AssignedUser
    post:
      summary: Eszközhöz rendelt felhasználók létrehozása
      operationId: adminAddAssignedUser
      requestBody:
        description: Az új Assigned User adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/AssignedUser"
              description: Olyan kapcsoló adat, ami megmutatja, hogy az adott felhasználó hányas számú páciense az adott eszköznek. Ez akkor használatos, ha a mérőeszköz képes több személy méréseit is kezelni, általában egy sorszámmal (1-es vagy 2-es személy) azonosítják az eszközök, hogy éppen ki végzi a mérést.
              properties:
                assignedUserId:
                  type: integer
                  description: Assigned User egyedi azonosítója
                userIdx:
                  type: integer
                  format: int32
                  description: Az adott felhasználó hányadik helyére van csatolva az adott eszköznek.
                deviceName:
                  type: string
                  description: A felhasználó által adott (felüldefiniáló) eszköz elnevezés
                deviceId:
                  type: integer
                  description: A hozzárendelt eszköz azonosítója
                userId:
                  type: integer
                  description: Az adott eszközhöz rendelt felhasználó azonosítója
              required:
                - assignedUserId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AssignedUser"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: AssignedUser
  /admin/assignedUsers/{assignedUserId}:
    get:
      summary: Eszközhöz rendelt felhasználók adatainak lekérdezése
      operationId: adminGetAssignedUserById
      parameters:
        - in: path
          name: assignedUserId
          description: A keresett Assigned User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AssignedUser"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: AssignedUser
    post:
      summary: Eszközhöz rendelt felhasználók adatainak módosítása
      operationId: adminUpdateAssignedUser
      parameters:
        - in: path
          name:  assignedUserId
          description: A módosítandó Assigned User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/AssignedUser"
              description: Olyan kapcsoló adat, ami megmutatja, hogy az adott felhasználó hányas számú páciense az adott eszköznek. Ez akkor használatos, ha a mérőeszköz képes több személy méréseit is kezelni, általában egy sorszámmal (1-es vagy 2-es személy) azonosítják az eszközök, hogy éppen ki végzi a mérést.
              properties:
                assignedUserId:
                  type: integer
                  description: Assigned User egyedi azonosítója
                userIdx:
                  type: integer
                  format: int32
                  description: Az adott felhasználó hányadik helyére van csatolva az adott eszköznek.
                deviceName:
                  type: string
                  description: A felhasználó által adott (felüldefiniáló) eszköz elnevezés
                deviceId:
                  type: integer
                  description: A hozzárendelt eszköz azonosítója
                userId:
                  type: integer
                  description: Az adott eszközhöz rendelt felhasználó azonosítója
              required:
                - assignedUserId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AssignedUser"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: AssignedUser
    delete:
      summary: Eszközhöz rendelt felhasználók törlése
      operationId: adminDeleteAssignedUser
      parameters:
        - in: path
          name: assignedUserId
          description: A törlendő Assigned User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: AssignedUser
  /admin/analyseBasis:
    get:
      summary: Kiértékelés alapja lista lekérdezése
      operationId: adminGetAnalyseBasisList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalyseBasis"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: AnalyseBasis
    post:
      summary: Kiértékelés alapja létrehozása
      operationId: adminAddAnalyseBasis
      requestBody:
        description: Az új Analyse Basis adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/AnalyseBasis"
              description: Olyan kapcsoló adat, ami megmutatja, hogy a kiértékelés milyen mérések és előfeldolgozások alapján keletkezett.
              properties:
                analyseBasisId:
                  type: integer
                  description: Analyse Basis egyedi azonosítója
                createDate:
                  type: string
                  format: date-time
                  description: Az adott mérésnek a kiértékeléshez rendelési időpontja
                processedDataId:
                  type: integer
                  description: Annak a feldolgozásnak az azonosítója, ami tartalmazza, hogy melyik mérésre és milyen kiértékelési szabály alapján történt az előfeldolgozás.
                measurementId:
                  type: integer
                  description: A mérés, amire az adat előfeldolgozása és a kiértékelés vonatkozik.
                analyseId:
                  type: integer
                  description: Az elemzés, ami a mérésre vonatkozik.
              required:
                - analyseBasisId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AnalyseBasis"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: AnalyseBasis
  /admin/analyseBasis/{analyseBasisId}:
    get:
      summary: Kiértékelés alapja adatainak lekérdezése
      operationId: adminGetAnalyseBasisById
      parameters:
        - in: path
          name: analyseBasisId
          description: A keresett Analyse Basis egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AnalyseBasis"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: AnalyseBasis
    post:
      summary: Kiértékelés alapja adatainak módosítása
      operationId: adminUpdateAnalyseBasis
      parameters:
        - in: path
          name:  analyseBasisId
          description: A módosítandó Analyse Basis egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/AnalyseBasis"
              description: Olyan kapcsoló adat, ami megmutatja, hogy a kiértékelés milyen mérések és előfeldolgozások alapján keletkezett.
              properties:
                analyseBasisId:
                  type: integer
                  description: Analyse Basis egyedi azonosítója
                createDate:
                  type: string
                  format: date-time
                  description: Az adott mérésnek a kiértékeléshez rendelési időpontja
                processedDataId:
                  type: integer
                  description: Annak a feldolgozásnak az azonosítója, ami tartalmazza, hogy melyik mérésre és milyen kiértékelési szabály alapján történt az előfeldolgozás.
                measurementId:
                  type: integer
                  description: A mérés, amire az adat előfeldolgozása és a kiértékelés vonatkozik.
                analyseId:
                  type: integer
                  description: Az elemzés, ami a mérésre vonatkozik.
              required:
                - analyseBasisId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AnalyseBasis"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: AnalyseBasis
    delete:
      summary: Kiértékelés alapja törlése
      operationId: adminDeleteAnalyseBasis
      parameters:
        - in: path
          name: analyseBasisId
          description: A törlendő Analyse Basis egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: AnalyseBasis
  /admin/terms:
    get:
      summary: Szabályzat lista lekérdezése
      operationId: adminGetTermList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Term"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Term
    post:
      summary: Szabályzat létrehozása
      operationId: adminAddTerm
      requestBody:
        description: Az új Term adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Term"
              description: A rendszer felhasználásakor elfogandandó szabályzatok verzióit tartalmazó vezérlő állomány.
              properties:
                termId:
                  type: integer
                  description: Term egyedi azonosítója
                type:
                  type: string
                  description: Az adott szabályzat típus azonosítója (pl. EULA, Privacy, stb.)
                version:
                  type: string
                  description: Az adott típusú szabályzat verziójának azonosítója (pl. v1.0 vagy 20190101)<br>
                name:
                  type: string
                  description: A szabályzat hosszú elnevezése
                mandatory:
                  type: boolean
                  description: Ha értéke kötelező, akkor az ügyfélnek feltétlenül el kell fogadni (az első adandó alkalommal), hogy használhassa a rendszert
                validFrom:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól kezdve az adott szabályzat látható az ügyfelek számára. Adott típuson belül az érvényesség kezdete dátum szerinti sorrendben az utolsó (azaz a legfrissebb) számít mindig a rendszer szempontjából az aktuálisnak!
                enabled:
                  type: boolean
                  description: Csak akkor vesz részt az aktuálisan érvényes (azaz az ügyfél által elfogadható) szabályzat típusok listájának összeállításában, ha az értéke true.
                index:
                  type: integer
                  format: int32
                  description: A szabályok megjelenítésekor hányadik a sorrendben.
                isSupplementary:
                  type: boolean
                  description: Ha értéke true, akkor nem alap szabálzyat, hanem a felüldefiniáláshoz használatos kiegészítő szabályzat (pl. OKFŐ doktorokra vonatkozó Szolgáltatási szabályzat)
                supplementaryRules:
                  type: string
                  description: "Ha ezt a szabályzatot bizonyos esetekben felül kell definiálni (pl. az alap Szolgáltatási Szabályzat helyett az OKFŐ doktorokra vonatkozó szolgáltatási szabályzatot kell elfogadtatni az ügyféllel), akkor ebben a mezőben van megadva, hogy milyen ellenőrzés típus esetén melyik terms rekordbeli szabályzatot kell elfogadtatni (pl: {checkOkfoDoctor: 17, checkOkfoPatient: 18})"
                documentId:
                  type: integer
                  description: A szabályzat megjeleníthető szövegét tartalmazó dokumentum azonosítója
              required:
                - termId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Term"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Term
  /admin/terms/{termId}:
    get:
      summary: Szabályzat adatainak lekérdezése
      operationId: adminGetTermById
      parameters:
        - in: path
          name: termId
          description: A keresett Term egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Term"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Term
    post:
      summary: Szabályzat adatainak módosítása
      operationId: adminUpdateTerm
      parameters:
        - in: path
          name:  termId
          description: A módosítandó Term egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Term"
              description: A rendszer felhasználásakor elfogandandó szabályzatok verzióit tartalmazó vezérlő állomány.
              properties:
                termId:
                  type: integer
                  description: Term egyedi azonosítója
                type:
                  type: string
                  description: Az adott szabályzat típus azonosítója (pl. EULA, Privacy, stb.)
                version:
                  type: string
                  description: Az adott típusú szabályzat verziójának azonosítója (pl. v1.0 vagy 20190101)<br>
                name:
                  type: string
                  description: A szabályzat hosszú elnevezése
                mandatory:
                  type: boolean
                  description: Ha értéke kötelező, akkor az ügyfélnek feltétlenül el kell fogadni (az első adandó alkalommal), hogy használhassa a rendszert
                validFrom:
                  type: string
                  format: date-time
                  description: Az az időpont, amikortól kezdve az adott szabályzat látható az ügyfelek számára. Adott típuson belül az érvényesség kezdete dátum szerinti sorrendben az utolsó (azaz a legfrissebb) számít mindig a rendszer szempontjából az aktuálisnak!
                enabled:
                  type: boolean
                  description: Csak akkor vesz részt az aktuálisan érvényes (azaz az ügyfél által elfogadható) szabályzat típusok listájának összeállításában, ha az értéke true.
                index:
                  type: integer
                  format: int32
                  description: A szabályok megjelenítésekor hányadik a sorrendben.
                isSupplementary:
                  type: boolean
                  description: Ha értéke true, akkor nem alap szabálzyat, hanem a felüldefiniáláshoz használatos kiegészítő szabályzat (pl. OKFŐ doktorokra vonatkozó Szolgáltatási szabályzat)
                supplementaryRules:
                  type: string
                  description: "Ha ezt a szabályzatot bizonyos esetekben felül kell definiálni (pl. az alap Szolgáltatási Szabályzat helyett az OKFŐ doktorokra vonatkozó szolgáltatási szabályzatot kell elfogadtatni az ügyféllel), akkor ebben a mezőben van megadva, hogy milyen ellenőrzés típus esetén melyik terms rekordbeli szabályzatot kell elfogadtatni (pl: {checkOkfoDoctor: 17, checkOkfoPatient: 18})"
                documentId:
                  type: integer
                  description: A szabályzat megjeleníthető szövegét tartalmazó dokumentum azonosítója
              required:
                - termId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Term"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Term
    delete:
      summary: Szabályzat törlése
      operationId: adminDeleteTerm
      parameters:
        - in: path
          name: termId
          description: A törlendő Term egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Term
  /admin/userTerms:
    get:
      summary: Felhasználói Szabályzat elfogadások lista lekérdezése
      operationId: adminGetUserTermList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserTerm"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: UserTerm
    post:
      summary: Felhasználói Szabályzat elfogadások létrehozása
      operationId: adminAddUserTerm
      requestBody:
        description: Az új User Term adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserTerm"
              description: Olyan információk, hogy mely felhasználó melyik Szabályzat (verziót) mikor fogadta el, ill. mikor vonta vissza az elfogadását. Kapcsoló a User és a Term táblák között.
              properties:
                userTermId:
                  type: integer
                  description: User Term egyedi azonosítója
                acceptDate:
                  type: string
                  format: date-time
                  description: Az adott szabályzat (verzió) elfogadásának időpontja
                revokeDate:
                  type: string
                  format: date-time
                  description: Az adott szabályzat (verzió) elfogadást visszavonó igény időpontja
                userId:
                  type: integer
                  description: A szabályzatot elfogadó ügyfél azonosítója
                termId:
                  type: integer
                  description: Az adott ügyfél által elfogadott szabályzat (verzió) azonosítója
              required:
                - userTermId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserTerm"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: UserTerm
  /admin/userTerms/{userTermId}:
    get:
      summary: Felhasználói Szabályzat elfogadások adatainak lekérdezése
      operationId: adminGetUserTermById
      parameters:
        - in: path
          name: userTermId
          description: A keresett User Term egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserTerm"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: UserTerm
    post:
      summary: Felhasználói Szabályzat elfogadások adatainak módosítása
      operationId: adminUpdateUserTerm
      parameters:
        - in: path
          name:  userTermId
          description: A módosítandó User Term egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserTerm"
              description: Olyan információk, hogy mely felhasználó melyik Szabályzat (verziót) mikor fogadta el, ill. mikor vonta vissza az elfogadását. Kapcsoló a User és a Term táblák között.
              properties:
                userTermId:
                  type: integer
                  description: User Term egyedi azonosítója
                acceptDate:
                  type: string
                  format: date-time
                  description: Az adott szabályzat (verzió) elfogadásának időpontja
                revokeDate:
                  type: string
                  format: date-time
                  description: Az adott szabályzat (verzió) elfogadást visszavonó igény időpontja
                userId:
                  type: integer
                  description: A szabályzatot elfogadó ügyfél azonosítója
                termId:
                  type: integer
                  description: Az adott ügyfél által elfogadott szabályzat (verzió) azonosítója
              required:
                - userTermId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserTerm"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: UserTerm
    delete:
      summary: Felhasználói Szabályzat elfogadások törlése
      operationId: adminDeleteUserTerm
      parameters:
        - in: path
          name: userTermId
          description: A törlendő User Term egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: UserTerm
  /admin/userDeviceHistorys:
    get:
      summary: Ügyfél Eszköz kapcsolati napló lista lekérdezése
      operationId: adminGetUserDeviceHistoryList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDeviceHistory"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: UserDeviceHistory
    post:
      summary: Ügyfél Eszköz kapcsolati napló létrehozása
      operationId: adminAddUserDeviceHistory
      requestBody:
        description: Az új User Device History adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserDeviceHistory"
              description: Azt tartalmazza, hogy az ügyfelek mely eszközöket regisztrálták már és hogy az adott regisztráció még érvényes-e. (Mivel a kliens alkalmazások offline módon is tudnak működni, ezért szükség van annak tárolására is, hogy mely eszközöket deregisztrálta az ügyfél, hiszen ezt az infót is le kell tudni küldeni a getMyDevice funkció válaszában.)<br>Szintén ebbe a táblába kerülnek bele azok körülmények is, hogy ha az adott ügyfél az OKFŐ projekt kapcsán vagy a háziorvosától megkap ill. visszaad valamely eszközt.
              properties:
                userDeviceHistoryId:
                  type: integer
                  description: User Device History egyedi azonosítója
                registrationStatus:
                  type: string
                registrationDate:
                  type: string
                  format: date-time
                unregistrationDate:
                  type: string
                  format: date-time
                lastUserIdx:
                  type: integer
                  format: int32
                  description: Az adott ügyél-eszköz párosításkor mi volt a userIdx értéke.<br>(Ennek a nem nevesített osztott eszköz használatnál van jelentősége, hogy megszakadjon a méréstörténet.)
                passType:
                  type: string
                  description: Az eszköz átadása milyen formában történt (HANDOVER, POSTED)
                repassType:
                  type: string
                  description: Az eszköz visszavétele milyen formában történt (PASS, RENT, PURCHASE, SCRAP)
                userId:
                  type: integer
                  description: Az eszköz regisztrálását végrehajtó ügyfél azonosítója
                deviceId:
                  type: integer
                  description: Az ügyfélhez regisztrált eszköz azonosítója
                fromUserId:
                  type: integer
                  description: Eszköz átadás esetén annak a user-nek az azonosítója, aki az eszköz előző felelőse volt
              required:
                - userDeviceHistoryId
                - registrationStatus
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserDeviceHistory"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: UserDeviceHistory
  /admin/userDeviceHistorys/{userDeviceHistoryId}:
    get:
      summary: Ügyfél Eszköz kapcsolati napló adatainak lekérdezése
      operationId: adminGetUserDeviceHistoryById
      parameters:
        - in: path
          name: userDeviceHistoryId
          description: A keresett User Device History egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserDeviceHistory"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: UserDeviceHistory
    post:
      summary: Ügyfél Eszköz kapcsolati napló adatainak módosítása
      operationId: adminUpdateUserDeviceHistory
      parameters:
        - in: path
          name:  userDeviceHistoryId
          description: A módosítandó User Device History egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserDeviceHistory"
              description: Azt tartalmazza, hogy az ügyfelek mely eszközöket regisztrálták már és hogy az adott regisztráció még érvényes-e. (Mivel a kliens alkalmazások offline módon is tudnak működni, ezért szükség van annak tárolására is, hogy mely eszközöket deregisztrálta az ügyfél, hiszen ezt az infót is le kell tudni küldeni a getMyDevice funkció válaszában.)<br>Szintén ebbe a táblába kerülnek bele azok körülmények is, hogy ha az adott ügyfél az OKFŐ projekt kapcsán vagy a háziorvosától megkap ill. visszaad valamely eszközt.
              properties:
                userDeviceHistoryId:
                  type: integer
                  description: User Device History egyedi azonosítója
                registrationStatus:
                  type: string
                registrationDate:
                  type: string
                  format: date-time
                unregistrationDate:
                  type: string
                  format: date-time
                lastUserIdx:
                  type: integer
                  format: int32
                  description: Az adott ügyél-eszköz párosításkor mi volt a userIdx értéke.<br>(Ennek a nem nevesített osztott eszköz használatnál van jelentősége, hogy megszakadjon a méréstörténet.)
                passType:
                  type: string
                  description: Az eszköz átadása milyen formában történt (HANDOVER, POSTED)
                repassType:
                  type: string
                  description: Az eszköz visszavétele milyen formában történt (PASS, RENT, PURCHASE, SCRAP)
                userId:
                  type: integer
                  description: Az eszköz regisztrálását végrehajtó ügyfél azonosítója
                deviceId:
                  type: integer
                  description: Az ügyfélhez regisztrált eszköz azonosítója
                fromUserId:
                  type: integer
                  description: Eszköz átadás esetén annak a user-nek az azonosítója, aki az eszköz előző felelőse volt
              required:
                - userDeviceHistoryId
                - registrationStatus
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserDeviceHistory"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: UserDeviceHistory
    delete:
      summary: Ügyfél Eszköz kapcsolati napló törlése
      operationId: adminDeleteUserDeviceHistory
      parameters:
        - in: path
          name: userDeviceHistoryId
          description: A törlendő User Device History egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: UserDeviceHistory
  /admin/refreshBlackList:
    get:
      summary: App feketelista frissítése
      description: Technikai funkció. Ennek a hívásnak a hatására a szerver újra felolvassa a kliens alkalmazás feketelista vezérlő állomány tartalmát. Így lehet elérni a szerver újarfordítása és újraindítása nélkül, hogy egy hibás kliens app verzió ne tudja lefagyasztani a szervert.
      operationId: adminRefreshBlackList
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
      security:
        - OpenID:
            - admin
            - sysadmin
      tags:
        - Admin
        - Config
  /admin/userParams:
    get:
      summary: Felhasználói paraméterek lista lekérdezése
      operationId: adminGetUserParamList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserParam"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: UserParam
    post:
      summary: Felhasználói paraméterek létrehozása
      operationId: adminAddUserParam
      requestBody:
        description: Az új User Param adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserParam"
              description: A felhasználók dinamikus paraméterei.
              properties:
                userParamId:
                  type: integer
                  description: User Param egyedi azonosítója
                paramCode:
                  type: string
                  description: A paraméter azonosítására használt típus kód
                paramValue:
                  type: string
                  description: Az adott típusú paraméter értéke
                extValue:
                  type: string
                  description: Az adott típus használatához szükséges egyéb érték (pl. mail cím cserénél).
                validFrom:
                  type: string
                  format: date-time
                  description: A paraméter érvényesség kezdete (azaz a létrejötte).
                validTo:
                  type: string
                  format: date-time
                  description: A paraméter érvényességi ideje (ha van ilyen neki).
                comment:
                  type: string
                  description: Az adott paraméterhez kapcsolódó megjegyzés (pl. inviteGeneralDoctor esetén az adott orvossal kapcsolatos leírás adat)
                userId:
                  type: integer
                  description: Annak a felhasználónak az azonosítója, akihez a paraméter tartozik
              required:
                - userParamId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserParam"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: UserParam
  /admin/userParams/{userParamId}:
    get:
      summary: Felhasználói paraméterek adatainak lekérdezése
      operationId: adminGetUserParamById
      parameters:
        - in: path
          name: userParamId
          description: A keresett User Param egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserParam"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: UserParam
    post:
      summary: Felhasználói paraméterek adatainak módosítása
      operationId: adminUpdateUserParam
      parameters:
        - in: path
          name:  userParamId
          description: A módosítandó User Param egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserParam"
              description: A felhasználók dinamikus paraméterei.
              properties:
                userParamId:
                  type: integer
                  description: User Param egyedi azonosítója
                paramCode:
                  type: string
                  description: A paraméter azonosítására használt típus kód
                paramValue:
                  type: string
                  description: Az adott típusú paraméter értéke
                extValue:
                  type: string
                  description: Az adott típus használatához szükséges egyéb érték (pl. mail cím cserénél).
                validFrom:
                  type: string
                  format: date-time
                  description: A paraméter érvényesség kezdete (azaz a létrejötte).
                validTo:
                  type: string
                  format: date-time
                  description: A paraméter érvényességi ideje (ha van ilyen neki).
                comment:
                  type: string
                  description: Az adott paraméterhez kapcsolódó megjegyzés (pl. inviteGeneralDoctor esetén az adott orvossal kapcsolatos leírás adat)
                userId:
                  type: integer
                  description: Annak a felhasználónak az azonosítója, akihez a paraméter tartozik
              required:
                - userParamId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserParam"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: UserParam
    delete:
      summary: Felhasználói paraméterek törlése
      operationId: adminDeleteUserParam
      parameters:
        - in: path
          name: userParamId
          description: A törlendő User Param egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: UserParam
  /admin/semaphores:
    get:
      summary: Szemafor lista lekérdezése
      description: Szemafor lista lekérdezése
      operationId: adminGetSemaphoreList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Semaphore"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Semaphore
    post:
      summary: Szemafor létrehozása
      description: Új szemafor direkt létrehozása.<br><b>Kizárólag rendkívüli esetben használható funkció, mert a rendszer konzisztens működését veszélyeztetheti!</b>
      operationId: adminAddSemaphore
      requestBody:
        description: Az új Semaphore adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Semaphore"
              description: Egy olyan technikai tábla, aminek a segítségével az egyidejűleg végezhető kritikus műveletek kizárása történhet. Az esemény vezérelt szituációknál és a szerverek közötti terhelés megosztási helyzeteknél van szerepe.<br>Pl. mérés feldolgozási állapot változások kezelése.
              properties:
                semaphoreId:
                  type: integer
                  description: Semaphore egyedi azonosítója
                type:
                  type: string
                  description: "A szemafor azonosításhoz használt típus, ami az InstanceId-val együtt tekinthető a szemafor egyedi azonosítójának. Pl: 'measurementState'"
                instanceId:
                  type: string
                  description: "Annak a komponensnek a példány egyedi azonosítója, amire az adott szemafor a kizárást megvalósítja. Pl: mérés rekord measurementId mezőjének értéke."
                value:
                  type: string
                  description: A szemaforhoz tartozó egyéb adat.
                createDate:
                  type: string
                  format: date-time
                validTo:
                  type: string
                  format: date-time
              required:
                - semaphoreId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Semaphore"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Semaphore
  /admin/semaphores/{semaphoreId}:
    get:
      summary: Szemafor adatainak lekérdezése
      description: Adott szemafor adatainak lekérdezése.
      operationId: adminGetSemaphoreById
      parameters:
        - in: path
          name: semaphoreId
          description: A keresett Semaphore egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Semaphore"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Semaphore
  /admin/semaphores/{semaphoreId}/forceSemaphoreDelete:
    delete:
      summary: Szemafor törlése
      description: <b>!!!Kizárólag rendkívüli esetben használható technikai funkció!!!</b><br>Adott szemafor törlése.<br><b>!!!Figyelem! Veszélyeztetheti a rendszer konzisztens működését!!!</b><br>(Ezért is nem lehet a szokásos standard elérési útvonalon keresztül használni.)<b> </b>
      operationId: adminForceDeleteSemaphore
      parameters:
        - in: path
          name: semaphoreId
          description: A törlendő Semaphore egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Semaphore
  /admin/analysers:
    get:
      summary: Kiértékelők lista lekérdezése
      operationId: adminGetAnalysersList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Analysers"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analysers
    post:
      summary: Kiértékelők létrehozása
      operationId: adminAddAnalysers
      requestBody:
        description: Az új Analysers adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Analysers"
              description: Az adott kiértékelés készítését illetve felülvizsgálatát végző személyek nyilvántartását tartalmazza.
              properties:
                analysersId:
                  type: integer
                  description: Analysers egyedi azonosítója
                analyserType:
                  type: string
                  description: A kiértékelést végző orvos típusa (kiértékelő vagy ellenőrző).
                analyseStart:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az adott kiértékelő először kezdte meg a kiértékelés szerkesztését.
                analyseEnd:
                  type: string
                  format: date-time
                  description: A kiértékelés befejezésének időpontja (pontosabban amikor az adott kiértékelő tovább adta a kiértékelést a következő orvos számára, vagy befejezettnek nyilvánította a kiértékelés folyamatát).
                resultState:
                  type: string
                  description: Az adott kiértékelő által hozott döntés, azaz az AnalyseEnd mező kitöltésekor általa meghatározott kiértékelési állapot (pl. Publikus, Nem publikus).
                index:
                  type: integer
                  format: int32
                  description: Hányadik kiértékelőként vett részt a folyamatban.
                analyseId:
                  type: integer
                  description: Az elemzés, amire vonatkozik a kiértékési információ.
                doctorId:
                  type: integer
                  description: A kiértékelést elvégző orvos azonosítója
              required:
                - analysersId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analysers"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Analysers
  /admin/analysers/{analysersId}:
    get:
      summary: Kiértékelők adatainak lekérdezése
      operationId: adminGetAnalysersById
      parameters:
        - in: path
          name: analysersId
          description: A keresett Analysers egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analysers"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Analysers
    post:
      summary: Kiértékelők adatainak módosítása
      operationId: adminUpdateAnalysers
      parameters:
        - in: path
          name:  analysersId
          description: A módosítandó Analysers egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Analysers"
              description: Az adott kiértékelés készítését illetve felülvizsgálatát végző személyek nyilvántartását tartalmazza.
              properties:
                analysersId:
                  type: integer
                  description: Analysers egyedi azonosítója
                analyserType:
                  type: string
                  description: A kiértékelést végző orvos típusa (kiértékelő vagy ellenőrző).
                analyseStart:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az adott kiértékelő először kezdte meg a kiértékelés szerkesztését.
                analyseEnd:
                  type: string
                  format: date-time
                  description: A kiértékelés befejezésének időpontja (pontosabban amikor az adott kiértékelő tovább adta a kiértékelést a következő orvos számára, vagy befejezettnek nyilvánította a kiértékelés folyamatát).
                resultState:
                  type: string
                  description: Az adott kiértékelő által hozott döntés, azaz az AnalyseEnd mező kitöltésekor általa meghatározott kiértékelési állapot (pl. Publikus, Nem publikus).
                index:
                  type: integer
                  format: int32
                  description: Hányadik kiértékelőként vett részt a folyamatban.
                analyseId:
                  type: integer
                  description: Az elemzés, amire vonatkozik a kiértékési információ.
                doctorId:
                  type: integer
                  description: A kiértékelést elvégző orvos azonosítója
              required:
                - analysersId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analysers"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Analysers
    delete:
      summary: Kiértékelők törlése
      operationId: adminDeleteAnalysers
      parameters:
        - in: path
          name: analysersId
          description: A törlendő Analysers egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Analysers
  /admin/measurementEvents:
    get:
      summary: Mérés események lista lekérdezése
      operationId: adminGetMeasurementEventList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MeasurementEvent"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: MeasurementEvent
    post:
      summary: Mérés események létrehozása
      operationId: adminAddMeasurementEvent
      requestBody:
        description: Az új Measurement Event adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/MeasurementEvent"
              description: A mérés állapot változásaival és feldolgozásával kapcsolatos események naplója.
              properties:
                measurementEventId:
                  type: integer
                  description: Measurement Event egyedi azonosítója
                eventType:
                  type: string
                  description: Olyan szótárkód, ami az esemény típusát jelenti.
                eventData:
                  type: string
                  description: Az eseménnyel kapcsolatos lényeges adat, pl. milyen állapotról milyen állapotra változott a mérés vagy a kiértékelés.
                eventTime:
                  type: string
                  format: date-time
                  description: Az esemény bekövetkezésének dátuma és időpontja.
                text:
                  type: string
                  description: Egyéb az eseményhez köthető információk adata, pl. elemzés részletes szövege (HTML formátumban) az adott állapotváltáskor.
                measurementId:
                  type: integer
                  description: A mérés azonosítója, amire az esemény vonatkozik.
                userId:
                  type: integer
                  description: Az eseményt előidéző vagy végrehajtó ügyfél (ill. orvos) azonosítója.
                analyseId:
                  type: integer
                  description: A kiértékelés azonosítója, amire az esemény vonatkozik
              required:
                - measurementEventId
                - eventType
                - eventData
                - eventTime
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/MeasurementEvent"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: MeasurementEvent
  /admin/measurementEvents/{measurementEventId}:
    get:
      summary: Mérés események adatainak lekérdezése
      operationId: adminGetMeasurementEventById
      parameters:
        - in: path
          name: measurementEventId
          description: A keresett Measurement Event egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/MeasurementEvent"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: MeasurementEvent
    post:
      summary: Mérés események adatainak módosítása
      operationId: adminUpdateMeasurementEvent
      parameters:
        - in: path
          name:  measurementEventId
          description: A módosítandó Measurement Event egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/MeasurementEvent"
              description: A mérés állapot változásaival és feldolgozásával kapcsolatos események naplója.
              properties:
                measurementEventId:
                  type: integer
                  description: Measurement Event egyedi azonosítója
                eventType:
                  type: string
                  description: Olyan szótárkód, ami az esemény típusát jelenti.
                eventData:
                  type: string
                  description: Az eseménnyel kapcsolatos lényeges adat, pl. milyen állapotról milyen állapotra változott a mérés vagy a kiértékelés.
                eventTime:
                  type: string
                  format: date-time
                  description: Az esemény bekövetkezésének dátuma és időpontja.
                text:
                  type: string
                  description: Egyéb az eseményhez köthető információk adata, pl. elemzés részletes szövege (HTML formátumban) az adott állapotváltáskor.
                measurementId:
                  type: integer
                  description: A mérés azonosítója, amire az esemény vonatkozik.
                userId:
                  type: integer
                  description: Az eseményt előidéző vagy végrehajtó ügyfél (ill. orvos) azonosítója.
                analyseId:
                  type: integer
                  description: A kiértékelés azonosítója, amire az esemény vonatkozik
              required:
                - measurementEventId
                - eventType
                - eventData
                - eventTime
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/MeasurementEvent"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: MeasurementEvent
    delete:
      summary: Mérés események törlése
      operationId: adminDeleteMeasurementEvent
      parameters:
        - in: path
          name: measurementEventId
          description: A törlendő Measurement Event egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: MeasurementEvent
  /admin/listSelections:
    get:
      summary: Listában kiválasztás lista lekérdezése
      operationId: adminGetListSelectionList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListSelection"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: ListSelection
    post:
      summary: Listában kiválasztás létrehozása
      operationId: adminAddListSelection
      requestBody:
        description: Az új List Selection adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ListSelection"
              description: Adott listákban kiválasztott elemek nyilvántartása a konkurens adat használat vezérléséhez.
              properties:
                listSelectionId:
                  type: integer
                  description: List Selection egyedi azonosítója
                type:
                  type: string
                  description: A kiválasztás (vagy a kiválasztott elem) típus azonosítása. (pl. ANALYSABLE - a kiértékelendő mérések checkbox-os kiértékeléséhez)
                selectedEntityId:
                  type: integer
                  format: int32
                  description: A típusnak megfelelő kiválasztott entitáson belüli rekord egyedi azonosítója. (Pl. ANALYSABLE típus esetén a mérés Id)
                groupEntityId:
                  type: integer
                  format: int32
                  description: Az adott típushoz tartozóan a kiválasztási csoportként használt rekord egyedi azonosítója. (Pl. ANALYSABLE típus esetében a Kiértékelés azonosító, ami összefogja a kiválasztott Méréseket)
                createDate:
                  type: string
                  format: date-time
                  description: Az a dátum és idő, amikor a kiválasztás megtörtént.
                activityDate:
                  type: string
                  format: date-time
                  description: Az utolsó ezzel a kiválasztással kapcsolatos tevékenység időpontja. Arra alkalmas, hogy az adott kiválasztást követően megítélhető legyen, hogy inaktivitás esetén mikor lehet automatikusan megszüntetni a kiválastottságot.
                selectorId:
                  type: integer
                  description: A kiválasztást végző felhasználó (pl. orvos) azonosítója
              required:
                - listSelectionId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListSelection"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: ListSelection
  /admin/listSelections/{listSelectionId}:
    get:
      summary: Listában kiválasztás adatainak lekérdezése
      operationId: adminGetListSelectionById
      parameters:
        - in: path
          name: listSelectionId
          description: A keresett List Selection egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListSelection"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: ListSelection
    post:
      summary: Listában kiválasztás adatainak módosítása
      operationId: adminUpdateListSelection
      parameters:
        - in: path
          name:  listSelectionId
          description: A módosítandó List Selection egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ListSelection"
              description: Adott listákban kiválasztott elemek nyilvántartása a konkurens adat használat vezérléséhez.
              properties:
                listSelectionId:
                  type: integer
                  description: List Selection egyedi azonosítója
                type:
                  type: string
                  description: A kiválasztás (vagy a kiválasztott elem) típus azonosítása. (pl. ANALYSABLE - a kiértékelendő mérések checkbox-os kiértékeléséhez)
                selectedEntityId:
                  type: integer
                  format: int32
                  description: A típusnak megfelelő kiválasztott entitáson belüli rekord egyedi azonosítója. (Pl. ANALYSABLE típus esetén a mérés Id)
                groupEntityId:
                  type: integer
                  format: int32
                  description: Az adott típushoz tartozóan a kiválasztási csoportként használt rekord egyedi azonosítója. (Pl. ANALYSABLE típus esetében a Kiértékelés azonosító, ami összefogja a kiválasztott Méréseket)
                createDate:
                  type: string
                  format: date-time
                  description: Az a dátum és idő, amikor a kiválasztás megtörtént.
                activityDate:
                  type: string
                  format: date-time
                  description: Az utolsó ezzel a kiválasztással kapcsolatos tevékenység időpontja. Arra alkalmas, hogy az adott kiválasztást követően megítélhető legyen, hogy inaktivitás esetén mikor lehet automatikusan megszüntetni a kiválastottságot.
                selectorId:
                  type: integer
                  description: A kiválasztást végző felhasználó (pl. orvos) azonosítója
              required:
                - listSelectionId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListSelection"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: ListSelection
    delete:
      summary: Listában kiválasztás törlése
      operationId: adminDeleteListSelection
      parameters:
        - in: path
          name: listSelectionId
          description: A törlendő List Selection egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: ListSelection
  /admin/productPackages:
    get:
      summary: Termék díjcsomag lista lekérdezése
      operationId: adminGetProductPackageList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPackage"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
        - Config
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: ProductPackage
    post:
      summary: Termék díjcsomag létrehozása
      description: Új díjcsomag létrehozása. Ha a disablePrev paraméter true, akkor beállítja az adott díjcsomag típus és eszköz típus szerinti aktuálisan érvényes (de a üres validTo mezőjű) rekord érvényességét is az új rekord előtti validFrom értéke szerinti előző pillanatra, hogy akkor megtörténjen majd az érvényesség átváltódása.
      operationId: adminAddProductPackage
      parameters:
        - in: query
          name: disablePrev
          description: ha értéke true, akkor az ilyen típusú termékre és eszköz típusra vonatkozó előző rekordba a most kapott dátum az érvényesség vége értékre be lesz állítva, hogy ne az a rekord legyen az adott időponttól kezdve érvényes
          required: true
          schema:
            type: boolean
            default: true
      requestBody:
        description: Az új Product Package adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ProductPackage"
              description: Adott termék típusra vonatkozó alapértelmezett díjcsomag
              properties:
                productPackageId:
                  type: integer
                  description: Product Package egyedi azonosítója
                productType:
                  type: string
                  description: Az a termék típus kód, amire vonatkozik a díj (pl. Rendszerhasználati díj, Eszöz bérlési díj, Eszköz vásárlási díj)
                deviceType:
                  type: string
                  description: Az az eszköz típus kód, amire vonatkozik az adott termék típus díj (pl. PrivatDoktorEKG, OmronViva9210, Roche, stb)
                fee01:
                  type: integer
                  format: int32
                  description: Az 1 havonat fizetett alapértelmezett díj
                fee03:
                  type: integer
                  format: int32
                  description: A 3 havonta (negyedévente) fizetett alapértelmezett díj
                fee06:
                  type: integer
                  format: int32
                  description: A 6 havonta (félévente) fizetett alapértelmezett díj
                fee12:
                  type: integer
                  format: int32
                  description: A 12 havonta (évente) fizetett alapértelmezett díj
                vat:
                  type: integer
                  format: int32
                  description: A bruttó ár kiszámításához használandó ÁFA (%) értéke, pl. 27(%)
                defaultPeriod:
                  type: integer
                  format: int32
                  default: 1
                  description: Az adott termék eszköznél használatos alapértelmezett fizetési gyakoriság (1=Fee01, 2=Fee03, 3=Fee06, 4=Fee12)
                validFrom:
                  type: string
                  format: date-time
                  description: Ettől az időponttól kezdve választható ki az adott díjcsomag
                validTo:
                  type: string
                  format: date-time
                  description: Eddig az ideig választható ki az adott díjcsomag
                documentId:
                  type: integer
                  description: A szolgáltatás csomag leírását tartalmazó dokumentum azonosítója
              required:
                - productPackageId
                - productType
                - deviceType
                - validFrom
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ProductPackage"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
        - Config
      x-implementation: "x-create"
      x-base-domain: ProductPackage
  /admin/productPackages/{productPackageId}:
    get:
      summary: Termék díjcsomag adatainak lekérdezése
      operationId: adminGetProductPackageById
      parameters:
        - in: path
          name: productPackageId
          description: A keresett Product Package egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ProductPackage"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: ProductPackage
    post:
      summary: Termék díjcsomag adatainak módosítása
      operationId: adminUpdateProductPackage
      parameters:
        - in: path
          name:  productPackageId
          description: A módosítandó Product Package egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ProductPackage"
              description: Adott termék típusra vonatkozó alapértelmezett díjcsomag
              properties:
                productPackageId:
                  type: integer
                  description: Product Package egyedi azonosítója
                productType:
                  type: string
                  description: Az a termék típus kód, amire vonatkozik a díj (pl. Rendszerhasználati díj, Eszöz bérlési díj, Eszköz vásárlási díj)
                deviceType:
                  type: string
                  description: Az az eszköz típus kód, amire vonatkozik az adott termék típus díj (pl. PrivatDoktorEKG, OmronViva9210, Roche, stb)
                fee01:
                  type: integer
                  format: int32
                  description: Az 1 havonat fizetett alapértelmezett díj
                fee03:
                  type: integer
                  format: int32
                  description: A 3 havonta (negyedévente) fizetett alapértelmezett díj
                fee06:
                  type: integer
                  format: int32
                  description: A 6 havonta (félévente) fizetett alapértelmezett díj
                fee12:
                  type: integer
                  format: int32
                  description: A 12 havonta (évente) fizetett alapértelmezett díj
                vat:
                  type: integer
                  format: int32
                  description: A bruttó ár kiszámításához használandó ÁFA (%) értéke, pl. 27(%)
                defaultPeriod:
                  type: integer
                  format: int32
                  default: 1
                  description: Az adott termék eszköznél használatos alapértelmezett fizetési gyakoriság (1=Fee01, 2=Fee03, 3=Fee06, 4=Fee12)
                validFrom:
                  type: string
                  format: date-time
                  description: Ettől az időponttól kezdve választható ki az adott díjcsomag
                validTo:
                  type: string
                  format: date-time
                  description: Eddig az ideig választható ki az adott díjcsomag
                documentId:
                  type: integer
                  description: A szolgáltatás csomag leírását tartalmazó dokumentum azonosítója
              required:
                - productPackageId
                - productType
                - deviceType
                - validFrom
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ProductPackage"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: ProductPackage
    delete:
      summary: Termék díjcsomag törlése
      description: Az adott díjcsomag csak logikailag törlődik, azaz beíródik a kapott validTo paraméter (vagy az aktuális dátum, ha az üres volt) a rekordba.
      operationId: adminDeleteProductPackage
      parameters:
        - in: path
          name: productPackageId
          description: A törlendő Product Package egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: validTo
          description: Mikortól szűnjön meg az adott díjcsomag érvényessége
          schema:
            type: string
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
        - Config
      x-implementation: "x-delete"
      x-base-domain: ProductPackage
  /admin/userOrders:
    get:
      summary: Ügyfél megrendelés lista lekérdezése
      operationId: adminGetUserOrderList
      parameters:
        - $ref: "#/components/parameters/FilterParamUserOrder"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: UserOrder
    post:
      summary: Ügyfél megrendelés létrehozása
      operationId: adminAddUserOrder
      requestBody:
        description: Az új User Order adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserOrder"
              description: Az ügyfelek által megrendelt szolgáltatások, amelyek a számlázás során figyelembe kell venni
              properties:
                userOrderId:
                  type: integer
                  description: User Order egyedi azonosítója
                orderDate:
                  type: string
                  format: date-time
                  description: Az a kezdő időpont, amikor a megrendelés történt
                fee:
                  type: integer
                  format: int32
                  description: Az az összeg, amit a meghatározott gyakorisággal az adott ügyfélnek ténylegesen fizetnie kell ezért a meghatározott szolgáltatásért. (Értéke eltérhet a díjcsomagban meghatározott díjtól, ha valamilyen ok miatt, pl. kedvezmény adása m iatt, az alapértelmezés felülbírálásra került.)
                vat:
                  type: integer
                  format: int32
                  description: A bruttó ár kiszámításához használandó ÁFA (%) értéke, pl. 27(%)
                financialLiability:
                  type: boolean
                  description: Ha értéke true, akkor ez a tétel ténylegesen fizetendő, egyébként csak a számlán tételként szerepeltetendő, de nem jelent tényleges fizetési kötelezettséget (pl. mert vásárolt eszközre vonatkozik, aminek a kifizetése már megtörtént)
                financialLiabilityReadyDate:
                  type: string
                  format: date-time
                  description: Ha az adott tétel fizetendő, akkor mikor történt meg az egyszeri tényleges átadás a számlázó rendszer felé. Ha értéke üres, akkor még nem történt meg.
                duration:
                  type: integer
                  format: int32
                  description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                paymentDeadline:
                  type: integer
                  format: int32
                  description: Fzetési határidő, alapértelmezésben 8 nap
                paymentInterval:
                  type: integer
                  format: int32
                  description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
                firstValidityDate:
                  type: string
                  format: date-time
                  description: Az a dátum, amikor legelőször átadásra került a megrendelés tétel a számlázás felé
                validityDate:
                  type: string
                  format: date-time
                  description: "Az az érvényességi dátum, amit a rendszer visszakapott számlázó rendszer felől - a jelentése: eddig a dátumig tekinthető rendezettnek az adott megrendelési tétel díja"
                baseFee:
                  type: integer
                  format: int32
                  description: Az az összeg, ami a megrendelés felvételekor a kiválasztott díjcsomag szerint fizetendő (Ezt bírálhatja felül a Fee mező tartalma, ha egyedi díjat kap az ügyfél az adott eszközre)
                orderStatus:
                  type: string
                  description: "Olyan állapotkód, ami jelzi, hogy az adott megrendelés (előfizetés) érvényes-e, azaz figyelembeveendő-e a következő számla készítésekor<br>Lehetséges értékei:<br>WAIT - már rögzített, de a páciens még nem csatlakoztatta az eszközt a rendszerhez<br>ACTIVE - aktív előfizetés<br>INACTIVE - visszavont előfizetés<br>STOLEN - lopott eszköz miatt felfüggesztve"
                modifyDate:
                  type: string
                  format: date-time
                  description: Az adatmódosítás időpontja
                modifyReason:
                  type: string
                  description: "Az utolsó (státusz) módosítás milyen funkció miatt történt (pl: IMPORT, PAYMENT, ADMIN)"
                reasonReference:
                  type: integer
                  format: int32
                  description: "A módosításhoz kapcsolódó referencia azonosító (pl: ha a modifyReason=PAYMENT, akkor az adott fizetési folyamat paymentId-je)"
                reasonReferenceLine:
                  type: integer
                  format: int32
                  description: Ha a módosítás import állomány miatt keletkezett, akkor az adott csv állomány hányadik sora a forrás adat
                useFirstFee:
                  type: boolean
                  description: Ha értéke true, akkor a megrendelés első befizetésekor a tört havi összeggel kiegészített összeg (azaz a firstFee mező értéke) a fizetendő.
                firstFee:
                  type: integer
                  format: int32
                  description: A megrendelés első bifezetndő összege más, mint a későbbi szokásos fizetendő összeg (mert a megrendelés időpontja alapján még tört hónapra vonatkozó értéket is kell fizetni), akkor ez a mező tartalmazza az értéket.<br>Csak addig veendő figyelembe, amíg a useFirstFee mező értéke true, azaz a legelső befizetés meg nem történt.
                productPackageId:
                  type: integer
                  description: A megrendelés melyik díjcsomag alapján jött létre
                userId:
                  type: integer
                  description: Melyik ügyfélnek a megrendelése
                deviceId:
                  type: integer
                  description: Az eszköz azonosítója, amire a megrendelés vonatkozik
                modifierId:
                  type: integer
                  description: A rögzítő vagy utoljára módosító azonosítója
                couponId:
                  type: integer
                  description: Kedvezmény azonosító
              required:
                - userOrderId
                - fee
                - duration
                - paymentInterval
                - baseFee
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-responses:
        "406":
          "PAYMENTINTERVAL_MISMATCH": "Mivel van érvényes adatletöltés szolgáltatása az ügyfélnek, ezért a fizetési gyakoriság csak aszerinti lehet!"
      x-implementation: "x-create"
      x-base-domain: UserOrder
  /admin/userOrders/{userOrderId}:
    get:
      summary: Ügyfél megrendelés adatainak lekérdezése
      operationId: adminGetUserOrderById
      parameters:
        - in: path
          name: userOrderId
          description: A keresett User Order egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-implementation: "x-findById"
      x-base-domain: UserOrder
    post:
      summary: Ügyfél megrendelés adatainak módosítása
      operationId: adminUpdateUserOrder
      parameters:
        - in: path
          name:  userOrderId
          description: A módosítandó User Order egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/UserOrder"
              description: Az ügyfelek által megrendelt szolgáltatások, amelyek a számlázás során figyelembe kell venni
              properties:
                userOrderId:
                  type: integer
                  description: User Order egyedi azonosítója
                orderDate:
                  type: string
                  format: date-time
                  description: Az a kezdő időpont, amikor a megrendelés történt
                fee:
                  type: integer
                  format: int32
                  description: Az az összeg, amit a meghatározott gyakorisággal az adott ügyfélnek ténylegesen fizetnie kell ezért a meghatározott szolgáltatásért. (Értéke eltérhet a díjcsomagban meghatározott díjtól, ha valamilyen ok miatt, pl. kedvezmény adása m iatt, az alapértelmezés felülbírálásra került.)
                vat:
                  type: integer
                  format: int32
                  description: A bruttó ár kiszámításához használandó ÁFA (%) értéke, pl. 27(%)
                financialLiability:
                  type: boolean
                  description: Ha értéke true, akkor ez a tétel ténylegesen fizetendő, egyébként csak a számlán tételként szerepeltetendő, de nem jelent tényleges fizetési kötelezettséget (pl. mert vásárolt eszközre vonatkozik, aminek a kifizetése már megtörtént)
                financialLiabilityReadyDate:
                  type: string
                  format: date-time
                  description: Ha az adott tétel fizetendő, akkor mikor történt meg az egyszeri tényleges átadás a számlázó rendszer felé. Ha értéke üres, akkor még nem történt meg.
                duration:
                  type: integer
                  format: int32
                  description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                paymentDeadline:
                  type: integer
                  format: int32
                  description: Fzetési határidő, alapértelmezésben 8 nap
                paymentInterval:
                  type: integer
                  format: int32
                  description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
                firstValidityDate:
                  type: string
                  format: date-time
                  description: Az a dátum, amikor legelőször átadásra került a megrendelés tétel a számlázás felé
                validityDate:
                  type: string
                  format: date-time
                  description: "Az az érvényességi dátum, amit a rendszer visszakapott számlázó rendszer felől - a jelentése: eddig a dátumig tekinthető rendezettnek az adott megrendelési tétel díja"
                baseFee:
                  type: integer
                  format: int32
                  description: Az az összeg, ami a megrendelés felvételekor a kiválasztott díjcsomag szerint fizetendő (Ezt bírálhatja felül a Fee mező tartalma, ha egyedi díjat kap az ügyfél az adott eszközre)
                orderStatus:
                  type: string
                  description: "Olyan állapotkód, ami jelzi, hogy az adott megrendelés (előfizetés) érvényes-e, azaz figyelembeveendő-e a következő számla készítésekor<br>Lehetséges értékei:<br>WAIT - már rögzített, de a páciens még nem csatlakoztatta az eszközt a rendszerhez<br>ACTIVE - aktív előfizetés<br>INACTIVE - visszavont előfizetés<br>STOLEN - lopott eszköz miatt felfüggesztve"
                modifyDate:
                  type: string
                  format: date-time
                  description: Az adatmódosítás időpontja
                modifyReason:
                  type: string
                  description: "Az utolsó (státusz) módosítás milyen funkció miatt történt (pl: IMPORT, PAYMENT, ADMIN)"
                reasonReference:
                  type: integer
                  format: int32
                  description: "A módosításhoz kapcsolódó referencia azonosító (pl: ha a modifyReason=PAYMENT, akkor az adott fizetési folyamat paymentId-je)"
                reasonReferenceLine:
                  type: integer
                  format: int32
                  description: Ha a módosítás import állomány miatt keletkezett, akkor az adott csv állomány hányadik sora a forrás adat
                useFirstFee:
                  type: boolean
                  description: Ha értéke true, akkor a megrendelés első befizetésekor a tört havi összeggel kiegészített összeg (azaz a firstFee mező értéke) a fizetendő.
                firstFee:
                  type: integer
                  format: int32
                  description: A megrendelés első bifezetndő összege más, mint a későbbi szokásos fizetendő összeg (mert a megrendelés időpontja alapján még tört hónapra vonatkozó értéket is kell fizetni), akkor ez a mező tartalmazza az értéket.<br>Csak addig veendő figyelembe, amíg a useFirstFee mező értéke true, azaz a legelső befizetés meg nem történt.
                productPackageId:
                  type: integer
                  description: A megrendelés melyik díjcsomag alapján jött létre
                userId:
                  type: integer
                  description: Melyik ügyfélnek a megrendelése
                deviceId:
                  type: integer
                  description: Az eszköz azonosítója, amire a megrendelés vonatkozik
                modifierId:
                  type: integer
                  description: A rögzítő vagy utoljára módosító azonosítója
                couponId:
                  type: integer
                  description: Kedvezmény azonosító
              required:
                - userOrderId
                - fee
                - duration
                - paymentInterval
                - baseFee
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: UserOrder
    delete:
      summary: Ügyfél megrendelés törlése
      description: Adott ügyfél megrendelés fizikai(!) törlése. Használata helyett inkább a cancelOrder funkció javasolt, mert az végzi a megrendelés inaktív állapotba hozását!!!
      operationId: adminDeleteUserOrder
      parameters:
        - in: path
          name: userOrderId
          description: A törlendő User Order egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: UserOrder
  /admin/userOrders/{userOrderId}/cancelOrder:
    delete:
      summary: Ügyfél megrendelés lemondása
      description: Az adott ügyfél megrendelés lemondása (azaz logikai törlése, vagyis INACTIVE állapotba hozása).
      operationId: adminCancelUserOrder
      parameters:
        - in: path
          name: userOrderId
          description: A törlendő User Order egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A logikai törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-responses:
        "404":
          #---
          "USERORDER_NOT_FOUND": "Nem található ilyen megrendelés!"
        "406":
          #---
          "USERORDER_INACTIVE_YET": "A megrendelés állapota nem aktív!"
      x-implementation: "x-delete"
      x-base-domain: UserOrder
  /admin/userOrders/{userOrderId}/setOrderStatus:
    post:
      summary: Ügyfél megrendelés státuszának módosítása
      description: "Az adott szolgáltatás megrendelés státuszának és/vagy érvényességi dátumának illetve ha meg van adva, akkor a financialLiability átállítása.<br><b>Ha nincs megadva a financialLiability értéke a hívásban, akkor ha az orderStatus értéke WAIT-ről ACTIVE-ra változik, abban az esetben a rendszer automatikusan false-ra fogja állítani a financialLiability mező értékét!</b>"
      operationId: adminSetUserOrderStatus
      parameters:
        - in: path
          name:  userOrderId
          description: A módosítandó User Order egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: Milyen státusz kerüljön beállításra a megrendelésbe
                validityDate:
                  type: string
                  format: date-time
                  description: A megrendelés érvényessége (ha nincs megadva, akkor marad az eddigi)
                orderDate:
                  type: string
                  format: date-time
                  description: A megrendelés dátuma (ha nincs megadva, akkor marad az eddigi)
                financialLiability:
                  type: boolean
                  description: Ha értéke true, akkor ez a tétel ténylegesen fizetendő, egyébként csak a számlán tételként szerepeltetendő, de nem jelent tényleges fizetési kötelezettséget (pl. mert vásárolt eszközre vonatkozik, aminek a kifizetése már megtörtént)
                paymentDeadline:
                  type: integer
                  description: Fizetési határidő, alapértelmezésben 8 nap
              required:
                - status
            examples:
              Megrendelés aktívra állítása 2020 év végéig fizetetten:
                value:
                  status: "DICT_ORDER_ACTIVE"
                  validityDate: "2020-12-31T23:59:59.000Z"
                  financialLiability: false
                  paymentDeadline: 8
              Megrendelés aktívra állítása 2020 januártól szeptember 30-ig:
                value:
                  status: "DICT_ORDER_ACTIVE"
                  orderDate: "2020-01-01T00:00:00.000Z"
                  validityDate: "2020-09-30T23:59:59.000Z"
                  financialLiability: false
                  paymentDeadline: 8
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - OfficeManager
      x-base-domain: UserOrder
  /admin/userOrders/createNewUserOrder:
    post:
      summary: Ügyfél megrendelés rögzítése
      description: Egy eszközre vonatkozó új szolgáltatás megrendelés rögzítése valamely ügyfélhez.
      operationId: adminCreateNewUserOrder
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: Ehhez az ügyfélhez fog tartozni a megrendelés
                deviceId:
                  type: integer
                  description: Erre az eszközre vonatkozik a megrendelés
                productType:
                  type: string
                  enum: [DICT_PRODUCT_USER_FEE, DICT_PRODUCT_RENT_FEE, DICT_PRODUCT_PURCHASE ]
                  description: A megrendelés típusa (de ha nincs megadva, akkor a productPackageId ötelezően kitöltendő!)
                productPackageId:
                  type: integer
                  description: Egy termék (szolgáltatás) azonosítója (ha a productType meg van adva, akkor figyelmen kívül marad ez az érték!)
                orderDate:
                  type: string
                  format: date-time
                  description: A megrendelés dátuma (ha nincs megadva, akkor az aktuális dátum lesz az értéke)
                fee:
                  type: integer
                  description: A megrendelésért fizetendő netto összeg (ha nincs megadva, akkor a terméknek megfelelő alapértelmezett összeg lesz az érték)
                vat:
                  type: integer
                  description: A megrendelésért fizetendő összeg Áfa százaléka (ha nincs megadva, akkor a terméknek megfelelő alapértelmezett Áfa százalék lesz az érték)
                paymentInterval:
                  type: integer
                  enum: [1,3,6,12]
                  description: A fizetési intervallum hnapokban megadva (ha nincs megadva, akkor a terméknek megfelelő alapértelmezett fizetési gyakoriság lesz)
                duration:
                  type: integer
                  description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                paymentDeadline:
                  type: integer
                  description: Fizetési határidő, alapértelmezésben 8 nap
                financialLiability:
                  type: boolean
                  description: Ha értéke false, akkor ez a tétel csak a számlán szerepeltetendő, de nem jelent tényleges fizetési kötelezettséget (pl. mert vásárolt eszközre vonatkozik, aminek a kifizetése már megtörtént). Alapértelmezésben true az értéke, azaz fizetendő.
                useFirstFee:
                  type: boolean
                  description: Ha értéke true, akkor a megrendelés első befizetésekor a tört havi összeggel kiegészített összeg (azaz a firstFee mező értéke) a fizetendő.
                firstFee:
                  type: integer
                  format: int32
                  description: A megrendelés első bifezetndő összege más, mint a későbbi szokásos fizetendő összeg (mert a megrendelés időpontja alapján még tört hónapra vonatkozó értéket is kell fizetni), akkor ez a mező tartalmazza az értéket.<br>Csak addig veendő figyelembe, amíg a useFirstFee mező értéke true, azaz a legelső befizetés meg nem történt.
              required:
                - userId
                - deviceId
                - productType
                  productPackageId
            examples:
              Ügyfél szolgáltatás megrendelés a 38-as eszközre:
                value:
                  userId: 17
                  deviceId: 38
                  productType: "DICT_PRODUCT_USER_FEE"
              Ügyfél szolgáltatás megrendelés a 38-as eszközre tört hónap esetén:
                value:
                  userId: 17
                  deviceId: 38
                  productType: "DICT_PRODUCT_USER_FEE"
                  useFirstFee: true
                  firstFee: 17900
              Eszköz bérlés megrendelés a 38-as eszközre:
                value:
                  userId: 17
                  deviceId: 38
                  productType: "DICT_PRODUCT_RENT_FEE"
              Szolgáltatás csomag azonosítója alapján megrendelés:
                value:
                  userId: 17
                  deviceId: 38
                  productPackageId: 13
      responses:
        '200': # succesfull operation
          $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Admin
        - Bills
        - OfficeManager
      x-responses:
        "406":
          #---
          "DEVICE_ORDER_FOUND_ALREADY": "Van már (vagy még) ilyen aktív megrendelés!"
  /admin/invoicingEventlogs:
    get:
      summary: Számlázás eseménylog lista lekérdezése
      operationId: adminGetInvoicingEventlogList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InvoicingEventlog"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: InvoicingEventlog
    post:
      summary: Számlázás eseménylog létrehozása
      operationId: adminAddInvoicingEventlog
      requestBody:
        description: Az új Invoicing Eventlog adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/InvoicingEventlog"
              description: A számlázással kapcsolatos import-export események
              properties:
                invoicingEventlogId:
                  type: integer
                  description: Invoicing Eventlog egyedi azonosítója
                startDate:
                  type: string
                  format: date-time
                  description: Az adott számlázási esemény kezdetének időpontja
                endDate:
                  type: string
                  format: date-time
                  description: Az adott számlázási esemény befejezésének időpontja
                eventType:
                  type: string
                  description: Az adott számlázási esemény típusa (pl. számlazási állapot, user export, számla import, stb.)
                sequence:
                  type: integer
                  format: int32
                  description: Az adott típus szerinti sorszám (pl. hányadik ügyfél adat export - ez a sorszám szerepel az export fájl nevében)
                status:
                  type: string
                  description: Az adott esemény állapota (START,OK,ERROR)
                fileName:
                  type: string
                  description: Az adott számlázási eseményben szereplő állomány neve (ha fájlra vonatkozik az esemény)
                otherId:
                  type: string
                  description: Az adott számlázási eseményhez kapcsolódó egyéb azonosító (pl. számla állomány import esetében a külső számla azonosító)
                otherDate:
                  type: string
                  format: date-time
                  description: A számlázási eseményhez kapcsolódó egyéb dátum (pl. milyen adatokig történt a megrendelések leválogatása; vagy pl. a beimportált számla kelte)
                otherValue:
                  type: integer
                  format: int32
                  description: A számlázási eseményhez tartozó egyéb numerikus érték (pl. a számla egyenlege)
                comment:
                  type: string
                  description: Az eseményhez fűzött megjegyzés
                exportCount:
                  type: integer
                  format: int32
                  description: Az adott típusú funkció lefutása során hány rekord került exportálásra a csv állományba.
                importCount:
                  type: integer
                  format: int32
                errorCount:
                  type: integer
                  format: int32
                userId:
                  type: integer
                  description: Az ügyfél, akire a számlázási esemény vonatkozik
              required:
                - invoicingEventlogId
                - eventType
                - sequence
                - status
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/InvoicingEventlog"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: InvoicingEventlog
  /admin/invoicingEventlogs/{invoicingEventlogId}:
    get:
      summary: Számlázás eseménylog adatainak lekérdezése
      operationId: adminGetInvoicingEventlogById
      parameters:
        - in: path
          name: invoicingEventlogId
          description: A keresett Invoicing Eventlog egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/InvoicingEventlog"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: InvoicingEventlog
  /admin/notifications:
    get:
      summary: Értesítés lista lekérdezése
      operationId: adminGetNotificationList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Notification
    post:
      summary: Értesítés létrehozása
      operationId: adminAddNotification
      requestBody:
        description: Az új Notification adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Notification"
              description: Az ügyfeleknek szóló értesítések adatai
              properties:
                notificationId:
                  type: integer
                  description: Notification egyedi azonosítója
                priority:
                  type: integer
                  format: int32
                  description: Az értesítés fontossága (0-100 közötti érték, ahol a 0 értékűek kerülnek kiküldésre leghamarabb)
                createDate:
                  type: string
                  format: date-time
                  description: Az üzenet keletkezése<br>
                scheduleDate:
                  type: string
                  format: date-time
                  description: Az a legkorábbi időpont, amikor az értesítés már kiküldhető (általában a CreateDate-el azonos értékű - azaz az értesítés keletkezését követően bármikor kiküldhető)
                sendDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az üzenet a megfelelő kiküldő platform felé átadásra került
                viewDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az adott elemet (pl. kiértékelést) megtekintette az, akinek ment az értesítés.
                platform:
                  type: string
                  description: Milyen üzenetküldő rendszeren keresztül kell továbbítani (pl. Email, Push)
                notificationType:
                  type: string
                  description: Értesítés típusa (pl. NOTIFY_USER_ANALYSE, NOTIFY_DOCTOR_ANALYSE), amivel csoportosítható és egy üzenetként mehetnek ki az azonos címzetthez tartozó üzenetek
                groupable:
                  type: boolean
                  description: Ha értéke true, akkor több, ugyanahhoz az ügyfélhez tartozó, ugyanilyen értesítési típusú üzenet egyben is kiküldhető
                subject:
                  type: string
                  description: Az üzenet tárgya, azaz a rövid tartalma
                message:
                  type: string
                  description: Az üzenet szövege
                referenceType:
                  type: string
                  description: Annak az objektumnak a típusa, ami miatt az értesítés keletkezett (pl. kiértékelés publikussá válása)
                reference:
                  type: string
                  description: Annak az objektumnak az azonosítója, ami miatt az értesítés keletkezett (pl. publikus állapotú kiértékelés rekord azonosítója)
                enabled:
                  type: boolean
                  description: Csak akkor kerül elküldésre az értesítés, ha ez a mező true értékű
                referenceGuid:
                  type: string
                  description: Annak a rekordnak a Guid azonosítója (pl. kiértékelés Guid azonosítója), amire a konzultációs kérés vonatkozik.
                userId:
                  type: integer
                  description: Melyik felhasználónak szól az üzenet
              required:
                - notificationId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Notification"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Notification
  /admin/notifications/{notificationId}:
    get:
      summary: Értesítés adatainak lekérdezése
      operationId: adminGetNotificationById
      parameters:
        - in: path
          name: notificationId
          description: A keresett Notification egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Notification"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Notification
    post:
      summary: Értesítés adatainak módosítása
      operationId: adminUpdateNotification
      parameters:
        - in: path
          name:  notificationId
          description: A módosítandó Notification egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Notification"
              description: Az ügyfeleknek szóló értesítések adatai
              properties:
                notificationId:
                  type: integer
                  description: Notification egyedi azonosítója
                priority:
                  type: integer
                  format: int32
                  description: Az értesítés fontossága (0-100 közötti érték, ahol a 0 értékűek kerülnek kiküldésre leghamarabb)
                createDate:
                  type: string
                  format: date-time
                  description: Az üzenet keletkezése<br>
                scheduleDate:
                  type: string
                  format: date-time
                  description: Az a legkorábbi időpont, amikor az értesítés már kiküldhető (általában a CreateDate-el azonos értékű - azaz az értesítés keletkezését követően bármikor kiküldhető)
                sendDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az üzenet a megfelelő kiküldő platform felé átadásra került
                viewDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor az adott elemet (pl. kiértékelést) megtekintette az, akinek ment az értesítés.
                platform:
                  type: string
                  description: Milyen üzenetküldő rendszeren keresztül kell továbbítani (pl. Email, Push)
                notificationType:
                  type: string
                  description: Értesítés típusa (pl. NOTIFY_USER_ANALYSE, NOTIFY_DOCTOR_ANALYSE), amivel csoportosítható és egy üzenetként mehetnek ki az azonos címzetthez tartozó üzenetek
                groupable:
                  type: boolean
                  description: Ha értéke true, akkor több, ugyanahhoz az ügyfélhez tartozó, ugyanilyen értesítési típusú üzenet egyben is kiküldhető
                subject:
                  type: string
                  description: Az üzenet tárgya, azaz a rövid tartalma
                message:
                  type: string
                  description: Az üzenet szövege
                referenceType:
                  type: string
                  description: Annak az objektumnak a típusa, ami miatt az értesítés keletkezett (pl. kiértékelés publikussá válása)
                reference:
                  type: string
                  description: Annak az objektumnak az azonosítója, ami miatt az értesítés keletkezett (pl. publikus állapotú kiértékelés rekord azonosítója)
                enabled:
                  type: boolean
                  description: Csak akkor kerül elküldésre az értesítés, ha ez a mező true értékű
                referenceGuid:
                  type: string
                  description: Annak a rekordnak a Guid azonosítója (pl. kiértékelés Guid azonosítója), amire a konzultációs kérés vonatkozik.
                userId:
                  type: integer
                  description: Melyik felhasználónak szól az üzenet
              required:
                - notificationId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Notification"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Notification
    delete:
      summary: Értesítés törlése
      operationId: adminDeleteNotification
      parameters:
        - in: path
          name: notificationId
          description: A törlendő Notification egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Notification
  /admin/consultations:
    get:
      summary: Konzultáció lista lekérdezése
      operationId: adminGetConsultationList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Consultation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Consultation
    post:
      summary: Konzultáció létrehozása
      operationId: adminAddConsultation
      requestBody:
        description: Az új Consultation adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Consultation"
              description: Az ügyfelek között kezdeményezett konzultációs kérések adatai.
              properties:
                consultationId:
                  type: integer
                  description: Consultation egyedi azonosítója
                startDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a konzultációt kezdeményezte az ügyfél.
                consultationType:
                  type: string
                  description: Ügyfél és orvos közötti konzultáció (DICT_CONSULT_PATIENT) vagy Orvosok közötti konzultáció (DICT_CONSULT_DOCTOR) vagy Okfő orvosnak szóló szakkonzultáció (DICT_CONSULT_OKFODOCTOR).<br>A konzultációs rekord törlése csak logikailag történik, ekkor az EndDate mező kitöltődik!
                referenceType:
                  type: string
                  description: Mire vonatkozik a konzultációs kérés (Mérésre, kiértékelésre, Dokumentumra).
                referenceId:
                  type: integer
                  format: int32
                  description: Annak a rekordnak az azonosítója (pl. mérés azonosítója), amire a konzultációs kérés vonatkozik.
                subject:
                  type: string
                  description: Annak a rövid leírása, hogy miért kéri a konzultációt a kezdeményező fél.
                viewDate:
                  type: string
                  format: date-time
                  description: Mikor látta először a konzultáció kérés után a felkért személy a referenciában szereplő (pl. mérés) adatokat.
                referenceGuid:
                  type: string
                  description: Annak a rekordnak a Guid azonosítója (pl. mérés Guid azonosítója), amire a konzultációs kérés vonatkozik.
                instituteMail:
                  type: string
                  description: Ha (szak)konzultáció kezdeményezése történt, akkor annak a szervezetnek a mail címe, aminél a koordinátor majd delegálja a megfelelő szakorvos felé a konzultációs kérésre vonatkozó értesítő mail-t
                endDate:
                  type: string
                  format: date-time
                  description: A konzultáció befejezeésének (törlésének) az időpontja
                consultationGuid:
                  type: string
                  description: A konzultációs rekord GUID azonosítója, hogy mail-beli linkben kiküldhető legyen
                starterUserId:
                  type: integer
                  description: A konzultációt kezdeményező ügyfél azonosítója.
                targetUserId:
                  type: integer
                  description: A konzultációs kérés címzett ügyfél azonosítója.
                inviterUserId:
                  type: integer
                  description: Ha szakkonzultációról van szó, akkor a szakkonzultációt kezdeményező háziorvos ügyfél azonosítója
              required:
                - consultationId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Consultation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Consultation
  /admin/consultations/{consultationId}:
    get:
      summary: Konzultáció adatainak lekérdezése
      operationId: adminGetConsultationById
      parameters:
        - in: path
          name: consultationId
          description: A keresett Consultation egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Consultation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Consultation
    post:
      summary: Konzultáció adatainak módosítása
      operationId: adminUpdateConsultation
      parameters:
        - in: path
          name:  consultationId
          description: A módosítandó Consultation egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Consultation"
              description: Az ügyfelek között kezdeményezett konzultációs kérések adatai.
              properties:
                consultationId:
                  type: integer
                  description: Consultation egyedi azonosítója
                startDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a konzultációt kezdeményezte az ügyfél.
                consultationType:
                  type: string
                  description: Ügyfél és orvos közötti konzultáció (DICT_CONSULT_PATIENT) vagy Orvosok közötti konzultáció (DICT_CONSULT_DOCTOR) vagy Okfő orvosnak szóló szakkonzultáció (DICT_CONSULT_OKFODOCTOR).<br>A konzultációs rekord törlése csak logikailag történik, ekkor az EndDate mező kitöltődik!
                referenceType:
                  type: string
                  description: Mire vonatkozik a konzultációs kérés (Mérésre, kiértékelésre, Dokumentumra).
                referenceId:
                  type: integer
                  format: int32
                  description: Annak a rekordnak az azonosítója (pl. mérés azonosítója), amire a konzultációs kérés vonatkozik.
                subject:
                  type: string
                  description: Annak a rövid leírása, hogy miért kéri a konzultációt a kezdeményező fél.
                viewDate:
                  type: string
                  format: date-time
                  description: Mikor látta először a konzultáció kérés után a felkért személy a referenciában szereplő (pl. mérés) adatokat.
                referenceGuid:
                  type: string
                  description: Annak a rekordnak a Guid azonosítója (pl. mérés Guid azonosítója), amire a konzultációs kérés vonatkozik.
                instituteMail:
                  type: string
                  description: Ha (szak)konzultáció kezdeményezése történt, akkor annak a szervezetnek a mail címe, aminél a koordinátor majd delegálja a megfelelő szakorvos felé a konzultációs kérésre vonatkozó értesítő mail-t
                endDate:
                  type: string
                  format: date-time
                  description: A konzultáció befejezeésének (törlésének) az időpontja
                consultationGuid:
                  type: string
                  description: A konzultációs rekord GUID azonosítója, hogy mail-beli linkben kiküldhető legyen
                starterUserId:
                  type: integer
                  description: A konzultációt kezdeményező ügyfél azonosítója.
                targetUserId:
                  type: integer
                  description: A konzultációs kérés címzett ügyfél azonosítója.
                inviterUserId:
                  type: integer
                  description: Ha szakkonzultációról van szó, akkor a szakkonzultációt kezdeményező háziorvos ügyfél azonosítója
              required:
                - consultationId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Consultation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Consultation
    delete:
      summary: Konzultáció törlése
      operationId: adminDeleteConsultation
      parameters:
        - in: path
          name: consultationId
          description: A törlendő Consultation egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Consultation
  /admin/coupons:
    get:
      summary: Kupon lista lekérdezése
      operationId: adminGetCouponList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Coupon"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Coupon
    post:
      summary: Kupon létrehozása
      operationId: adminAddCoupon
      requestBody:
        description: Az új Coupon adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Coupon"
              description: Kedvezmények kezelésére alkalmas vezérlő adatok
              properties:
                couponId:
                  type: integer
                  description: Coupon egyedi azonosítója
                couponCode:
                  type: string
                  description: A kupon publikus azonosítója, amit meg kell adni a megrendelés során, ha a kedvezményt érvényesíteni akarja az ügyfél
                comment:
                  type: string
                  description: A kupon (értelmének vagy körülményeinek) rövid magyarázata
                productType:
                  type: string
                  description: Ha ki van töltve, akkor csak az adott termék típus esetén vehető igénybe a kedvezmény. Ha értéke null, akkor bármely termék típusra vonatkozhat a kedvezmény.
                deviceType:
                  type: string
                  description: Ha ki van töltve, akkor csak az adott eszköz típusra vehető igénybe a kedvezmény. Ha értéke null, akkor bármely eszköz típusra.
                discountPercent:
                  type: number
                  format: double
                  description: A kedvezmény értéke százalékban kifejezve. Ha ki van töltve, akkor ez jut érvényre, ha nincs, akkor a Discount value mező.
                discountValue:
                  type: integer
                  format: int32
                  description: A kedvezmény értéke (nem százalékban kifejezve). Csak akkor jut érvényre, ha a Discount percent mező nincs kitöltve!
                validFrom:
                  type: string
                  format: date-time
                  description: Mikortól érvényes a kedvezmény
                validTo:
                  type: string
                  format: date-time
                  description: Meddig érvényes a kedvezmény
              required:
                - couponId
                - couponCode
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Coupon"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: Coupon
  /admin/coupons/{couponId}:
    get:
      summary: Kupon adatainak lekérdezése
      operationId: adminGetCouponById
      parameters:
        - in: path
          name: couponId
          description: A keresett Coupon egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Coupon"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Coupon
    post:
      summary: Kupon adatainak módosítása
      operationId: adminUpdateCoupon
      parameters:
        - in: path
          name:  couponId
          description: A módosítandó Coupon egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Coupon"
              description: Kedvezmények kezelésére alkalmas vezérlő adatok
              properties:
                couponId:
                  type: integer
                  description: Coupon egyedi azonosítója
                couponCode:
                  type: string
                  description: A kupon publikus azonosítója, amit meg kell adni a megrendelés során, ha a kedvezményt érvényesíteni akarja az ügyfél
                comment:
                  type: string
                  description: A kupon (értelmének vagy körülményeinek) rövid magyarázata
                productType:
                  type: string
                  description: Ha ki van töltve, akkor csak az adott termék típus esetén vehető igénybe a kedvezmény. Ha értéke null, akkor bármely termék típusra vonatkozhat a kedvezmény.
                deviceType:
                  type: string
                  description: Ha ki van töltve, akkor csak az adott eszköz típusra vehető igénybe a kedvezmény. Ha értéke null, akkor bármely eszköz típusra.
                discountPercent:
                  type: number
                  format: double
                  description: A kedvezmény értéke százalékban kifejezve. Ha ki van töltve, akkor ez jut érvényre, ha nincs, akkor a Discount value mező.
                discountValue:
                  type: integer
                  format: int32
                  description: A kedvezmény értéke (nem százalékban kifejezve). Csak akkor jut érvényre, ha a Discount percent mező nincs kitöltve!
                validFrom:
                  type: string
                  format: date-time
                  description: Mikortól érvényes a kedvezmény
                validTo:
                  type: string
                  format: date-time
                  description: Meddig érvényes a kedvezmény
              required:
                - couponId
                - couponCode
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Coupon"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: Coupon
    delete:
      summary: Kupon törlése
      operationId: adminDeleteCoupon
      parameters:
        - in: path
          name: couponId
          description: A törlendő Coupon egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: Coupon
  /admin/devicesMetaData:
    get:
      summary:  lista lekérdezése
      operationId: adminGetDeviceMetaDataList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceMetaData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: DeviceMetaData
    post:
      summary:  létrehozása
      operationId: adminAddDeviceMetaData
      requestBody:
        description: Az új Device Meta Data adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/DeviceMetaData"
              description: Az adott eszköz esetében az adott ügyfélhez tartozó meta adatok.
              properties:
                deviceMetaDataId:
                  type: integer
                  description: Device Meta Data egyedi azonosítója
                metaData:
                  type: string
                  description: A kliens oldali egyedi beállítások eltárolására alkalmas mező.
                syncWithBackend:
                  type: boolean
                  description: Ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját amikor az ügyfél éppen nem csinál semmit, ha pedig false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél
                modifyDate:
                  type: string
                  format: date-time
                  description: A meta adatok mikor változtak meg utoljára.
                deviceId:
                  type: integer
                  description: Device kapcsoló mezője
                userId:
                  type: integer
                  description: User kapcsoló mezője
              required:
                - deviceMetaDataId
                - syncWithBackend
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/DeviceMetaData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: DeviceMetaData
  /admin/devicesMetaData/{deviceMetaDataId}:
    get:
      summary:  adatainak lekérdezése
      operationId: adminGetDeviceMetaDataById
      parameters:
        - in: path
          name: deviceMetaDataId
          description: A keresett Device Meta Data egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/DeviceMetaData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: DeviceMetaData
    post:
      summary:  adatainak módosítása
      operationId: adminUpdateDeviceMetaData
      parameters:
        - in: path
          name:  deviceMetaDataId
          description: A módosítandó Device Meta Data egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/DeviceMetaData"
              description: Az adott eszköz esetében az adott ügyfélhez tartozó meta adatok.
              properties:
                deviceMetaDataId:
                  type: integer
                  description: Device Meta Data egyedi azonosítója
                metaData:
                  type: string
                  description: A kliens oldali egyedi beállítások eltárolására alkalmas mező.
                syncWithBackend:
                  type: boolean
                  description: Ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját amikor az ügyfél éppen nem csinál semmit, ha pedig false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél
                modifyDate:
                  type: string
                  format: date-time
                  description: A meta adatok mikor változtak meg utoljára.
                deviceId:
                  type: integer
                  description: Device kapcsoló mezője
                userId:
                  type: integer
                  description: User kapcsoló mezője
              required:
                - deviceMetaDataId
                - syncWithBackend
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/DeviceMetaData"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: DeviceMetaData
    delete:
      summary:  törlése
      operationId: adminDeleteDeviceMetaData
      parameters:
        - in: path
          name: deviceMetaDataId
          description: A törlendő Device Meta Data egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: DeviceMetaData
  /admin/externalCommands:
    get:
      summary: Külső parancs lista lekérdezése
      operationId: adminGetExternalCommandList
      parameters:
        - in: query
          name: filter
          description: Filters specify criteria for the returned data set
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
                description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
              limit:
                type: integer
                minimum: 0
                description: A limit filter limits the number of records returned to the specified number(or less)
              skip:
                type: integer
                minimum: 0
                description: Omits the specified number of returned records.This is useful, for example, to paginate responses
              order:
                type: string
                description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalCommand"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: ExternalCommand
    post:
      summary: Külső parancs létrehozása
      operationId: adminAddExternalCommand
      requestBody:
        description: Az új External Command adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ExternalCommand"
              description: Olyan külső rendszerek felé menő parancsok, amik aszinkron módon kezelődnek. (Pl. EESZT rendszer funkcióinak használata)
              properties:
                externalCommandId:
                  type: integer
                  description: External Command egyedi azonosítója
                commandType:
                  type: string
                  description: A parancs típusa (pl. EESZT_LOGIN_MOTP)
                commandParams:
                  type: string
                  description: A parancs paraméterei (ide is letárolódnak, hogy könnyebb legyen a hibakeresés, ha a küls rendszer már kitakarította az adott parancsot a saját commands táblájából)
                externalSystem:
                  type: string
                  description: Annak a külső rendszernek a típusa, ami a parancsot végrehajtja
                externalId:
                  type: string
                  description: A parancsot végrehajtó külső rendszerben az adott parancs referencia azonosítója
                commandStatus:
                  type: string
                  description: A parancs feldolgozási állapota (pl. NEW, OK, ERROR)
                createDate:
                  type: string
                  format: date-time
                  description: A parancs kezdeményezésének időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A parancs (állapot) utolsó módosulásának illetve a parancs állapot ellenőrzésének időpontja
                endDate:
                  type: string
                  format: date-time
                  description: A parancs feldolgozás befejezésének időpontja (OK vagy ERROR státusz beállásának időpontja)
                validityDate:
                  type: string
                  format: date-time
                  description: A parancs érvényességi dátuma
                commandResult:
                  type: string
                  description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása)
                externalTokenId:
                  type: integer
                  format: int32
                  description: A külső rendszerbeli token azonosítója (nem maga a token, hanem csak az azonosítója)
                userId:
                  type: integer
                  description: A parancsot kezdeményező ügyfél (ill. orvos) azonosítója.
              required:
                - externalCommandId
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ExternalCommand"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-create"
      x-base-domain: ExternalCommand
  /admin/externalCommands/{externalCommandId}:
    get:
      summary: Külső parancs adatainak lekérdezése
      operationId: adminGetExternalCommandById
      parameters:
        - in: path
          name: externalCommandId
          description: A keresett External Command egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ExternalCommand"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-findById"
      x-base-domain: ExternalCommand
    post:
      summary: Külső parancs adatainak módosítása
      operationId: adminUpdateExternalCommand
      parameters:
        - in: path
          name:  externalCommandId
          description: A módosítandó External Command egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/ExternalCommand"
              description: Olyan külső rendszerek felé menő parancsok, amik aszinkron módon kezelődnek. (Pl. EESZT rendszer funkcióinak használata)
              properties:
                externalCommandId:
                  type: integer
                  description: External Command egyedi azonosítója
                commandType:
                  type: string
                  description: A parancs típusa (pl. EESZT_LOGIN_MOTP)
                commandParams:
                  type: string
                  description: A parancs paraméterei (ide is letárolódnak, hogy könnyebb legyen a hibakeresés, ha a küls rendszer már kitakarította az adott parancsot a saját commands táblájából)
                externalSystem:
                  type: string
                  description: Annak a külső rendszernek a típusa, ami a parancsot végrehajtja
                externalId:
                  type: string
                  description: A parancsot végrehajtó külső rendszerben az adott parancs referencia azonosítója
                commandStatus:
                  type: string
                  description: A parancs feldolgozási állapota (pl. NEW, OK, ERROR)
                createDate:
                  type: string
                  format: date-time
                  description: A parancs kezdeményezésének időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A parancs (állapot) utolsó módosulásának illetve a parancs állapot ellenőrzésének időpontja
                endDate:
                  type: string
                  format: date-time
                  description: A parancs feldolgozás befejezésének időpontja (OK vagy ERROR státusz beállásának időpontja)
                validityDate:
                  type: string
                  format: date-time
                  description: A parancs érvényességi dátuma
                commandResult:
                  type: string
                  description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása)
                externalTokenId:
                  type: integer
                  format: int32
                  description: A külső rendszerbeli token azonosítója (nem maga a token, hanem csak az azonosítója)
                userId:
                  type: integer
                  description: A parancsot kezdeményező ügyfél (ill. orvos) azonosítója.
              required:
                - externalCommandId
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ExternalCommand"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-replaceById"
      x-base-domain: ExternalCommand
    delete:
      summary: Külső parancs törlése
      operationId: adminDeleteExternalCommand
      parameters:
        - in: path
          name: externalCommandId
          description: A törlendő External Command egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
      x-implementation: "x-delete"
      x-base-domain: ExternalCommand
  /admin/okfo/calcAdherence:
    post:
      summary: Adherencia kiszámolása
      description: Az adott páciens adott eszközére vonatkozó adherencia (mérés megfelelőség) kiszámítása
      operationId: adminOkfoCalcAdherence
      parameters:
        - in: query
          name: patientId
          description: Melyik OKFŐ páciensre vonatkozik az adherencia számítás
          required: true
          schema:
            type: number
        - in: query
          name: deviceId
          description: Melyik eszközre vonatkozik az adherencia számítás (valójában az eszköz által készíthető mérés típus, pl. PulseOxygen, BloodPressure, BloodGlucose, lesz a lekérdezés alapja)
          required: true
          schema:
            type: number
        - in: query
          name: forceCalc
          description: Ha értéke true, akkor mindenképpen megtörténik az adherencia számítás és le is tárolódik a most kiszámított információ
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                description: A mérés típus(ok)hoz tartozó adherencia állapot(ok) listában (ha csak egyetlen típusra vonatkozott a számítás, akkor is tömbben érkezik vissza a válasz!)
                type: array
                items:
                  type: object
                  properties:
                    patientId:
                      type: integer
                      description: A mérés(eke)t végző páciens azonosítója
                    measurementType:
                      type: string
                      description: A mérés típusa (pl. PulseOxygen), amire az adherencia adat vonatkozik
                    version:
                      type: string
                      description: Milyen adherencia számítási algoritmus verzióval történt a kalkuláció
                    resultCode:
                      type: string
                      description: Az adott mérés típusra kiszámított adherencia állapot (pl. ADHER_SUCCESS - teljesen megfelelő az adherencia)
                    partialRestCount:
                      type: integer
                      description: Ha a resultCode == ADHER_PARTIAL_SUCCESS, akkor még hány napnyi sikeres mérés hiányzik a teljes sikeres adherenciához
                    calculationDate:
                      type: string
                      format: data-time
                      description: Az adherencia számítás elvégzésének időpontja
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Admin
  /myAnalyseList:
    get:
      summary: Kiértékeléseim listájának lekérése
      description: Az adott szűrő feltételeknek megfelelő kiértékelések listájának lekérése.
      operationId: getAnalyseList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
      tags:
        - Analyses
        - Web
        - Mobil
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analyse
  /myAnalyseList/{analyseId}/setObsolate:
    put:
      summary: Kiértékelés elavultság beállítása
      description: Annak a beállítása, hogy az adott kiértékelés még aktuálisnak számít, vagy már elavult.
      operationId: setAnalysesObsolate
      parameters:
        - in: path
          name: analyseId
          description: A kiválasztott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: obsolate
          description: elavultnak tekintendő?
          required: true
          schema:
            type: boolean
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
      tags:
        - Analyses
        - Web
      x-responses:
        "406":
          "ANALYSE_NOT_FOUND": "Nem található ilyen kiértékelés, vagy az ügyfélnek nincs joga hozzá!"
          "DOCUMENT_NOT_FOUND": "Nem található ilyen dokumentum, vagy az ügyfélnek nincs joga hozzá!"
  /myAnalyseList/{analyseId}/setRead:
    put:
      summary: Kiértékelés elolvasottság átállítása
      description: Annak beállítása, hogy a kiértékelés olvasatlan vagy elolvasottnak számít.<br>(API v1.0.17-től nem használandó, helyette a /myDocuments/{documentId}/documentSetRead-et kell alkalmazni!)
      deprecated: true
      operationId: setAnalysesRead
      parameters:
        - in: path
          name: analyseId
          description: A kiválasztott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: value
          description: A beállítandó érték (unread=0, read=1)
          required: true
          schema:
            type: boolean
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Analyses
        - Web
        - Mobil
      x-responses:
        "406":
          "DATA_ERROR": "A kiértékelés nem publikus, ezért a megtekintettség nem állítható be!"
  /myAnalyseList/{analyseId}/getAnalyseMeasurements:
    get:
      summary: Milyen mérés(ek)re vonatkozik a kiértékelés
      description: Annak lekérdezése, hogy milyen mérési adatokra vonatkozik a kiértékelés.
      operationId: getMyAnalyseMeasurements
      parameters:
        - in: path
          name: analyseId
          description: A kiválasztott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          $ref: "#/components/responses/MeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - doctor
      tags:
        - Analyses
        - Web
        - Mobil
      x-responses:
        "406":
          "DATA_NOT_FOUND": "A kiértékelés még folyamatban van vagy nem publikus, ezért az adatai a páciens számára nem kérhetők le!"
  /myDocuments/attachFileToMyself:
    post:
      summary: Fájl csatolása az aktuális user-hez
      description: Az aktuálisan bejelentkezett felhasználó (kép vagy dokumentum) állományt csatol magához.
      operationId: attachFileToMyself
      requestBody:
        description: A csatolandó fájl és adatai
        content:
          'multipart/form-data':
            # Skip standard body parsing
            x-parser: stream
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: A csatolt fájlhoz elrakandó elnevezés, ami a listákban megjelenik róla
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '200': # OK, feltöltve
          description: feltöltve
          content:
            'application/json':
              schema:
                type: object
                properties:
                  path:
                    description: Az elmentett image fájl elérési útvonala
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Analyses
        - Web
        - Mobil
  /myDocuments/getMyAttachedFileList:
    get:
      summary: Aktuális user csatolt fájl lista lekérése
      description: "Az aktuális pácienshez csatolt (dokumentum vagy kép) állományok listájának lekérése.<br>Megjegyzés: ezek nem a kiértékelések, hanem a pácienshez csatolt (egyéb) állományok!<br>"
      operationId: getMyAttachedFileList
      responses:
        '200':
          description: A pácienshez csatolt dokumentumok listája
          content:
            'application/json':
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Document"
                        - properties:
                            attachmentId:
                              type: integer
                              description: A csatolmány egyedi azonosítója
                            editable:
                              type: boolean
                              description: A lekérdező számára szekeszthető-e az adott csatolás
                            uploaderName:
                              type: string
                              description: A csatolmányt feltöltő user neve
                            documentCathegory:
                              type: string
                              description: A dokumentum kategóriája
                            activeStarterConsultationCount:
                              description: az aktuális lekérdező az adott dokumentummal kapcsolatban hány olyan konzultációt kezdeményezett amit még nem tekintett meg a konzultációs partner
                              type: integer
                            viewedStarterConsultationCount:
                              description: az aktuális lekérdező az adott dokumentummal kapcsolatban hány olyan konzultációt kezdeményezett amit már megtekintett a konzultációs partner
                              type: integer
                            activeTargetConsultationCount:
                              description: az adott dokumentummal kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit még nem tekintett meg ez a lekérdező
                              type: integer
                            viewedTargetConsultationCount:
                              description: az adott dokumentummal kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit már megtekintett ez a lekérdező
                              type: integer

        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Analyses
        - Web
        - Mobil
      x-base-domain: Document
  /myDocuments/{documentId}/updateAttachedFileSubject:
    post:
      summary: Csatolt fájl tárgy megváltoztatása
      description: Az aktuális pácienshez csatolt állomány rövid leírásának megváltoztatása.
      operationId: myAttachedFileSubjectUpdate
      parameters:
        - in: path
          name: documentId
          description: A pácienshez rendelt dokumentum egyedi azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: A csatolt fájlhoz tartozó új rövid leírás
      responses:
        '200': # OK
          description: A rövid elnevezés megváltoztatva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Analyses
        - Web
        - Mobil
  /myDocuments/{documentId}/deleteMyAttachedFile:
    delete:
      summary: Csatolt fájl törlése
      description: Az aktuális pácienshez csatolt saját fájl törlése.
      operationId: deleteMyAttachedFile
      parameters:
        - in: path
          name: documentId
          description: A pácienshez csatolt fájl egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Analyses
        - Web
        - Mobil
  /myDocuments/{documentId}/documentSetRead:
    put:
      summary: Dokumentum elolvasottság átállítása
      description: Annak beállítása, hogy az adott dokumentumot a tulajdonosa elolvasta.
      operationId: setDocumentRead
      parameters:
        - in: path
          name: documentId
          description: A kiválasztott dokumentum egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Analyses
        - Web
        - Mobil
  /doctor/patients:
    get:
      summary: Pacienseim listájának lekérése
      description: Az aktuálisan bejelentkezett doktor azon pacienseinek listáját kéri le, akik felhatalmazták arra, hogy a mérési adatait láthassa ill. kiértékelhesse.
      deprecated: true
      operationId: getMyPatientList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK, de csak az aktuális bejelentkezett orvost meghatalmazott felhasználók
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  ###$ref: "#/components/responses/UserMainResp"
                  # Ide valójában ez kellett volna, de a swagger editor hibája miatt be kellett másolni
                  type: object
                  properties:
                    userId:
                      type: integer
                    firstName:
                      type: string
                    lastName:
                      type: string
                    birthYear:
                      type: integer
                    gender:
                      type: string
                    socialSecurityNumber:
                      type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: User
  /doctor/patients/{userId}/analyses:
    post:
      summary: Kiértékelés készítése a páciensnek
      description: "<b>Használata nem javasolt, helyette: [POST:]/webmodule/doctor/measurementAndAnalyse/saveNewAnalyse</b><br>Egy új kiértékelés készítése az adott páciensnek."
      deprecated: true
      operationId: addAnalyseToPatient
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
                preConsultationId:
                  description: A kiértékelés előzményének számító konzultáció azonosítója
                  type: integer
              required:
                - subject
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "ANALYSE_ID_ERROR": "Ez a kiértékelés nem található!"
          "MEASUREMENT_ID_ERROR": "Ez a mérés nem található!"
  /doctor/patients/{userId}/analyses/createMeasurementsBasedAnalyse:
    post:
      summary: Kiértékelés készítése a páciens mérései alapján
      description: "<b>Használata nem javasolt, helyette: [POST:]/webmodule/doctor/measurementAndAnalyse/saveNewAnalyse</b><br>Egy új kiértékelés készítése az adott páciensnek a megadott mérései alapján."
      deprecated: true
      operationId: createMeasurementsBasedAnalyse
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
                measurements:
                  type: array
                  items:
                    type: integer
                    description: Az adott kiértékelés alapjául szolgáló mérések egyedi azonosítói
              required:
                - subject
                - measurements
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "MEASUREMENT_USER_MISMATCH": "Több páciens mérése nem keveredhet egy kiértékelés kapcsán!"
          "ANALYSE_DATA_ERROR": "Sikertelen kiértékelés mentés!"
  /doctor/patients/{userId}/analyses/{analyseId}/addAttachment:
    post:
      summary: Csatolmány létrehozása
      description: "<b>Használata nem javasolt helyette: [PUT:]/webmodule/doctor/measurementAndAnalyse/{analyseId}/saveAnalyse</b><br>Egy új csatolmány hozzáadása az adott kiértékeléshez."
      deprecated: true
      operationId: addPatientAnalyseAttachment
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: analyseId
          description: A kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Az új csatolandó dokumentum adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                documentId:
                  type: integer
              required:
                - documentId
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Attachment"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-create"
      x-base-domain: Attachment
  /doctor/patients/{userId}/analyses/{analyseId}/publish:
    post:
      summary: Kiértékelés megtekinthetővé tétele
      description: "<b>Használata nem javasolt, helyette: [PUT:]/webmodule/doctor/measurementAndAnalyse/{analyseId}/setPublic</b><br>Az adott kiértékelés státuszának beállítása olyan értékre, hogy a páciens megtekinthesse (mert mindezideig csak az orvos(ok) láthatták a készülő félben lévő kiértékelést)."
      deprecated: true
      operationId: publishPatientAnalyse
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: analyseId
          description: A keresett Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "ANALYSE_READ_ONLY_YET": "Ez a kiértékelés már publikus!"
  /doctor/patients/{userId}/analyses/{analyseId}/addMeasurements:
    post:
      summary: Páciens kiértékeléséhez mérések kapcsolása
      description: "<b>Használata nem javasolt, helyette: [PUT:]/webmodule/doctor/measurementAndAnalyse/{analyseId}/saveAnalyse</b><br>Az adott páciens valamely kiértékeléséhez kapcsolása azoknak a mérés adatoknak, amik alapján az orvos a kiértékelést elkészítette."
      deprecated: true
      operationId: addMeasurementsToPatientAnalyse
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: analyseId
          description: A keresett Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              description: Az adott kiértékelés alapjául szolgáló mérések egyedi azonosítói
              type: array
              items:
                type: integer
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
  /doctor/patients/{userId}/measurements:
    get:
      summary: Páciens mérési adat lista lekérése
      description: Az adott páciens, szűrési feltételeknek megfelelő (időszak, típus, stb.) mérési adatainak lekérése kiválasztási lista felépítéséhez, a szűrőben beállított sorrend szerint.
      operationId: getPatientMeasurements
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: Mérési adat állapot (all, DICT_MEASURE_LOADED, DICT_MEASURE_PROCESSED, DICT_MEASURE_AUTOGENERATED, DICT_MEASURE_ANALYSING, DICT_MEASURE_ANALYSED), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (arrivalDate, status, measurementType)
          schema:
            type: string
            default: "arrivalDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "asc"
      responses:
        '200': # OK
          $ref: "#/components/responses/MeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-base-domain: User
  /doctor/patients/{userId}/measurements/{measurementId}/setAlarmType:
    put:
      summary: Mérési riasztás átállítása
      description: "<b>Használata nem javasolt, helyette: [PUT:]/webmodule/doctor/measurementAndAnalyse/{analyseId}/setAlarmType</b><br>Az adott mérésre vonatkozó riasztási típus be- vagy átállítása"
      deprecated: true
      operationId: doctorSetAlarmType
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: measurementId
          description: Annak a mérésnek az egyedi azonosítója, amire a művelet vonatkozik
          required: true
          schema:
            type: integer
      requestBody:
        #$ref: "#/components/requestBodies/SetAlarmTypeReq"
        content:
          'application/json':
            schema:
              type: object
              properties:
                alarmType:
                  type: string
                  description: A riasztási állapot kódja (pl. ALARM_NORMAL, ALARM_LOW, ALARM_HIGH, ALARM_URGENT)
                comment:
                  type: string
                  description: A riasztási állapotot átállító rövid magyarázata, hogy miért kellett átállítani az értéket
              required:
                - alarmType
                - comment
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                type: object
                properties:
                  count:
                    description: ha értéke 1, akkor sikeres volt a riasztási szint átállítása
                    type: integer
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-base-domain: ProcessedData
  /doctor/protocols:
    get:
      summary: Protokollok listájának lekérése
      description: A lehetséges mérési protokollok lekérése
      operationId: getProtocolList
      parameters:
        - in: query
          name: enabledOnly
          description: "Ha értéke true, akkor csak az olyan protokollok mennek vissza a válaszban, amik hozzá vannak rendelve ügyfél-eszközhöz, egyébként minden eddig protokoll (alapértelmezésben az értéke: true)"
          schema:
            type: boolean
            default: true
      responses:
        '200': # OK
          $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
        - DoctorWeb
        - GeneralDoctorWeb
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Protocol
    post:
      summary: Új protokoll létrehozása
      description: Új mérési protokoll létrehozása, de csak akkor, ha még nincs ilyen nevű és leírású
      operationId: createProtocol
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "A mérési protokoll rövid neve (pl: 3x2 perces mérés)"
                text:
                  type: string
                  description: A mérési protokoll tevékenység és célok részletes leírása
              required:
                - name
                - text
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
        - DoctorWeb
        - GeneralDoctorWeb
  /doctor/protocols/{protocolId}:
    get:
      summary: Protokoll adatainak lekérése
      description: Adott mérési protokoll adatainak lekérdezése
      operationId: getProtocol
      parameters:
        - in: path
          name: protocolId
          description: A lekérdezett protokoll azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
        - DoctorWeb
        - GeneralDoctorWeb
    delete:
      summary: Protokoll törlése
      description: Adott mérési protokoll törlése.<br>Ez csak logikai törlés, hogy a még folyamatban lévő vagy már lezárt ügyfél-eszköz hozzárendelések kapcsán megmaradhasson a protokoll információ is.<br>
      operationId: deleteProtocol
      parameters:
        - in: path
          name: protocolId
          description: A törlendő protokoll azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
        - DoctorWeb
        - GeneralDoctorWeb
      x-responses:
        "406":
          "ANALYSE_PUBLIC_YET": "Ez a kiértékelés már publikus, nem törölhető!"
  /doctor/protocols/{protocolId}/addProtocolToDevice:
    post:
      summary: Protokoll hozzáadás ügyfél-eszközhöz
      description: Adott mérési protokoll hozzárendelése adott ügyfél adott eszközéhez.
      operationId: addProtocolToUserDevice
      parameters:
        - in: path
          name: protocolId
          description: A protokoll azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          description: Az ügyfél azonosítója, akinek az adott eszközzel kapcsolatban szól a protokoll
          required: true
          schema:
            type: number
        - in: query
          name: deviceId
          description: Az eszköz azonosítója, amire vonatkozik a protokoll
          required: true
          schema:
            type: number
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserProtocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
        - DoctorWeb
        - GeneralDoctorWeb
  /doctor/protocols/{protocolId}/removeProtocolFromDevice:
    post:
      summary: Protokoll törlése ügyfél-eszköztől
      description: Adott mérési protokoll hozzárendelésének megszüntetése adott ügyfél adott eszközénél.
      operationId: removeProtocolFromUserDevice
      parameters:
        - in: path
          name: protocolId
          description: A protokoll azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          description: Az ügyfél azonosítója, akinek az adott eszközzel kapcsolatban szól a protokoll
          required: true
          schema:
            type: number
        - in: query
          name: deviceId
          description: Az eszköz azonosítója, amire vonatkozik a protokoll
          required: true
          schema:
            type: number
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
        - DoctorWeb
        - GeneralDoctorWeb
  /doctor/analyses:
    get:
      summary: Orvos kiértékelések listájának lekérése
      description: Az orvos által készített, az adott szűrő feltételeknek megfelelő kiértékelések listájának lekérése.
      operationId: getDoctorAnalyseList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analyse
  /doctor/analyses/{analyseId}:
    post:
      summary: Orvosi kiértékelés adatainak módosítása
      description: Egy félig elkészített kiértékelés adatainak aktualizálása vagy befejezése. Csak akkor lesz sikeres a frissítés, ha a kiértékelés állapota nem PUBLISHED!
      operationId: updateDoctorAnalyse
      parameters:
        - in: path
          name: analyseId
          description: A kiértékelés azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "ANALYSE_PUBLIC_YET": "Ez a kiértékelés már publikus, nem módosítható!"
    delete:
      summary: Orvosi kiértékelés törlése
      description: Egy félig elkészített kiértékelés törlése. Csak akkor lesz sikeres a törlés, ha a kiértékelés állapota nem PUBLISHED!<br>
      operationId: deleteDoctorAnalyse
      parameters:
        - in: path
          name: analyseId
          description: A kiértékelés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "ANALYSE_PUBLIC_YET": "Ez a kiértékelés már publikus, nem törölhető!"
  /doctor/analyses/{analyseId}/duplicate:
    post:
      summary: Orvosi kiértékelés létrehozása egy régebbi kiértékelésből
      description: Egy olyan új kiértékelés létrehozása, ami egy régebbi, már publikált kiértékelésből készül, hogy lehessen kiegészíteni a régi kiértékelés megállapításait.
      operationId: duplicateDoctorAnalyse
      parameters:
        - in: path
          name: analyseId
          description: A kiértékelés azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "ANALYSE_DATA_ERROR": "Hiba a kiértékelés mentésekor!"
  /doctor/analyses/{analyseId}/publish:
    post:
      summary: Kiértékelés megtekinthetővé tétele
      description: Az adott kiértékelés státuszának beállítása olyan értékre, hogy a páciens megtekinthesse (mert mindezideig csak az orvos(ok) láthatták a készülő félben lévő kiértékelést).
      operationId: publishDoctorAnalyse
      parameters:
        - in: path
          name: analyseId
          description: A kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "ANALYSE_PUBLIC_YET": "Ez a kiértékelés már publikus!"
  /doctor/documents:
    get:
      summary: Orvos dokumentumai lista lekérdezése
      description: Az aktuális orvos által készített dokumentumok listájának lekérése
      operationId: getDoctorDocumentList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Document
    post:
      summary: Dokumentum létrehozása
      description: Egy új (orvosi) dokumentum létrehozása
      operationId: addDoctorDocument
      requestBody:
        description: Az új Document adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Document"
              description: Elektronikus dokumentumok
              properties:
                documentId:
                  type: integer
                  description: Document egyedi azonosítója
                documentType:
                  type: string
                  description: "A dokumentum típusát jelző szótárkód, pl: PDF, keskeny PDF, hang állomány, kép állomány, link, html, fájl."
                name:
                  type: string
                  description: A listákban a dokumentum megnevezéseként megjelenő szöveg. (Pácienshez csatolt feltöltött dokumentum esetén itt van a tartalom rövid leírása.)
                path:
                  type: string
                  description: A dokumentum url elérési útja, vagy hivatkozási azonosítója.
                theDocument:
                  type: string
                  format: binary
                  description: Ha nem elérési úton keresztül található meg a dokumentum, akkor ebben a bináris adatban van.
                documentGuid:
                  type: string
                  description: A dokumentum GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az állománynév meghatározására.)
                createDate:
                  type: string
                  format: date-time
                  description: A rekord létrehozásának dátuma.
                pdfConvertDate:
                  type: string
                  format: date-time
                  description: A dokumentum Pdf-é konvertálás időpontja.
                originalFileName:
                  type: string
                  description: A feltöltött dokumentumok esetén az eredeti fájl neve.
                readDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a dokumentum tulajdonosa (azaz a páciens) először megtekintette a dokumentumot.
                mustEesztUpload:
                  type: boolean
                  description: Ha az értéke true, akkor ennek a dokumentumnak a feltöltését el kell végezni az EESZT rendszer felé
                eesztUploadDate:
                  type: string
                  format: date-time
                  description: Mikor történt meg az EESZT rendszerbe a feltöltés
                externalDocumentId:
                  type: string
                  description: "A PrivátDoktoron kívüli külső rendszerbeli azonosítója a dokumentumnak (pl: EESZT dokumentum azonosító, amikor sikeresen lezajlott a feltöltés)"
                documentCathegory:
                  type: string
                  description: A dokumentum kategóriája (pl. anamnézis, template html, stb.)
                groupCode:
                  type: string
                  description: Akkor van kitöltve, ha az adott dokumentum csoporthoz tartozik. Ilyenkor nem csak a dokumentum tulajdonos és a feltöltő, hanem a csoport vezetői is láthatják a dokumentumot.
                ownerId:
                  type: integer
                  description: A dokumentum tulajdonosa (általában a páciens, akiről szól a dokumentum)
                uploaderId:
                  type: integer
                  description: A dokumentum feltöltését végző doktor (vagy esetleg páciens) azonosítója
              required:
                - documentId
                - documentType
              type: object
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-create"
      x-base-domain: Document
  /doctor/documents/saveImageFile:
    post:
      summary: Kép fájl feltöltése dokumentumként
      description: Az orvos(ok) által készített kiértékelés HTML szövegében szereplő kép állomány feltöltése a szerverre, hogy az &lt;image&gt; tag-gel majd hivatkozni lehessen rá.
      operationId: saveDoctorImageFile
      requestBody:
        description: A feltöltendő fájl
        content:
          'multipart/form-data':
            # Skip body parsing
            'x-parser': 'stream'
            schema:
              type: 'object'
        required: true
      responses:
        '200': # OK, feltöltve
          description: feltöltve
          content:
            'application/json':
              schema:
                type: object
                properties:
                  path:
                    description: Az elmentett image fájl elérési útvonala
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
  /doctor/documents/{documentId}:
    get:
      summary: Dokumentum adatainak lekérdezése
      description: Az adott (orvosi) dokumentum lekérdezése
      operationId: getDoctorDocumentById
      parameters:
        - in: path
          name: documentId
          description: A keresett Document egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-findById"
      x-base-domain: Document
    post:
      summary: Dokumentum adatainak módosítása
      description: Az adott (orvosi) dokumentum módosítása
      operationId: updateDoctorDocument
      parameters:
        - in: path
          name:  documentId
          description: A módosítandó Document egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Document"
              description: Elektronikus dokumentumok
              properties:
                documentId:
                  type: integer
                  description: Document egyedi azonosítója
                documentType:
                  type: string
                  description: "A dokumentum típusát jelző szótárkód, pl: PDF, keskeny PDF, hang állomány, kép állomány, link, html, fájl."
                name:
                  type: string
                  description: A listákban a dokumentum megnevezéseként megjelenő szöveg. (Pácienshez csatolt feltöltött dokumentum esetén itt van a tartalom rövid leírása.)
                path:
                  type: string
                  description: A dokumentum url elérési útja, vagy hivatkozási azonosítója.
                theDocument:
                  type: string
                  format: binary
                  description: Ha nem elérési úton keresztül található meg a dokumentum, akkor ebben a bináris adatban van.
                documentGuid:
                  type: string
                  description: A dokumentum GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az állománynév meghatározására.)
                createDate:
                  type: string
                  format: date-time
                  description: A rekord létrehozásának dátuma.
                pdfConvertDate:
                  type: string
                  format: date-time
                  description: A dokumentum Pdf-é konvertálás időpontja.
                originalFileName:
                  type: string
                  description: A feltöltött dokumentumok esetén az eredeti fájl neve.
                readDate:
                  type: string
                  format: date-time
                  description: Az az időpont, amikor a dokumentum tulajdonosa (azaz a páciens) először megtekintette a dokumentumot.
                mustEesztUpload:
                  type: boolean
                  description: Ha az értéke true, akkor ennek a dokumentumnak a feltöltését el kell végezni az EESZT rendszer felé
                eesztUploadDate:
                  type: string
                  format: date-time
                  description: Mikor történt meg az EESZT rendszerbe a feltöltés
                externalDocumentId:
                  type: string
                  description: "A PrivátDoktoron kívüli külső rendszerbeli azonosítója a dokumentumnak (pl: EESZT dokumentum azonosító, amikor sikeresen lezajlott a feltöltés)"
                documentCathegory:
                  type: string
                  description: A dokumentum kategóriája (pl. anamnézis, template html, stb.)
                groupCode:
                  type: string
                  description: Akkor van kitöltve, ha az adott dokumentum csoporthoz tartozik. Ilyenkor nem csak a dokumentum tulajdonos és a feltöltő, hanem a csoport vezetői is láthatják a dokumentumot.
                ownerId:
                  type: integer
                  description: A dokumentum tulajdonosa (általában a páciens, akiről szól a dokumentum)
                uploaderId:
                  type: integer
                  description: A dokumentum feltöltését végző doktor (vagy esetleg páciens) azonosítója
              required:
                - documentId
                - documentType
              type: object
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-replaceById"
      x-base-domain: Document
    delete:
      summary: Dokumentum törlése
      description: Az adott (orvosi) dokumentum törlése
      operationId: deleteDoctorDocument
      parameters:
        - in: path
          name: documentId
          description: A törlendő Document egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-implementation: "x-delete"
      x-base-domain: Document
  /doctor/events/measurements:
    get:
      summary: Ügyeleti mérési adat lista lekérése
      description: "<b>Használata nem javasolt, helyette: [GET:]/webmodule/doctor/analysable/getList</b><br>Az ügyeletes orvos(ok) számára fontos mérési adatok listájának lekérése. A válasz előállításakor a szűrési feltételeknek megfelelő (veszélyesség, időszak, mérés típus, ügyfél stb.) adatok kerülnek leválogatásra a megadott sorrend szerint.<br>Alapértelmezésben az aktuális doktor nevében, mint ügyeletes orvos nevében fut a lekérdezés. De ha a doctorRole paraméter értéke GROUP_DROLE_GENERAL, akkor valójában a hívás eredménye megegyezik a [GET:]/generalDoctor/measurements hívással."
      deprecated: true
      operationId: getDoctorEventsMeasurements
      parameters:
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: Mérési adat állapot (all, DICT_MEASURE_LOADED, DICT_MEASURE_PROCESSED, DICT_MEASURE_AUTOGENERATED, DICT_MEASURE_ANALYSING, DICT_MEASURE_ANALYSED), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab
          schema:
            type: string
        - in: query
          name: isActualName
          description: Ha nincs userId szerinti, de van userName szerinti szűrő feltétel, akkor csak az aktuális ügyfél név szerinti mérések legyenek a válaszban, vagy az ügyfél régebbi nevein mentett mérések is
          schema:
            type: boolean
            default: true
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
        - in: query
          name: pageLength
          description: "Hány rekordot adjon vissza (alapértelmezésben: 20 rekord)"
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (measurementDate, status, measurementType)
          schema:
            type: string
            default: "measurementDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: doctorRole
          description: A lekérdező orvosi szerepkör (GROUP_DROLE_ANALYSER vagy GROUP_DROLE_GENERAL)
          schema:
            type: string
            default: "GROUP_DROLE_ANALYSER"
        - in: query
          name: isBrief
          description: Ha az értéke true, akkor csak a mérés Id-je és a lastUpdate mező értéke megy a válaszban, egyébként minden mező
          schema:
            type: boolean
            default: false
        - in: query
          name: countOnly
          description: Ha az értéke true, akkor csak a szűrésnek megfelelő rekordok számát adja vissza
          schema:
            type: boolean
            default: false
      responses:
        '200': # OK
          $ref: "#/components/responses/EventMeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "NORMAL_DOCTOR_ROLE_ABSENT": "doctorRole parameter inconsistent to this user!"
          #---
          "USER_NOT_PATIENT": "Ez a páciens nem adott meghatalmazást az aktuális ügyfélnek!"
  /doctor/events/measurements/{measurementId}:
    get:
      summary: Adott teljes mérés lekérése
      description: "<b>Használata nem javasolt, helyette: [GET:]/webmodule/doctor/measurements/{measurementId}</b><br>Az adott mérésre vonatkozó (összes) részletes adat lekérése. (Ez mérés típustól függően más-más mennyiségű tényleges mért adatot jelent.)<br>Ha több szeletben van tárolva a mérés, akkor az összes szelet van a válaszban."
      deprecated: true
      operationId: getDoctorSelectedMeasurementData
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # A teljes mérési adat, ha több szeletből áll, akkor az összes szelet sliceIdx szerinti sorrendben
          $ref: "#/components/responses/MeasurementDataListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
  /doctor/events/measurements/{measurementId}/getMeasurementAnalyses:
    get:
      summary: Méréshez tartozó kiértékelések lekérése
      description: "<b>Használata nem javasolt, helyette: [GET:]/webmodule/doctor/measurements/{measurementId}/getMeasurementAnalyses</b><br>Az adott méréshez tartozó kiértékelés(ek) adatainak lekérése, beleértve a csatolt dokumentumokat is."
      deprecated: true
      operationId: getDoctorMeasurementAnalyses
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
  /doctor/events/measurements/filters:
    get:
      summary: Mérési szűrők lekérése
      description: "<b>Használata nem javasolt, helyette: [GET:]/webmodule/doctor/measurements/filters</b><br>Az aktuálisan bejelentkezett orvos által utoljára használt (és a user metaData mezőjébe elmentett) mérési listára vonatkozó szűrők lekérdezése."
      deprecated: true
      operationId: getDoctorMeasurementFilter
      responses:
        '200': # Az aktuálisan bejelentkezett orvos által utóljára használt mérési szűrők értéke (azaz melyik mérés típusok látszottak számára a listában)
          description: A mérési szűrők értékét tartalmazó json
          content:
            'application/json':
              schema:
                type: object
                properties:
                  measurementFilters:
                    type: object
                    description: A szűrő beállításokat tartalmazó json
                example:
                  measurementFilters:
                    measurementEcg: true
                    measurementBloodPressure: false
                    measurementWeight: false
                    measurementHeartRate: true
                    measurementGlucose: true
                    measurementTemperature: false
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
    post:
      summary: Mérési szűrők elmentése
      description: "<b>Használata nem javasolt, helyette: [POST:]/webmodule/doctor/measurements/filters</b><br>Az aktuálisan bejelentkezett orvos által használt mérési lista szűrési feltételek eltárolása (a user metaData mezőjébe)."
      deprecated: true
      operationId: updateDoctorMeasurementFilter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Az aktuálisan bejelentkezett orvos által használt mérési szűrők állapotát tartalmazó json struktúra
              properties:
                measurementFilters:
                  type: object
              example:
                measurementFilters:
                  measurementEcg: true
                  measurementBloodPressure: false
                  measurementWeight: false
                  measurementHeartRate: true
                  measurementGlucose: true
                  measurementTemperature: false
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
      x-responses:
        "406":
          "PATIENT_ID_ERROR": "Ez az ügyfél nem található!"
  /doctor/consultations/consultantList:
    get:
      summary: Kiértékelői szakkonzultánsok lekérése
      description: Kiértékelői szakkonzultációra alkalmas orvosok listájának lekérése
      operationId: getAnalyzerConsultants
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          description: A Szakkonzulens user azonosítója
                          type: integer
                        userName:
                          description: A szakkonzulens neve
                          type: string
                        comment:
                          description: A szakkonzulens csoportba kerüléskor megadott megjegyzés (pl. szakterület)
                          type: string
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
  /generalDoctor/measurements:
    get:
      summary: Kezelt pácienseim mérési adat listájának lekérése
      description: A kezelőorvos pácienseinek mérési adat listájának lekérése. A válasz előállításakor a szűrési feltételeknek megfelelő (veszélyesség, időszak, mérés típus, ügyfél stb.) adatok kerülnek leválogatásra a megadott sorrend szerint.
      operationId: getGeneralDoctorEventsMeasurements
      parameters:
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: Mérési adat állapot (all, DICT_MEASURE_LOADED, DICT_MEASURE_PROCESSED, DICT_MEASURE_AUTOGENERATED, DICT_MEASURE_ANALYSING, DICT_MEASURE_ANALYSED), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab
          schema:
            type: string
        - in: query
          name: pageStart
          description: Kezdő lap
          schema:
            type: integer
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (measurementDate, status, measurementType)
          schema:
            type: string
            default: "measurementDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "asc"
        - in: query
          name: countOnly
          description: "Ha értéke true, akkor csak a feltételek szerinti mérés darabszámát adja vissza, alapértelmezésben értéke: false, azaz a érés adatok mennek vissza"
          schema:
            type: boolean
            default: false
      responses:
        '200': # OK
          $ref: "#/components/responses/EventMeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          #---
          "USER_NOT_PATIENT": "Ez a páciens nem adott meghatalmazást az aktuális ügyfélnek!"
  /generalDoctor/measurements/{measurementId}:
    get:
      summary: Adott teljes mérés lekérése
      description: Az adott mérésre vonatkozó (összes) részletes adat lekérése. (Ez mérés típustól függően más-más mennyiségű tényleges mért adatot jelent.)<br>Ha több szeletben van tárolva a mérés, akkor az összes szelet van a válaszban.
      operationId: getGenaralDoctorSelectedMeasurementData
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # A teljes mérési adat, ha több szeletből áll, akkor az összes szelet sliceIdx szerinti sorrendben
          $ref: "#/components/responses/MeasurementDataListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "MEASUREMENT_NOT_FOUND": "Ilyen mérés nem található"
          "USER_NOT_PATIENT": "Ilyen üygfél nem található!"
  /generalDoctor/measurements/{measurementId}/getMeasurementAnalyses:
    get:
      summary: Méréshez tartozó kiértékelések lekérése
      description: Az adott méréshez tartozó kiértékelés(ek) adatainak lekérése, beleértve a csatolt dokumentumokat is.
      operationId: getGeneralDoctorMeasurementAnalyses
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /generalDoctor/measurements/downloadData:
    post:
      summary: Meghatalmazóim méréseinek letöltése
      description: Az adott meghatalmazott (kezelő orvos) havi adatletöltésének kezdeményezése. A leválogatás eredménye egy GUID alapú fájlba kerül, amiben egy titkosítatlan összegző fejléc blokk és egy titkosított adatblokk van.
      operationId: downloadMeasurementsData
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                date:
                  description: ÉÉÉÉ.HH formában, hogy melyi kidőszakra vonatkozik a lekérés
                  type: string
              required:
                - date
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  fileUrl:
                    description: a lekért idszak adatait tartalmaz állomány elérési útvonala
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "NOT_FOUND_ACTIVE_ORDER": "Nem található aktív adat letöltési megrendelés, ezért a letöltés nem engedélyezett!"
        "409":
          "INTERNAL_ERROR": "Nem sikerült elkészíteni a deperszonalizált adatokat tartalmazó állományt!"
  /generalDoctor/patients:
    get:
      summary: Kezelt pácienseim listájának lekérése
      description: Az aktuálisan bejelentkezett kezelőorvos azon pacienseinek listáját kéri le, akik felhatalmazták arra, hogy a mérési adatait láthassa ill. kiértékelhesse.
      operationId: getMyHandledPatientList
      parameters:
        - in: query
          name: isOkfoEnd
          description: ha true - akkor csak az archív (lezárt OKFŐ projektes) páciensek mennek a válaszban, ha false - akkor csak az aktív (nyitott OKFŐ projektes) pácienseket, ha nincs megadva - akkor az összes pácienst
          schema:
            type: boolean
      responses:
        '200': # OK, de csak az aktuális bejelentkezett orvost meghatalmazott felhasználók
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  ###$ref: "#/components/responses/UserMainResp"
                  # Ide valójában ez kellett volna, de a swagger editor hibája miatt be kellett másolni
                  type: object
                  properties:
                    userId:
                      type: integer
                    firstName:
                      type: string
                    lastName:
                      type: string
                    birthYear:
                      type: integer
                    gender:
                      type: string
                    socialSecurityNumber:
                      type: string
                    identityType:
                      type: string
                    identityNumber:
                      type: string
                    email:
                      type: string
                    phoneNumber:
                      type: string
                    eesztUploadable:
                      type: boolean
                    userStatus:
                      type: string
                    okfoPlannedEndDate:
                      type: string
                      format: date-time
                    okfoEndDate:
                      type: string
                      format: date-time
                    inviterUserId:
                      type: number
                    countOkfoConsultation:
                      type: number
                      description: Hány lezáratlan OKFŐ konzultáció van ezzel a pácienssel
                    countAnalysableMeasure:
                      type: number
                      description: Hány olyan mérése van a páciensnek, amire nem készült kiértékelés
                    hasDevicesToRepass:
                      type: number
                      description: Hány olyan eszköz van a páciensnek kiadva, amit a lekérdező háziorvos adott neki
                    adherence:
                      type: object
                      description: Az OKFŐ projektben kiadott eszköz adherencia (mérés megfelelőségi) adatai
                      properties:
                        measurementType:
                          type: string
                          description: A mérés típusa (pl. PulseOxygen), amire az adherencia adat vonatkozik
                        version:
                          type: string
                          description: Milyen adherencia számítási algoritmus verzióval történt a kalkuláció
                        resultCode:
                          type: string
                          description: Az adott mérés típusra kiszámított adherencia állapot (pl. ADHER_SUCCESS - teljesen megfelelő az adherencia)
                        partialRestCount:
                          type: integer
                          description: Ha a resultCode == ADHER_PARTIAL_SUCCESS, akkor még hány napnyi sikeres mérés hiányzik a teljes sikeres adherenciához
                        calculationDate:
                          type: string
                          format: data-time
                          description: Az adherencia számítás elvégzésének időpontja
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: User
  /generalDoctor/patients/getPatientAnalyseAlarmLevel:
    get:
      summary: Páciens kiértékelési értesítési szint lekérdezése
      description: A meghatalmazottnak szóló kiértékelési értesítő mely riasztási típusok esetén keletkezzen.
      operationId: getPatientAlarmLevel
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  alarms:
                    type: array
                    description: A meghatalmazotti kiértékelés értesítés mely riasztási típusoknál történik meg
                    items:
                      type: string
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /generalDoctor/patients/setPatientAnalyseAlarmLevel:
    put:
      summary: Páciens kiértékelési értesítési szint beállítása
      description: Ezzel a funkcióval lehet beállítani, hogy ha keletkezik valamely pácienssel (meghatalmazóval) kapcsolatbanmérés kiértékelés, akkor milyen riasztási szintnél küldjön üzenetet (mail-t) erről a rendszer a kezelőorvosnak (meghatalmazottnak).<br>Jelen verzióban csak a kezelőorvos összes páciensére vonatkozóan lehet beállítást tenni, külön páciensenként nem!
      operationId: setPatientAlarmLevel
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                alarms:
                  description: "Azoknak a riasztási típusoknak a listája (pl: ['ALARM_HIGH','ALARM_URGENT'], amik publikussá válásakor küldjön a rendszer a meghatalmazott számára (mail) üzenetet. Ha mindre, akkor 'ALL' értéket kell megadni."
                  type: array
                  items:
                    type: string
              required:
                - alarms
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /generalDoctor/patients/{userId}/analyses:
    get:
      summary: Kezelt páciens kiértékelés listájának lekérése
      description: Az adott kezelt páciens kiértékeléseinek listája, beleértve a csatolt dokumentumokat is.
      operationId: getHandledPatientAnalyses
      parameters:
        - in: path
          name: userId
          description: A kezelt páciens userId azonosítója
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "USER_NOT_PATIENT": "Ez az ügyfél nincs kapcsolatban ezzel a meghatalmazottal!"
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analyse
  /generalDoctor/patients/{userId}/measurements:
    get:
      summary: Kezelt páciens mérési adat lista lekérése
      description: Az adott kezelt páciens, szűrési feltételeknek megfelelő (időszak, típus, stb.) mérési adatainak lekérése kiválasztási lista felépítéséhez, a szűrőben beállított sorrend szerint.
      operationId: getHandledPatientMeasurements
      parameters:
        - in: path
          name: userId
          description: A páciens (ügyfél) azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: Mérési adat állapot (all, DICT_MEASURE_LOADED, DICT_MEASURE_PROCESSED, DICT_MEASURE_AUTOGENERATED, DICT_MEASURE_ANALYSING, DICT_MEASURE_ANALYSED), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (arrivalDate, status, measurementType)
          schema:
            type: string
            default: "arrivalDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "asc"
      responses:
        '200': # OK
          $ref: "#/components/responses/MeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          #---
          "USER_ID_ERROR": "Nincs ilyen azonosítójú ügyfél a rendszerben!"
          "USER_STATUS_ERROR": "A megadott páciens állapota nem aktív!"
          "USER_NOT_PATIENT": "Ez a páciens nem adott meghatalmazást az aktuális ügyfélnek!"
  /generalDoctor/patients/{userId}/revokeHandledPatient:
    post:
      summary: Pácienssel kezelőorvos kapcsolat megszüntetése
      description: A kezelőorvos és a páciens kapcsolatának megszüntetése (az orvos kezdeményezésére). Az eseményről a páciens mail-ben kap értesítést.
      operationId: revokeHandledPatient
      parameters:
        - in: path
          name: userId
          description: annak a páciensnek a userId-je, akivel a kezelőorvosi kapcsolatot vissza kell vonni
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: OK, a pácienssel a kezelőorvosi kapcsolat megszüntetve (a páciens erről értesítve)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          #---
          "PATIENT_GDOCTOR_CONNECTION_NOT_FOUND": "Nincs meghatalmazotti kapcsolat a két ügyfél között!"
      x-base-domain: User
  /generalDoctor/patients/{userId}/devices:
    get:
      summary: Kezelt páciens eszköz listájának lekérése
      description: Az adott kezelt páciens eszközeinek listája.
      operationId: getHandledPatientDevices
      parameters:
        - in: path
          name: userId
          description: A kezelt páciens userId azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: isOkfoHist
          description: ha értéke true, akkor az OKFŐ projekt során kiadott eszközök (és azok adherencia adatai) szerepelnek a válaszban
          schema:
            type: boolean
        - in: query
          name: isGdoctorHist
          description: ha értéke true, akkor a páciens bevonás során kiadott eszközök szerepelnek a válaszban
          schema:
            type: boolean
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          $ref: "#/components/responses/AssignedDevicesListWithAdherence"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "USER_NOT_PATIENT": "Ez az ügyfél nincs kapcsolatban ezzel a meghatalmazottal!"
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Analyse
  /generalDoctor/patients/{userId}/unregisterInvitedUser:
    delete:
      summary: Páciens előregisztrációjának megszüntetése
      description: A háziorvos által meghívott adott felhasználó regisztrált állapotának megszüntetése, abban az esetben, ha még regisztrációra vár (REGWAIT) állapotban van az adott felhasználó.<br><b>!Csak hibás felhasználói előrögzítés korrigálására használanadó!</b>
      operationId: gdoctorUnregisterInvitedUser
      parameters:
        - in: path
          name: userId
          description: A deregisztrálandó User egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A eregisztrálás sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "409":
          #---
          "USER_NOT_FOUND": "Az adott ügyfél nem található a rendszerben!"
          "DEPERSONALIZATION_CONFLICT": "A felhasználó deregisztrálása sikertelen!"
      x-base-domain: User
  /generalDoctor/institute:
    get:
      summary: Intézmény adatok lekérdezése
      description: Az adott orvos által (regisztrációkor) megadott (munkahely) intézmény nevének és címének lekérdezése.
      operationId: getDoctorInstitute
      responses:
        '200': # Az intézmény adatai
          $ref: "#/components/responses/InstituteResp"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-base-domain: Userparam
    post:
      summary: Intézmény adatok módosítása
      description: Az adott orvoshoz tartozó intézmény adatok módosítása.
      operationId: updateDoctorInstitute
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                instituteName:
                  description: Az intézmény neve
                  type: string
                instituteAddress:
                  description: Az intézmény címe
                  type: string
      responses:
        '200': # Az intézmény adatai
          $ref: "#/components/responses/InstituteResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-base-domain: Userparam
    delete:
      summary: Intézmény adatok törlése
      description: Az adott orvoshoz tartozó intézmény adatok kitörlése.
      operationId: deleteDoctorInstitute
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-base-domain: Userparam
  /generalDoctor/consultations:
    get:
      summary: Meghatalmazotti konzultációk lista lekérése
      description: Meghatalmazottal kapcsolatos konzultációk listájának lekérése
      operationId: getGdoctorConsultationList
      parameters:
        - in: query
          name: starterUserId
          description: A konzultációt kezdeményező páciens (ügyfél) azonosítója. Ha nincs megadva, akkor az összes.
          schema:
            type: integer
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (startDate, refrenceType, targetUserName)
          schema:
            type: string
            default: "startDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: consultationType
          description: Melyik konzultációs típusok menjenek vissza a válaszban (DICT_CONSULT_PATIENT, DICT_CONSULT_DOCTOR, DICT_CONSULT_OKFODOCTOR, DICT_CONSULT_SPECIALISTDOCTOR, DICT_CONSULT_SPECIALISTANALYZE), ha több ajta is, akkor vesszővel elválasztva
          schema:
            type: string
            default: "ALL"
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Consultation"
                        - properties:
                            starterUserName:
                              description: A konzultációt kezdeményező ügyfél neve
                              type: string
                            targetUserName:
                              description: A konzultációra felkért meghatalmazott (kezelőorvos) neve
                              type: string
                            targetUserComment:
                              description: A meghatalmazáskor adott megjegyzés (pl. a háziorvosom)
                              type: string
                            referenceInformation:
                              description: A konzultáció alapját képező mérés, kiértékelés, dokumentum pontosító szövege
                              type: string
                            inviterUserName:
                              description: "A (szak)konzultációt kérő meghatalmazott (Okfő kezelőorvos) neve"
                              type: string
                            targetInstitute:
                              description: "Ha szakkonzultációról van szó, akkor melyik intézmény delegálja a szakorvost"
                              type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "USER_NOT_PATIENT": "Ez a páciens nem adott meghatalmazást az aktuális ügyfélnek!"
  /generalDoctor/consultations/consultantList:
    get:
      summary: Háziorvosi szakkonzultánsok lekérése
      description: Háziorvosi szakkonzultációra alkalmas orvosok listájának lekérése
      operationId: getGdoctorConsultants
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          description: A Szakkonzulens user azonosítója
                          type: integer
                        userName:
                          description: A szakkonzulens neve
                          type: string
                        comment:
                          description: A szakkonzulens csoportba kerüléskor megadott megjegyzés (pl. szakterület)
                          type: string
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /myBill/getMyBalance:
    get:
      summary: Egyenlegem lekérdezése
      description: Az aktuális ügyfél befizetett, de díj kiegyenlítésére még fel nem használt összege és az adat utolsó aktualizálásának dátuma.
      operationId: getMyBalance
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  balance:
                    type: integer
                    description: Az aktuális ügyfél befizetett, de díj kiegyenlítésre még fel nem használt összege
                  balanceDate:
                    type: string
                    format: date-time
                    description: Mikor történt meg legutóbb az egyenleg mező aktualizálása
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
  /myBill/getMyOrders:
    get:
      summary: Fizetendő szolgáltatásaim lekérdezése
      description: Az aktuális ügyfél azon szolgáltatásainak lekérdezése, amik átadásra kerülnek a számlázó rendszer felé.
      operationId: getMyPayableOrders
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/UserOrder"
                        - properties:
                            orderType:
                              type: string
                              description: "A megrendeléshez tartozó termék típusa (pl. DICT_PRODUCT_RENT_FEE)"
                            deviceName:
                              type: string
                              description: Az eszköz elnevezése
                            deviceType:
                              type: string
                              description: Az eszköz típusa
                            mac:
                              type: string
                              description: Az eszköz MAC azonosítóa
                            serialNumber:
                              type: string
                              description: Az eszköz sorozatszáma
                            deviceStatus:
                              type: string
                              description: Az eszköz állapota
                            deviceLiabler:
                              description: A megrendeléshez tartozó eszköz felelősének neve
                              type: string
                            deviceOwner:
                              description: A megrendeléshez tartozó eszköz tulajdonosának neve
                              type: string
                            orderUserName:
                              description: Annak az ügyfélnek a neve, aki a megrendelés ellenértéket fizeti
                              type: string
                            payment_intent:
                              description: Ha folyamatban van az adott megrendelés kifizetése, akkor annak a fizetési folyamat azonosítója a külső fizetési rendszerben (a createPaymentSession válaszában kapott érték) - ezzel lehet pl. megszakítani a fizetési folyamatot
                              type: string
                  serverPaymentMode:
                    type: string
                    description: "A szerver aktuális fizetési futási módja (pl: NOPAY, FULL, PARTIAL, PARTIAL_TEST_ONLY, TEST_ONLY)"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
  /myBill/getMyOrders/{orderId}:
    get:
      summary: Adott fizetendő szolgáltatás lekérdezése
      description: Az aktuális ügyfél adott azonosítójú szolgáltatásának lekérdezése
      operationId: getMyPayableOrder
      parameters:
        - in: path
          name: orderId
          description: A lekért megrendelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/UserOrder"
                  - properties:
                      orderType:
                        type: string
                        description: "A megrendeléshez tartozó termék típusa (pl. DICT_PRODUCT_RENT_FEE)"
                      deviceName:
                        type: string
                        description: Az eszköz elnevezése
                      deviceType:
                        type: string
                        description: Az eszköz típusa
                      mac:
                        type: string
                        description: Az eszköz MAC azonosítója
                      serialNumber:
                        type: string
                        description: Az eszköz sorozatszáma
                      deviceStatus:
                        type: string
                        description: Az eszköz állapota
                      deviceLiabler:
                        description: A megrendeléshez tartozó eszköz felelősének neve
                        type: string
                      deviceOwner:
                        description: A megrendeléshez tartozó eszköz tulajdonosának neve
                        type: string
                      orderUserName:
                        description: Annak az ügyfélnek a neve, aki a megrendelés ellenértéket fizeti
                        type: string
                      payment_intent:
                        description: Ha folyamatban van az adott megrendelés kifizetése, akkor annak a fizetési folyamat azonosítója a külső fizetési rendszerben (a createPaymentSession válaszában kapott érték) - ezzel lehet pl. megszakítani a fizetési folyamatot
                        type: string
                      serverPaymentMode:
                        type: string
                        description: "A szerver aktuális fizetési futási módja (pl: NOPAY, FULL, PARTIAL, PARTIAL_TEST_ONLY, TEST_ONLY)"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
  /myBill/calcOrder:
    post:
      summary: Szolgáltatás árának lekérdezése adott eszközre
      description: Adott eszközre vonatkozó szolgáltatás csomag árának lekérdezése. A megrendelés előtt ez alapján lehet tájékoztatni az ügyfelet. (Ha az eszköz még nem létezik a rendszerben, akkor az eszköz típus paramétert kell megadni!)
      operationId: calcUserOrder
      requestBody:
        description: Az új megrendelés adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                deviceId:
                  type: integer
                  description: Az eszköz azonosítója, amire a megrendelés vonatkozni fog (de ha az nincs még, akkor vagy a mac vagy a deviceType paramétert ki kell tölteni!)
                mac:
                  type: string
                  description: Eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
                deviceType:
                  type: string
                  description: Ha még nem regisztrált eszközről van szó, akkor a kalkulációhoz szükséges eszköz típus értéke
                paymentInterval:
                  type: integer
                  format: int32
                  description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve). Ha nincs megadva, akkor az aktuális ügyfél profiljában megadott alapértelmezett fizetési gyakoriság.
                duration:
                  type: integer
                  format: int32
                  description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                coupon:
                  type: string
                  description: A megrendelés során figyelembe veendő kupon kód
              required:
                - deviceId
                  mac
                  deviceType
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/UserOrder"
                  - properties:
                      documentUrl:
                        type: string
                        description: A termék csomag tájékoztató leírásának az elérési url-je
                      feeList:
                        description: A termék csomag 1,3,6,12 hónapos fizetési gyakoriság szerinti díja
                        type: array
                        items:
                          type: integer
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "406":
          #---
          "DEVICE_ORDER_FOUND_ALREADY": "Van már (vagy még) ilyen aktív megrendelés!"
          "USER_NOT_FOUND": "Az adott ügyfél nem található!"
          "DEVICE_NOT_FOUND": "Az adott eszköz nem található!"
          "DEVICE_TYPE_NOT_FOUND": "Nem található ilyen eszköz típus!"
          "PRODUCTTYPE_OR_PRODUCTPACKAGEID_ERROR": "Hibás termék típus vagy termék azonosító!"
          "PRODUCTPACKAGE_NOT_FOUND": "Nem található ilyen azonosítójú termék!"
          "DEVICETYPE_PRODUCTPACKAGE_MISMATCH": "Eszköz típus és termék azoosító keveredés!"
          "PAYMENTINTERVAL_MISMATCH": "Mivel van érvényes adatletöltés szolgáltatása az ügyfélnek, ezért a fizetési gyakoriság csak aszerinti lehet!"
      x-base-domain: UserOrder
  /myBill/calcServiceOrder:
    post:
      summary: Nem eszköz alapú szolgáltatás árának lekérdezése
      description: Nem eszköz alapú szolgáltatás csomag árának lekérdezése. A megrendelés előtt ez alapján lehet tájékoztatni az ügyfelet.
      operationId: calcUserServiceOrder
      requestBody:
        description: Az új nem eszköz függő megrendelés adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                serviceType:
                  type: string
                  description: A kalkulációhoz szükséges szolgáltatás típus értéke (pl. DICT_PRODUCT_DATA_DOWNLOAD)
                coupon:
                  type: string
                  description: A megrendelés során figyelembe veendő kupon kód
              required:
                - serviceType
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/UserOrder"
                  - properties:
                      documentUrl:
                        type: string
                        description: A termék csomag tájékoztató leírásának az elérési url-je
                      feeList:
                        description: A termék csomag 1,3,6,12 hónapos fizetési gyakoriság szerinti díja
                        type: array
                        items:
                          type: integer
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "406":
          #---
          "DEVICE_ORDER_FOUND_ALREADY": "Van már (vagy még) ilyen aktív megrendelés!"
          "USER_NOT_FOUND": "Az adott ügyfél nem található!"
          "DEVICE_NOT_FOUND": "Az adott eszköz nem található!"
          "DEVICE_TYPE_NOT_FOUND": "Nem található ilyen eszköz típus!"
          "PRODUCTTYPE_OR_PRODUCTPACKAGEID_ERROR": "Hibás termék típus vagy termék azonosító!"
          "PRODUCTPACKAGE_NOT_FOUND": "Nem található ilyen azonosítójú termék!"
          "DEVICETYPE_PRODUCTPACKAGE_MISMATCH": "Eszköz típus és termék azoosító keveredés!"
          "SERVICE_TYPE_ERROR": "Nem megfelelő szolgáltatás típus!"
          "PAYMENTINTERVAL_MISMATCH": "Mivel van érvényes adatletöltés szolgáltatása az ügyfélnek, ezért a fizetési gyakoriság csak aszerinti lehet!"
      x-base-domain: UserOrder
  /myBill/addOrder:
    post:
      summary: Szolgáltatás megrendelése adott eszközre
      description: Adott eszközre vonatkozó szolgáltatás csomag megrendelése.
      operationId: addUserOrder
      requestBody:
        description: Az új megrendelés adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                deviceId:
                  type: integer
                  description: Az eszköz azonosítója, amire a megrendelés vonatkozni fog (ha nincs megadva, akkor a Mac mező értékét kötelező megadni)
                mac:
                  type: string
                  description: Eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
                paymentInterval:
                  type: integer
                  format: int32
                  description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve). Ha nincs megadva, akkor az aktuális ügyfél profiljában megadott alapértelmezett fizetési gyakoriság.
                duration:
                  type: integer
                  format: int32
                  description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                coupon:
                  type: string
                  description: A megrendelés során figyelembe veendő kupon kód
              required:
                - deviceId
                  mac
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "404":
          #---
          "USERORDER_NOT_FOUND": "Nem található ilyen megrendelés!"
        "406":
          #---
          "USERORDER_INACTIVE_YET": "A megrendelés állapota nem aktív!"
      x-implementation: "x-create"
      x-base-domain: UserOrder
  /myBill/addServiceOrder:
    post:
      summary: Nem eszköz alapú szolgáltatás megrendelése
      description: Nem eszköz alapú szolgáltatás csomag megrendelése.
      operationId: addUserServiceOrder
      requestBody:
        description: Az új nem eszköz függő megrendelés adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                serviceType:
                  type: string
                  description: A megrendelt szolgáltatás típus értéke (pl. DICT_PRODUCT_DATA_DOWNLOAD)
                coupon:
                  type: string
                  description: A megrendelés során figyelembe veendő kupon kód
              required:
                - serviceType
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserOrder"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "404":
          #---
          "USERORDER_NOT_FOUND": "Nem található ilyen megrendelés!"
        "406":
          #---
          "USERORDER_INACTIVE_YET": "A megrendelés állapota nem aktív!"
          "SERVICE_TYPE_ERROR": "Nem megfelelő szolgáltatás típus!"
          "PAYMENTINTERVAL_MISMATCH": "Mivel van érvényes adatletöltés szolgáltatása az ügyfélnek, ezért a fizetési gyakoriság csak aszerinti lehet!"
      x-implementation: "x-create"
      x-base-domain: UserOrder
  /myBill/cancelOrder:
    post:
      summary: Szolgáltatás megrendelés lemondása
      description: Az adott ügyfél megrendelés lemondása (azaz logikai törlése, vagyis INACTIVE állapotba hozása).
      operationId: cancelUserOrder
      requestBody:
        description: A lemondásra kerülő megrendelés adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                userOrderId:
                  description: A törlendő User Order egyedi azonosítója (ha nincs megadva, akkor a requestBody-ban vagy a deviceId vagy a mac mező kitöltése kötelező!)
                  type: integer
                  format: int32
                deviceId:
                  type: integer
                  description: Ha nincs megadva megrendelés azonosító, akkor az eszköz azonosítója, amire a megrendelés vonatkozni fog (ha ez sincs megadva, akkor a Mac mező értékét kötelező megadni)
                mac:
                  type: string
                  description: Ha nincs megadva megrendelés azonosító, akkor az eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
              required:
                - userOrderId
                  deviceId
                  mac
      responses:
        '204': # OK
          description: A logikai törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
  /myBill/cancelServiceOrder:
    post:
      summary: Nem eszköz alapú szolgáltatás megrendelés lemondása
      description: Az adott ügyfél megrendelés lemondása (azaz logikai törlése, vagyis INACTIVE állapotba hozása).
      operationId: cancelUserServiceOrder
      requestBody:
        description: Az új nem eszköz függő megrendelés adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                userOrderId:
                  description: A törlendő User Order egyedi azonosítója (ha nincs megadva, akkor a serviceType megadása kötelező)
                  type: integer
                  format: int32
                serviceType:
                  type: string
                  description: A megrendelt szolgáltatás típus értéke (pl. DICT_PRODUCT_DATA_DOWNLOAD)
              required:
                - userOrderId
                  serviceType
      responses:
        '204': # OK
          description: A logikai törlés rendben lezajlott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "406":
          "SERVICE_TYPE_ERROR": "Ez a szolgáltatás nem megfelelő, így nem lehet lemondani!"
          "ORDER_NOT_FOUND": "Ilyen szolgáltatás megrendelés nem található, vagy nem aktív, ezért nem mondható le!"
          "OWNER_ERROR": "Ez a megrendelés nem az aktuális ügyfélhez tartozik!"
  /myBill/checkCoupon:
    post:
      summary: Kupon ellenőrzés
      description: Az adott kupon érvényességének ellenőrzése, hogy ne a megrendelés legyen sikertelen, ha érvénytelen.
      operationId: checkCoupon
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                couponCode:
                  type: string
                  description: Az ellenőrzendő kupon
                productType:
                  type: string
                  description: Az adott termék típusa (pl. DICT_PRODUCT_USER_FEE, DICT_PRODUCT_DATA_DOWNLOAD, stb.), amihez felhasználásra kerül majd a kupon
                deviceType:
                  type: string
                  description: Az adott eszköz típusa (pl. PrivatDoktorEKG, BT_BERRY_BM1000B, stb.), amihez felhasználásra kerül majd a kupon. Az eszköz független szolgáltatás esetében nem kell megadni!
              required:
                - couponCode
                - productType
      responses:
        '200':
          description: van ilyen érvényes kupon
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Coupon"
        '404':
          description: A kupon nem található, vagy érvénytelen
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - admin
            - gdoctor
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "406":
          "COUPON_NOT_FOUND": "Ehhez a termékhez vagy eszközhöz nem található ilyen kupon!"
  /payment/getServerPaymentMode:
    get:
      summary: Szerver aktuális fizetési módjának lekérdezése
      description: "A szerver aktuális fizetési módjának lekérdezése, ami megmutatja, hogy aktuálisan lehet-e fizetési tranzakciókat kezdeményezni, az csak teszt fizetésnek fog-e számítani és hogy bárki vagy csak a belsős szerepkörrel rendelkező ügyfelek számára.<br>Lehetséges állapotok:<ul><li>NOPAY - nem engedélyezett semmilyen fizetési művelet</li><li>PARTIAL_TEST_ONLY - csak azoknak az ügyfeleknek végzi el a (teszt jellegű) fizetési műveleteket, akiknek az authentikációs szerver szerint 'insider' szerepköre is van, de a külső szolgáltatónak teszt tranazkció megjelöléssel lesz elküldve</li><li>TEST_ONLY - minden ügyfél számára elvégződik a (teszt jellegű) fizetési művelet, de a külső szolgáltatónak teszt tranazkció megjelöléssel lesz elküldve</li><li>PARTIAL - csak azoknak az ügyfeleknek végzi el a (valódi) fizetési műveleteket, akiknek a Keycloak authentikációs szerver szerint 'insider' szerepköre is van</li></ul><ul><li>FULL - ilyenkor bármely ügyfél által kezdeményezett fizetés <b>valódi éles pénzmozgást eredményez</b></li></ul>"
      operationId: getServerCurrentPaymentMode
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  paymentMode:
                    description: Az aktuális fizetési funkció kezelési módja a szervernek. (NOPAY,FULL,TEST_ONLY,PARTIAL,PARTIAL_TEST_ONLY)
                    type: string
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - admin
            - sysadmin
            - doctor
            - gdoctor
            - officer
      tags:
        - Bills
        - Mobil
        - Web
        - Admin
  /payment/createPaymentSession:
    post:
      summary: Webes Fizetési munkamenet kezdeményezése
      description: "A webes (Stripe Checkout alapú) elektronikus fizetés kezdő lépése, amivel a megfelelő külső fizetési szolgáltatónál kell jelezni, hogy egy új fizetési folyamat kezdődik. (Ha sikeresen zajlik le ez a kezdeményezés, akkor ezzel egyidőben az érintett megrendelések állapota PAYING-re változik, hogy ne lehessen kétszer kifizetni adott megrendelést.)<br>A PaymentParams-beli amount értékeket a szerver mindenképpen 'újra előveszi' a szolgáltatás táblából az orderId(k) szerint, hogy ne fordulhasson elő, hogy a kliens oldali illegális beavatkozással mondjuk 1 Ft-ra árazhassa le egy hacker az api hívásakor magának a terméket.<br>A válaszban visszaadott, fizetési folyamatra utaló azonosítókkal és kulccsal lehet meghívni pl. Stripe esetén a fizetési oldalra átirányítást (lásd https://stripe.com/docs/js/checkout/redirect_to_checkout)."
      operationId: createPaymentSession
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                paymentParams:
                  description: A fizetési tranzakció adatai (termék neve, mennyisége egységára, stb.) a külső szolgáltató rendszere által elvárt JSON formában (pl. Stripe esetén https://stripe.com/docs/api/checkout/sessions/object leírásnak megfelelően) Ha nincs megadva, akkor az orderIds paraméter alapján a szerver kitölti.
                  type: object
                orderIds:
                  description: A kifizetni kívánt PrivátDoktor rendszer beli megrendelése azonosítói tömbben megadva
                  type: array
                  items:
                    type: integer
              required:
                - orderIds
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  id:
                    description: A fizetési folyamat session azonosítója a külső szolgáltató rendszerében
                    type: string
                  payment_intent:
                    description: A fizetési folyamat azonosítója a külső szolgáltató rendszerében
                    type: string
                  publicKey:
                    description: A külső szolgáltató publikus hitelesítő kulcsa, amit a fizetési weboldalra irányításkor kell használni (ha a szerver TEST_ONLY vagy PARTIAL_TEST_ONLY módban fut éppen, akkor ez a teszt rendszerre fog irányítani)
                    type: string
                  paymentParams:
                    description: A fizetési folyamatban használt paraméterek (pl. Stripe esetén a https://stripe.com/docs/api/checkout/sessions/object leírásnak megfelelő struktúrában). Akkor ban jelentősége, ha input paraméterként csak az orderIds lett átadva és a szerver oldal válogatta össze az alapján az információkat.
                    type: object
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "406":
          "NOPAY_ERROR": "A szerver jelenlegi futási állapotában nem támogatja a fizetési funkciók végrehajtását!"
          "INSIDER_ERROR": "A szerver jelenlegi futási állapotában ez az ügyfél nem végezhet fizetési funkciókat!"
  /payment/createPaymentIntent:
    post:
      summary: Mobilapp Fizetési szándék jelzése
      description: A mobilappbeli elektronikus fizetés kezdő lépése, amivel a megfelelő külső fizetési szolgáltatónál kell jelezni, hogy egy új fizetési folyamat kezdődik. (Ha sikeresen zajlik le ez a kezdeményezés, akkor ezzel egyidőben az érintett megrendelések állapota PAYING-re változik, hogy ne lehessen kétszer kifizetni adott megrendelést.)<br>A válaszban a paymentParams-ban visszaadásra kerül a részletes információ, hogy az orderIds-beli megrendelések szerint milyen tételeket és összegeket kell megjeleníteni a felhasználó számára a fizetési felületen.
      operationId: createPaymentIntent
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                paymentParams:
                  description: A fizetési tranzakció adatai (termék neve, mennyisége egységára, stb.) a külső szolgáltató rendszere által elvárt JSON formában (pl. Stripe esetén https://stripe.com/docs/api/checkout/sessions/object leírásnak megfelelően) Ha nincs megadva, akkor az orderIds paraméter alapján a szerver kitölti.
                  type: object
                orderIds:
                  description: A kifizetni kívánt PrivátDoktor rendszer beli megrendelések azonosítói tömbben megadva
                  type: array
                  items:
                    type: integer
              required:
                - orderIds
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  payment_intent:
                    description: A fizetési folyamat azonosítója a külső szolgáltató rendszerében
                    type: string
                  publicKey:
                    description: A külső szolgáltató publikus hitelesítő kulcsa, amit a fizetési weboldalra irányításkor kell használni (ha a szerver TEST_ONLY vagy PARTIAL_TEST_ONLY módban fut éppen, akkor ez a teszt rendszerre fog irányítani)
                    type: string
                  paymentParams:
                    description: A fizetési folyamatban használt paraméterek (pl. Stripe esetén a https://stripe.com/docs/api/checkout/sessions/object leírásnak megfelelő struktúrában). Akkor van jelentősége, ha input paraméterként csak az orderIds lett átadva és a szerver oldal válogatta össze az alapján az információkat.
                    type: object
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
      x-responses:
        "406":
          "NOPAY_ERROR": "A szerver jelenlegi futási állapotában nem támogatja a fizetési funkciók végrehajtását!"
          "INSIDER_ERROR": "A szerver jelenlegi futási állapotában ez az ügyfél nem végezhet fizetési funkciókat!"
  /payment/thoughtPaymentResult:
    post:
      summary: A fizetés vélt eredménye
      description: A kliens oldal ezzel a funkcióval tudja jelezni a fizetési webhook-ot kezelő REST szerverünknek, hogy sikeres vagy sikertelen fizetésként kapta vissza a vezérlést a külső fizetési szolgáltató felől. (Ezáltal biztosan beállhat az adott megrendelés fizetés alatti állapota még akkor is, ha a webhook alapú kapcsolat valami miatt túl lassú.)
      operationId: thoughtPaymentResult
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                sessionId:
                  description: A fizetési folyamat (session vagy paymentIntent) azonosítója a külső szolgáltató rendszerében
                  type: string
                isSuccess:
                  description: A külső szolgáltató felé a kliens oldalnak visszaadott információ alapján sikeres volt-e a fizetés
                  type: boolean
              required:
                - sessionId
                - isSuccess
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
  /payment/cancelPayment:
    post:
      summary: Fizetés megszakítása
      description: Egy megkezdett fizetési folyamat megszakítása (pl. ha már túl sokáig ragadt PAYING állapotban).
      operationId: cancelPayment
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                payment_intent:
                  description: A megszakítandó fizetési folyamat azonosítója a külső fizetési rendszerben (a createPaymentSession válaszában kapott érték)
                  type: string
              required:
                - payment_intent
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Bills
        - Mobil
        - Web
  /payment/paymentWebhook:
    post:
      summary: Fizetési esemény visszahívási pont
      description: Az a funkció, amit a külső fizetési szolgáltató rendszere visszahív, amikor nála valamilyen fizetési esemény (pl. fizetési folyamat megkezdődött, sikeres fizetés, sikertelen fizetés, stb. keletkezik.
      operationId: paymentWebhook
      requestBody:
        content:
          'application/json':
            schema:
              type: object
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  received:
                    description: A visszahívás sikeres kezelésének visszajelzése
                    type: boolean
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Bills
  /feedback/registerUser:
    post:
      summary: Ügyfél regisztráció visszaigazolás
      description: (Technikai funkció) Az ügyfél regisztrációkor kiküldött mail-ben szereplő visszaigazoló link-en keresztül az adott ügyfél aktiválása.
      operationId: userRegistrationFeedback
      parameters:
        - in: query
          name: guid
          description: a regisztrációs mail-ben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      responses:
        '200': # Sikeres visszajelzés, az ügyfél aktív állapotú lett, be lehet jelentkezni vele
          $ref: "#/components/responses/OkResp"
        '409': # Sikertelen aktiválás
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
        - Mobil
      x-responses:
        "409":
          "INVALID_GUID": "message"
          "TIME_EXPIRED": "message"
          "INVALID_STATE": "message"
          "INTERNAL_ERROR": "message"
      x-base-domain: User
  /feedback/changeMail:
    post:
      summary: Ügyfél mail cím változás visszaigazolás
      description: (Technikai funkció) Az ügyfél mail cím változtatáskor kiküldött mail-ben szereplő visszaigazoló link-en keresztül az akkor megadott új mail cím aktiválása.
      operationId: userChangeMailFeedback
      parameters:
        - in: query
          name: guid
          description: a mail cserélési értesítőben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      responses:
        '200': # Sikeres visszajelzés, a jelszó cseréje megtörtént
          $ref: "#/components/responses/OkResp"
        '409': # Sikertelen aktiválás
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
        - Mobil
      x-responses:
        "409":
          "INVALID_GUID": "message"
          "TIME_EXPIRED": "message"
          "INVALID_STATE": "message"
          "INVALID_NEW_MAIL": "message"
          "INTERNAL_ERROR": "message"
          #---
          "USER_ID_CONFLICT": "A user adatok módosítása sikertelen, már van ilyem mail cím!"
          "DATA_CONFLICT": "A felhasználói adatok módosítása sikertelen!"
      x-base-domain: User
  /feedback/forgotPassword:
    post:
      summary: Elfelejtett jelszó cseréje visszajelzés
      description: Az elfelejtett jelszó csere kérésre kiküldött mail-re felhasználói visszajelzés és az új jelszó megadása.<br>A jelszó lecseréléséről (az eredeti) mail címre is megy értesítés.
      operationId: userForgotPasswordFeedback
      parameters:
        - in: query
          name: guid
          description: az elfelejtett jelszó értesítőben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                newPassword:
                  type: string
              required:
                - newPassword
      responses:
        '200': # Sikeres visszajelzés, az elfelejtett jelszó cseréje rendben megtörtént
          $ref: "#/components/responses/OkResp"
        '409': # Sikertelen aktiválás
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
        - Mobil
      x-responses:
        "409":
          "INVALID_STATE": "message"
          "INVALID_GUID": "message"
          "TIME_EXPIRED": "message"
      x-base-domain: User
  /feedback/inviteGeneralDoctor:
    post:
      summary: Kezelőorvos meghívás visszajelzés
      description: A kezelőorvosi meghíváskor kiküldött mail-re az orvos visszajelzése és kezelőorvosi user regisztráció adatainak megadása.<br>A user regisztráció lerögzítésekor azonnal kezelőorvosi szerepkört is kap ez a felhasználó.
      operationId: generalDoctorInviteFeedback
      parameters:
        - in: query
          name: guid
          description: a kezelőorvos meghívási értesítőben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/DoctorRegistrationReq"
              type: object
              properties:
                firstName:
                  type: string
                  description: Az ügyfél keresztneve
                lastName:
                  type: string
                  description: Az ügyfél családi neve
                email:
                  type: string
                  description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
                language:
                  type: string
                  description: Nyelv (hu, en, ch, ...)
                phoneNumber:
                  type: string
                  description: Max. 18, csak szám.
                postalCode:
                  type: string
                city:
                  type: string
                  description: Min. 1, max. 30 karakter.
                address:
                  type: string
                  description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 30 karakter.<br>
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
                birthYear:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az év
                birthPlace:
                  type: string
                  description: Születési hely
                motherName:
                  type: string
                gender:
                  type: string
                password:
                  type: string
                  description: A felhasználó jelszava
                acceptTermIds:
                  description: A felhasználó által elfogadott szabályzatok azonosítói
                  type: array
                  items:
                    type: integer
                instituteName:
                  type: string
                  description: Az orvos egészségügyi intézményének neve
                instituteAddress:
                  type: string
                  description: Az orvos egészségügyi intézményének címe
                stamp:
                  type: string
                  description: Az orvos EESZT-beli pecsétszáma (Oxxxxx-ből az xxxxx-es rész)
              required:
                - firstName
                - lastName
                - email
                - language
                - password
                - acceptTermIds
                - instituteName
                - instituteAddress
            examples:
              minta:
                value:
                  firstName: "Házi"
                  lastName: "Orvos"
                  email: "genera.doctor@mail.hu"
                  language: "hu"
                  password: "password123"
                  acceptTermIds: [1,2]
                  instituteName: "Honvéd Korház"
                  instituteAddress: "1106 Budapest, Podmaniczky u. 10"
      responses:
        '200': # Sikeres visszajelzés, a kezelőorvosi kapcsolat létre fog jönni, ha az új felhasználóval bejelentkezik a meghívott személy
          $ref: "#/components/responses/OkResp"
        '409': # Sikertelen aktiválás
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
      x-responses:
        "409":
          "NOT_ORIGINAL_EMAIL": "Nem erre az e-mail címre szólt a meghívás!"
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
        "406":
          "REGISTRATION_ERROR": "nomsg"
      x-base-domain: User
  /feedback/inviteGeneralDoctorLogin:
    post:
      summary: Bejelentkezéssel Kezelőorvos meghívás visszajelzés
      description: A kezelőorvosi meghíváskor kiküldött mail-re az orvos visszajelzése érvényes bejelentkezéssel, ha már az orvos a rendszerben regisztrált volt.<br>A sikeres bejelentkezés ellenőrzés után, ha még nem volt ilyen szerepköre, akkor kezelőorvosi szerepkört is kap ez a felhasználó.
      operationId: generalDoctorInviteLoginFeedback
      parameters:
        - in: query
          name: guid
          description: a kezelőorvos meghívási értesítőben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/LoginReq"
              type: object
              properties:
                loginName:
                  type: string
                  description: Alap esetben a felhasználó mail címét kell tartalmazza, kivéve ha nincs mail elérése, hanem telefonszáma van csak, ahova lehet push üzenetet küldeni (pl. a regisztráció befejezéséhez szükséges aktivációs mail-hez hasonló értesítésként)
                password:
                  type: string
                loginCert:
                  type: string
                loginToken:
                  type: string
                language:
                  type: string
                activationCode:
                  type: string
                  description: Ha van megadva értéke, akkor a tényleges bejelentkezés előtt az adott azonosítójú felhasználó aktiválása is megtörténik, ha még nem aktív a felhasználó státusza és az aktiváló kód megfelelő
              required:
                - loginName
                - password
                  loginCert
                  loginToken
            examples:
              minta:
                value:
                  loginName: "hazi.orvos@mail.hu"
                  password: "password123"
      responses:
        '200': # Sikeres visszajelzés, a kezelőorvosi kapcsolat létrejött
          $ref: "#/components/responses/OkResp"
        '409': # Sikertelen visszajelzés, a kezelőorvosi kapcsolat nem jött létre megfelelően
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
      x-responses:
        "406":
          "LOGIN_ERROR": "Sikertelen bejelentkezés a kezelőorvosi meghívás elfogadásakor!"
          "INVALID_USER_ERROR": "Nem megfelelő ügyféllel történő bejelentkezés!"
        "409":
          #---
          "ERROR_INACTIVE_USER": "Az adott ügyfél nem aktív állapotú!"
        "401":
          #---
          "LOGIN_ERROR": "Sikertelen bekelentkezés!"
      x-base-domain: User
  /feedback/inviteGeneralDoctorRefuse:
    post:
      summary: Kezelőorvos meghívás visszautasítás visszajelzés
      description: A kezelőorvosi meghíváskor kiküldött mail-re az orvos elutasító visszajelzése.
      operationId: generalDoctorInviteRefuseFeedback
      parameters:
        - in: query
          name: guid
          description: a kezelőorvos meghívási értesítőben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      responses:
        '200': # Sikeres elutasítás, a meghívó páciens mail értesítés kiküldve
          $ref: "#/components/responses/OkResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
      x-base-domain: User
  /feedback/okfoConsultationLogin:
    post:
      summary: Szakkonzultációs bejelentkezéssel visszajelzés
      description: A szakorvosi konzultációkor kiküldött mail-re az adott OKFŐ intézmény továbbítja a mail-t valamely saját szakorvosának, aki ezen a feedback belépési ponton keresztül érvényesen bejelentkezik.<br>A sikeres bejelentkezés ellenőrzés után az adott (szak)konzultációs tétel alapján a mérést végző pácienssel aktív meghatalmazotti kapcsolatba kerül és a konzultáció is hozzá kapcsolódik.
      operationId: generalDoctorOkfoConsultationLoginFeedback
      parameters:
        - in: query
          name: consultationGuid
          description: a kezelőorvos meghívási értesítőben kiküldött konzultáció egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/LoginReq"
              type: object
              properties:
                loginName:
                  type: string
                  description: Alap esetben a felhasználó mail címét kell tartalmazza, kivéve ha nincs mail elérése, hanem telefonszáma van csak, ahova lehet push üzenetet küldeni (pl. a regisztráció befejezéséhez szükséges aktivációs mail-hez hasonló értesítésként)
                password:
                  type: string
                loginCert:
                  type: string
                loginToken:
                  type: string
                language:
                  type: string
                activationCode:
                  type: string
                  description: Ha van megadva értéke, akkor a tényleges bejelentkezés előtt az adott azonosítójú felhasználó aktiválása is megtörténik, ha még nem aktív a felhasználó státusza és az aktiváló kód megfelelő
              required:
                - loginName
                - password
                  loginCert
                  loginToken
            examples:
              minta:
                value:
                  loginName: "okfo.orvos@mail.hu"
                  password: "password123"
      responses:
        '200': # Sikeres visszajelzés, a kezelőorvosi és a szakkonzultációs kapcsolat létrejött
          $ref: "#/components/responses/OkResp"
        '409': # Sikertelen visszajelzés, a kezelőorvosi kapcsolat és a szakkonzultációs kapcsolat nem jött létre megfelelően
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Auth
        - Web
      x-responses:
        "406":
          "LOGIN_ERROR": "Sikertelen bejelentkezés a szakkonzultációs meghívás elfogadásakor!"
          "INVALID_USER_ERROR": "Nem megfelelő ügyféllel történő bejelentkezés!"
        "409":
          #---
          "ERROR_INACTIVE_USER": "Az adott ügyfél nem aktív állapotú!"
        "401":
          #---
          "LOGIN_ERROR": "Sikertelen bejelentkezés!"
      x-base-domain: User
  /feedback/getParamByGuid:
    get:
      summary: Paraméterek lekérése guid alapján
      description: A visszajelzési mail-ben (pl. meghatalmazott meghívás során) kiküldött guid alapján a kezdeményezőre vonatkozó alap adatok lekérdezése.
      operationId: getFeedbackParamByGuid
      parameters:
        - in: query
          name: guid
          description: a visszaigazolási mail-ben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  userName:
                    type: string
                    description: Az eseményt kezdeményező ügyfél neve
                  socialSecurityNumber:
                    type: string
                    description: Az eseményt kezdeményező ügyfél TAJ száma
                  identityType:
                    type: string
                    description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                  identityNumber:
                    type: string
                    description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Web
  /feedback/getReferenceIdByGuid:
    get:
      summary: Referencia azonosító lekérése guid alapján
      description: Az ügyfeleknek menő mail-ben (pl. kiértékelés értesítőben vagy konzultációs értesítőben) kiküldött guid alapján az érintett adat egyedi azonosítójának lekérése.
      operationId: getReferenceIdByGuid
      parameters:
        - in: query
          name: referenceType
          description: annak az adatnak a fajtája, amire a GUID vonatkozik (ANALYSE, MEASUREMENT, DOCUMENT, CONSULTATION, NOTIFICATION, USER)
          required: true
          schema:
            type: string
        - in: query
          name: guid
          description: az értesítő mail-ben kiküldött egyedi azonosító (GUID)
          required: true
          schema:
            type: string
        - in: query
          name: starterGuid
          description: ha a referenceType==CONSULTATION, akkor az értesítő mail-ben kiküldött kezdeményező user egyedi azonosító (GUID)
          schema:
            type: string
        - in: query
          name: targetGuid
          description: ha a referenceType==CONSULTATION, akkor az értesítő mail-ben kiküldött meghatalmazott user egyedi azonosító (GUID)
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  referenceType:
                    type: string
                    description: Az adott referencia típusa (ANALYSE, MEASUREMENT, DOCUMENT)
                  referenceId:
                    type: number
                    description: Az adott referencia azonosító
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      tags:
        - Feedback
        - Web
      x-responses:
        "404":
          "NOT_FOUND": "Ilyen típusra a GUID-hez tartozó adat nem található a rendszerben!"
        "406":
          "REFERENCE_TYPE_ERROR": "Nem megfelelő referncia típus!"
  /webmodule/doctor/analysable/getList:
    get:
      summary: Kiértékelendő mérések - lista lekérése
      description: Az ügyeletes orvos(ok) számára fontos kiértékelésre váró mérési adatok listájának lekérése. A válasz előállításakor a szűrési feltételeknek megfelelő (veszélyesség, időszak, mérés típus, ügyfél stb.) adatok kerülnek leválogatásra a megadott sorrend szerint.<br>countOnly=true esetén csak a szűrésnek megfelelő rekordok darabszámát adja vissza<br>isBrief=true esetén a válaszban csak a legfontosabb adatok ahhoz, hogy el lehessen dönteni, hogy mely mérések állapota változott a legutóbbi lekérdezés óta<br>
      operationId: getAnalysableMeasurementList
      parameters:
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: status
          description: Kiértékelendő mérési adat állapot (all, DICT_MEASURE_MUST_VERIFY, DICT_MEASURE_ANALYSING), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab
          schema:
            type: string
        - in: query
          name: isActualName
          description: Ha nincs userId szerinti, de van userName szerinti szűrő feltétel, akkor csak az aktuális ügyfél név szerinti mérések legyenek a válaszban, vagy az ügyfél régebbi nevein mentett mérések is
          schema:
            type: boolean
            default: true
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
        - in: query
          name: pageLength
          description: "Hány rekordot adjon vissza legfeljebb (alapértelmezésben: 20)"
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (measurementDate, status, measurementType)
          schema:
            type: string
            default: "measurementDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: alarmType
          description: A riasztási szint (all, NO_ALARM, ALARM_LOW, ALARM_HIGH, ALARM_URGENT), ha több is kell akkor vesszőkkel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: inactiveOnly
          description: Csak az elsődleges kiértékelésre váró tételek
          schema:
            type: boolean
            default: false
        - in: query
          name: summary
          description: A mérés összefoglaló információban szabad szöveges (like) keresés
          schema:
            type: string
        - in: query
          name: isBrief
          description: Ha az értéke true, akkor csak a mérés Id-je és a lastUpdate mező értéke megy a válaszban, egyébként minden mező
          schema:
            type: boolean
            default: false
        - in: query
          name: countOnly
          description: Ha az értéke true, akkor csak a szűrésnek megfelelő rekordok számát adja vissza
          schema:
            type: boolean
            default: false
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalysableMeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "NORMAL_DOCTOR_ROLE_ABSENT": "doctorRole paraméter inkonzisztens ezzel a user-rel!"
          "STOREDPROC_ERROR": "ex.message"
  /webmodule/doctor/analysable/getSelectedMeasurements:
    get:
      summary: Kiértékelendő mérések - kiválasztottak száma
      description: A kiértékelendő mérések esetében az aktuális orvos által kiválasztott mérések azonosítóinak (és ezáltal a darab számuknak) a lekérése.
      operationId: getAnalysableSelectedMeasurements
      responses:
        '200':
          description: A kérés rendben végrehajtódott
          content:
            'application/json':
              schema:
                properties:
                  measurements:
                    description: A művelet után az adott doktorhoz tartozó kijelölt mérések
                    type: array
                    items:
                      type: number
                      description: mérés egyedi azonosítója
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/analysable/clearSelection:
    post:
      summary: Kiértékelendő mérések - a kijelöltek törlése
      description: Az adott orvoshoz tartozó mérés kijelölések törlése.
      operationId: analysableClearSelection
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/analysable/{measurementId}/getMeasurementStatus:
    get:
      summary: Adott kiértékelendő mérés állapotának lekérdezése
      description: A rendszeres lista kép frissítéshez használt (gyors) funkció.<br>A megadott mérésre adja vissza az aktuális státuszát, a kiválasztottságát, és ha kiválasztott, akkor annak az orvosnak az azonosítóját és nevét, aki a kiértékelésével éppen foglalkozik.
      operationId: getAnalysableMeasurementStatus
      parameters:
        - in: path
          name: measurementId
          description: Mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # Sikeres a lekérdezés
          $ref: "#/components/responses/MeasurementItemStatusResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "404":
          "NOT_FOUND_MEASUREMENT": "Ez a mérés nem található!"
  /webmodule/doctor/analysable/{measurementId}/changeSelection:
    post:
      summary: Kiértékelendő mérések - kijelöltség változtatás
      description: A kiértékelendő mérések lista valamely tételén kattintott a felhasználó a checkbox-ra, ezért hozzá kell rendelni vagy meg kell szüntetni a hozzárendelést az aktuálisan bejelentkezett kiértékelő orvoshoz.<br>A válaszban visszaadja az összes, az adott méréssel együtt kijelölendő mérés azonosítóját. Figyelembe veszi a hibák ellenőrzésénél, hogy a jelenleg kijelölt mérések mellé az aktuális orvos kijelölheti-e az adott mérést.
      operationId: changeAnalysableMeasurementSelection
      parameters:
        - in: path
          name: measurementId
          description: Mérés azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                selected:
                  type: boolean
                  description: Kiválasztott legyen-e az adott elem
              required:
                - selected
      responses:
        '200':
          description: A kérés rendben végrehajtódott
          content:
            'application/json':
              schema:
                properties:
                  measurements:
                    description: A művelet után az adott doktorhoz tartozó kijelölt mérések
                    type: array
                    items:
                      type: number
                      description: mérés egyedi azonosítója
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "STOREDPROC_ERROR": "ex.message"
  /webmodule/doctor/duty:
    get:
      summary: Ügyeleti naptár lekérdezése
      description: Az orvosi ügyeleti naptár események listájának lekérdezése
      operationId: doctorGetDutyCalendarList
      parameters:
        - in: query
          name: dateFrom
          description: Adott dátum után kezdődő események
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Adott dátumig kezdődő események
          required: true
          schema:
            type: string
        - in: query
          name: targetIds
          description: "Mely tulajdonos (cél személy) user-ek eseményei (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
        - in: query
          name: creatorIds
          description: "Mely létrehozó user-ek eseményei (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
        - in: query
          name: modifierIds
          description: "Mely módosító user-ek eseményei (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: "Milyen státuszú események (alapértelmezetten: <üres>) - 'ALL' ha minden, vagy státuszok vesszővel elválasztva (pl. PLANNED,ACCEPTABLE,ACTIVE,REJECTED,COMPLETED,OBSOLATED).<br>Az officer szerepkörben ALL-al érdemes hívni, doctor szerepkörben pedig üres értékkel, ami azt jelenti, hogy: ACCEPTABLE,ACTIVE,REJECTED"
          schema:
            type: string
            default: "all"
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - OfficeManager
        - Admin
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Calendar
    post:
      summary: Ügyeleti naptár esemény létrehozás
      description: Egy új esemény létrehozása az orvosi ügyeleti naptárba
      operationId: doctorCreateDutyEvent
      requestBody:
        description: Az új ügyeleti naptár esemény adatai
        content:
          'application/json':
            schema:
              #$ref: "#/components/schemas/Calendar"
              description: Az orvosok ügyeleti rendjének és a felhasználók különböző időponthoz kötődő előírásainak és tennivalóinak naptára.
              properties:
                calendarId:
                  type: integer
                  description: Calendar egyedi azonosítója
                startTime:
                  type: string
                  format: date-time
                  description: Az adott naptár esemény kezdete
                endTime:
                  type: string
                  format: date-time
                  description: A naptár esemény befejeződési időpontja
                timeLength:
                  type: integer
                  format: int32
                  description: Az esemény hossza (percekben számolva) - kalkulált mező a startTime-ból és az endTime-ból
                eventType:
                  type: string
                  description: "Az adott időponthoz kötődő esemény típusa (pl: orvosi ügyelet, adott páciensnek szóló mérési előírás, figyelmeztetés megjelenítés, stb.)."
                extendedData:
                  type: string
                  description: A naptári időponthoz kapcsolt kiegészítő információ.
                status:
                  type: string
                  description: "A naptári esemény állapota, pl: aktív, inaktív, befejezett."
                createDate:
                  type: string
                  format: date-time
                  description: A naptári esemény létrehozásának időpontja
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptári esemény utolsó módosításának időpontja
                acceptanceDate:
                  type: string
                  format: date-time
                  description: Ha az adott esemény típus elfogadásra kötelezett (pl. orvosi ügyeleti esemény), akkor az az időpont, amikor az esemény tulajdonosa (a cél személy) elfogadta
                preWarningTime:
                  type: string
                  format: date-time
                  description: Az adott esemény (pl. ügyelet) kezdete előtt kiküldött figyelmeztető mail időpontja
                forcedWarningTime:
                  type: string
                  format: date-time
                  description: Az adott esemény kezdetekor (pl. ügyeleti időpont elkezdődésekor, ha még nincs bejelentkezve az adott orvos) küldött felszólító mail kiküldésének időpontja
                commentReference:
                  type: integer
                  format: int32
                  description: Pl. amikor visszautasítja a tervezett ügyeleti eseményt az orvos, akkor kötelező hozzáfűznie egy szöveges megjegyzést<br>A megjegyzés szövege az Eventlog táblában tárolódik, ebben mezőben pedig az adott EVT_REJECT_CALENDAREVENT típusú rekord egyedi azonosítója van.
                isChanged:
                  type: boolean
                  description: Ha értéke true, akkor olyan változás történt az esemény adataiban, ami miatt ki kell értesíteni a targetUserId azonosítójú orvost (pl. új ügyeleti esemény, vagy megváltozott az ügyelet hossza)
                completionStart:
                  type: string
                  format: date-time
                  description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor ténylegesen végrehajtotta az időpontra előírt tennivalót.<br>Orvosi ügyeleti eseménynél itt található, hogy mikor lépett be az ügyeletes orvos.
                completionEnd:
                  type: string
                  format: date-time
                  description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor befejezte az időpontra előírt tennivalót. Elsősorban orvosi ügyeleti eseménynél van jelentősége, mert itt található, hogy mikor tevékenykedett legutóbb vagy lépett ki az ügyeletes orvos.
                completionLength:
                  type: integer
                  format: int32
                  description: Az elvégzés hossza (percekben számolva) - kalkulált mező a completionStart-ból és a completionEnd-ből.<br>De ha az esemény orvosi ügyelet, akkor az adott ügyelet alatt ténylegesen bejelentkezve töltött időt tartalmazza!
                completionPercent:
                  type: integer
                  format: int32
                  description: "Az esemény hosszához képest mennyire van kész az elvégzés - kalkulált mező: a startTime, endTime, completionStart, completionEnd arányból számítódik.<br>Elsősorban az orvosi ügyeletek elszámolhatósága miatt van jelentősége."
                adhocType:
                  type: string
                  description: "Ha értéke 'ADHOC', akkor automatikusan növekvő nem előre tervezett esemény (pl: adhoc orvosi jelentkezés ügyeletes nélküli időszakra). Ha értéke 'ADHOCFIX', akkor pedig fix vég időpontú nem előre tervezett esemény (pl. mert az orvos jelezte a kérelemkor, hogy meddig tudja vállalni az ügyeletet)."
                targetUserId:
                  type: integer
                  description: Melyik felhasználóra vonatkozik a naptár bejegyzés
                regulationId:
                  type: integer
                  description: Melyik előírásra vonatkozik a naptár bejegyzés.
                userGroupId:
                  type: integer
                  description: Melyik felhasználó csoportra vonatkozik a naptár esemény
                creatorId:
                  type: integer
                  description: Eseményt létrehozó felhasználó azonosítója
                modifierId:
                  type: integer
                  description: Módosító felhasználó azonosítója
              required:
                - calendarId
                - startTime
                - eventType
              type: object
            examples:
              minta:
                value:
                  startTime: "2021-06-23T14:08:18.905Z"
                  endTime: "2022-01-31T14:08:18.905Z"
                  targetUserId: 217
        required: true
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/createAdhocDuty:
    post:
      summary: Adhoc ügyeleti naptár esemény létrehozás
      description: Egy új adhoc (azaz előre nem tervezett) esemény létrehozása az orvosi ügyeleti naptárba, azaz amikor az orvos jelzi, hogy ügyelni szeretnék.<br>A kapott válaszban ha a status=ACTIVE, akkor automatikusan elfogadásra került a kérés.<br>Ha pedig PLANNED, akkor az officer szerepkörű személy fogja engedélyezni az ügyelet megkezdését és hosszát.
      operationId: doctorCreateAdhocDutyEvent
      requestBody:
        description: Az új adhoc ügyeleti naptár esemény adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                endTime:
                  type: string
                  format: date-time
                  description: Az orvos maximum milyen időpontig tudja vállalni az adhoc ügyeletet
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - OfficeManager
        - Admin
  /webmodule/doctor/duty/getDoctorList:
    get:
      summary: Ügyeletbe osztható orvosok lekérdezése
      description: Orvosi ügyeletbe beosztható orvosok listájának lekérdezése
      operationId: getDutyDoctorList
      parameters:
        - in: query
          name: doctorName
          description: Ha meg van adva, akkor az adott név darab szerint (like %...%-os) szűréssel zajlik a lekérdezés az orvosokra
          schema:
            type: string
      responses:
        '200': # OK
          $ref: "#/components/responses/DoctorListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
      x-base-domain: Calendar
  /webmodule/doctor/duty/{doctorId}/setDoctorColor:
    post:
      summary: Orvos alap színének módosítása
      description: Adott orvos (ügyeleti naptárban megjelenő) alap színének módosítása
      operationId: setDoctorBaseColor
      parameters:
        - in: path
          name: doctorId
          description: az orvos  azonosítója
          required: true
          schema:
            type: number
      requestBody:
        description: Mire módosuljon az adott orvos baseColor paramétere
        content:
          'application/json':
            schema:
              type: object
              properties:
                baseColor:
                  description: A szín értéke a HTML-ben szokásos string formájában (pl. #123f40) vagy ha nincs megadva, akkor a rendszer fog generálni egy véletlen színt
                  type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  baseColor:
                    description: A módosításkor leírt (vagy generált) HTML szín string
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/getActualDuty:
    get:
      summary: Aktuális ügyeletes lekérdezése
      description: Az aktuális időpontban orvosi ügyeletben lévők lekérdezése
      operationId: doctorGetActualDuty
      responses:
        '200': # OK
          $ref: "#/components/responses/ActualDutyResp"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - OfficeManager
        - Admin
      x-base-domain: Calendar
  /webmodule/doctor/duty/hasAcceptableDuty:
    get:
      summary: Van-e elfogadandó ügyelete
      description: Annak lekérése, hogy van-e elfogadásra váró (ACCEPTABLE) státuszú, az aktuális időpontnál későbbi, ügyeleti naptár eseménye az aktuális orvosnak
      operationId: doctorHasAcceptableDuty
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  acceptableCount:
                    type: integer
                    description: Az adott ügyfél jóváhagyandó ügyeleti eseményeinek száma
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/duty/getNextDuty:
    post:
      summary: Következő ügyeleti esemény lekérése
      description: A paraméterben adotthoz képest időben a követekező, adott feltételnek megfelelő, ügyeleti esemény megkeresése.
      operationId: doctorGetNextDuty
      parameters:
        - in: query
          name: dateFrom
          description: Milyen dátum határtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Milyen dátum határig
          required: true
          schema:
            type: string
        - in: query
          name: targetIds
          description: "Mely tulajdonos (cél személy) user-ek eseményei között kell keresni (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
        - in: query
          name: creatorIds
          description: "Mely léterhozó user-ek eseményei között kell keresni (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
        - in: query
          name: modifierIds
          description: "Mely módosító user-ek eseményei között kell keresni (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
        - in: query
          name: status
          description: "Milyen státuszú események között kell keresni (alapértelmezetten: ALL) - státuszok vesszővel elválasztva (pl. PLANNED,ACCEPTABLE,ACTIVE,REJECTED,COMPLETED,OBSOLATED). Speciális értékként kezelődik az 'EMPTY' - az első olyan időpontot adja vissza, amikor nincs még ügyeletes beosztva."
          schema:
            type: string
            default: "all"
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Calendar"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - OfficeManager
        - Admin
  /webmodule/doctor/duty/getDutyDistribution:
    post:
      summary: Ügyeleti események eloszlása
      description: Az adott orvos(ok) adott időszakbeli ügyeletére vonatkozó összesített darabszámok és idők, hogy az ügyeleti beosztást tervező személy egyenletes terhelést, azaz közel azonos mennyiségű ügyeleti időt tudjon kialakítani
      operationId: doctorGetDutyDistribution
      parameters:
        - in: query
          name: dateFrom
          description: Milyen dátum határtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Milyen dátum határig
          required: true
          schema:
            type: string
        - in: query
          name: targetIds
          description: "Mely tulajdonos (cél személy) user-ek eseményeit kell összegezni (alapértelmezetten: ALL) - userId-k vesszővel elválasztva"
          schema:
            type: string
            default: "all"
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userName:
                      type: string
                      description: Ügyeletbe osztott orvos neve
                    targetUserId:
                      type: integer
                      description: Az ügyeletbe osztott orvos azonosítója
                    planned:
                      type: integer
                      description: A tervezett állapotú események száma az adott időszakban
                    acceptable:
                      type: integer
                      description: A jóváhagyandó állapotú események száma az adott időszakban
                    active:
                      type: integer
                      description: Az aktív (azaz az orvos által már jóváhagyott) állapotú események száma az adott időszakban
                    rejected:
                      type: integer
                      description: Az orvos által visszautasított állapotú események száma az adott időszakban
                    summary:
                      type: integer
                      description: "Az orvos terhelését jelentő (azaz a tervezett+jóváhagyandó+aktív állapotú) események számának összege az adott időszakban"
                    plannedTime:
                      type: integer
                      description: A tervezett állapotú események összesített ideje percekben az adott időszakban
                    acceptableTime:
                      type: integer
                      description: A jóváhagyandó állapotú események összesített ideje percekben az adott időszakban
                    activeTime:
                      type: integer
                      description: Az aktív (azaz az orvos által már jóváhagyott) állapotú események összesített ideje percekben az adott időszakban
                    rejectedTime:
                      type: integer
                      description: Az orvos által visszautasított állapotú események összesített ideje percekben az adott időszakban
                    summaryTime:
                      type: integer
                      description: "Az orvos terhelését jelentő (azaz a tervezett+jóváhagyandó+aktív állapotú) események  összesített ideje percekben az adott időszakban"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - OfficeManager
        - Admin
  /webmodule/doctor/duty/setPlannedDutiesToAcceptable:
    post:
      summary: Tervezett ügyeletek elfogadandóra állítása
      description: Az ügyeleti rend tervezési időszak lezárása, azaz az adott időszak összes tervezett (PLANNED) státuszú naptári eseményének státuszát átállítja elfogadandóra (ACCEPTABLE) .
      operationId: doctorSetPlannedDutiesToAcceptable
      parameters:
        - in: query
          name: dateFrom
          description: Milyen dátum határtól (a részdátumot kiegészíti a rendszer kezdődátumnak)
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Milyen dátum határig (a részdátumot kiegészíti a rendszer határdátumnak)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  updateCount:
                    type: number
                    description: A művelet során a jóváhagyandó státuszra átállított ügyeleti események darabszáma
                  dateFrom:
                    type: string
                    description: A művelet során használt kezdő dátum-idő
                  dateTo:
                    type: string
                    description: A művelet során használt végső dátum-idő
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/sendDutyChangedMail:
    post:
      summary: Ügyeleti változásra figyelmeztető mail kiküldése
      description: Az adott időszakban történt változtatás miatt az érintett orvosok számára figyelmeztető mail küldése, hogy jelentkezzenek be és fogadják el a változásokat.
      operationId: doctorSendDutyChangedMail
      parameters:
        - in: query
          name: dateFrom
          description: Milyen dátum határtól
          required: true
          schema:
            type: string
        - in: query
          name: dateTo
          description: Milyen dátum határig
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  sentMail:
                    type: integer
                    description: Hány mail került kiküldésre
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/getAdhocDutiableDoctors:
    get:
      summary: Adhoc ügyeletre engedélyeztt orvosok lekérése
      description: Azoknak az orvosoknak a lekérdezése, akik számára engedélyezett, hogy Adhoc ügyeletre jelentkezzen
      operationId: getAdhocDutiableDoctors
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  doctorIds:
                    type: string
                    description: Az engedélyezett orvos(ok) azonosítója vesszővel elválasztva (vagy ha üres - akkor senki, ha ALL - akkor bármelyik orvos)
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/setAdhocDutiableDoctors:
    post:
      summary: Adhoc ügyeletre engedélyezés beállítása
      description: Annak a beálítása, ohgy mely orvosoknak engedélyezett, hogy Adhoc ügyeletre jelentkezzenek<br>
      operationId: setAdhocDutiableDoctors
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                doctorIds:
                  type: string
                  description: Az engedélyezett orvos(ok) azonosítója vesszővel elválasztva (vagy ha üres - akkor senki, ha ALL - akkor bármelyik orvos)
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/{calendarId}:
    get:
      summary: Ügyeleti naptár esemény adatainak lekérdezése
      description: Adott orvosi ügyeleti naptár esemény összes adatának lekérdezése
      operationId: doctorGetDutyEventById
      parameters:
        - in: path
          name: calendarId
          description: A keresett orvosi ügyeleti naptár esemény egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - OfficeManager
        - Admin
      x-implementation: "x-findById"
      x-base-domain: Calendar
    post:
      summary: Ügyeleti naptár esemény adatainak módosítása
      description: Adott orvosi ügyeleti naptár esemény adatainak módosítása<br><b>A módosítás csak akkor hajtódik végre, ha a az input paraméterként megadott modifyDate ugyanaz az érték, mint ami az adatbázisban van az update művelet végrehajtása előtt, egyébként Conflict (409) hibaüzenetet ad vissza!</b>
      operationId: doctorUpdateDutyEvent
      parameters:
        - in: path
          name:  calendarId
          description: A módosítandó orvosi ügyeleti naptár esemény egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A ügyeleti naptár esemény módosított adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                startTime:
                  type: string
                  format: date-time
                  description: Az adott naptár esemény kezdete
                endTime:
                  type: string
                  format: date-time
                  description: A naptár esemény befejeződési időpontja
                extendedData:
                  type: string
                  description: A naptári időponthoz kapcsolt kiegészítő információ.
                status:
                  type: string
                  description: "A naptári esemény állapota, pl: aktív, inaktív, befejezett."
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptár esemény eredeti (tehát a get vagy getList válaszában kapott) modifyDate mező érték. Mert a szerver ellenőrzi, hogy esetleg valamely konkurrens módosítás miatt ahhoz az állapothoz képest megváltozott-e ennek a naptár eseménynek valamely adata. Ha igen, akkor nem engedi végrehajtódni az update (vagy replace) műveletet, hanem előtte újra le kell kérni az aktuális adat állapotot.
              required:
                - modifyDate
            examples:
              minta:
                value:
                  startTime: "2021-06-23T14:08:18.905Z"
                  endTime: "2022-01-31T14:08:18.905Z"
                  modifyDate: "2022-01-10T10:00:00.000Z"
        required: true
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
      x-implementation: "x-replaceById"
      x-base-domain: Calendar
  /webmodule/doctor/duty/{calendarId}/delete:
    post:
      summary: Naptár esemény törlése
      description: Adott orvosi ügyeleti naptár esemény törlése<br><b>A módosítás csak akkor hajtódik végre, ha a az input paraméterként megadott modifyDate ugyanaz az érték, mint ami az adatbázisban van a delete művelet végrehajtása előtt, egyébként Conflict (409) hibaüzenetet ad vissza!</b>
      operationId: doctorDeleteDutyEvent
      parameters:
        - in: path
          name: calendarId
          description: A törlendő orvosi ügyeleti naptár esemény egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptár esemény eredeti (tehát a get vagy getList válaszában kapott) modifyDate mező érték. Mert a szerver ellenőrzi, hogy esetleg valamely konkurrens módosítás miatt ahhoz az állapothoz képest megváltozott-e ennek a naptár eseménynek valamely adata. Ha igen, akkor nem engedi végrehajtódni a delete műveletet, hanem előtte újra le kell kérni az aktuális adat állapotot.
              required:
                - modifyDate
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - officer
            - admin
      tags:
        - Admin
        - OfficeManager
  /webmodule/doctor/duty/{calendarId}/accept:
    post:
      summary: Ügyelet elfogadása
      description: Adott orvosi ügyelet(i naptár esemény) elfogadása - azaz az adott ügyelet elvállalása<br><b>A módosítás csak akkor hajtódik végre, ha a az input paraméterként megadott modifyDate ugyanaz az érték, mint ami az adatbázisban van az update művelet végrehajtása előtt, egyébként Conflict (409) hibaüzenetet ad vissza!</b>
      operationId: doctorAcceptDutyEvent
      parameters:
        - in: path
          name:  calendarId
          description: Az elfogadott orvosi ügyelet(i naptár esemény) egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptár esemény eredeti (tehát a get vagy getList válaszában kapott) modifyDate mező érték. Mert a szerver ellenőrzi, hogy esetleg valamely konkurrens módosítás miatt ahhoz az állapothoz képest megváltozott-e ennek a naptár eseménynek valamely adata. Ha igen, akkor nem engedi végrehajtódni az update (vagy replace) műveletet, hanem előtte újra le kell kérni az aktuális adat állapotot.
              required:
                - modifyDate
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - Admin
        - OfficeManager
      x-base-domain: Calendar
  /webmodule/doctor/duty/{calendarId}/reject:
    post:
      summary: Ügyelet visszautasítása
      description: Adott orvosi ügyelet(i naptár esemény) elfogadása -azaz az adott ügyelet elvállalása<br><b>A módosítás csak akkor hajtódik végre, ha a az input paraméterként megadott modifyDate ugyanaz az érték, mint ami az adatbázisban van az update művelet végrehajtása előtt, egyébként Conflict (409) hibaüzenetet ad vissza!</b>
      operationId: doctorRejectDutyEvent
      parameters:
        - in: path
          name:  calendarId
          description: Az elfogadott orvosi ügyelet(i naptár esemény) egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                rejectComment:
                  type: string
                  description: "A visszautasított ügyeleti időponthoz fűzött megjegyzés (pl. Szabadságon leszek aug. 10-17 között)"
                modifyDate:
                  type: string
                  format: date-time
                  description: A naptár esemény eredeti (tehát a get vagy getList válaszában kapott) modifyDate mező érték. Mert a szerver ellenőrzi, hogy esetleg valamely konkurrens módosítás miatt ahhoz az állapothoz képest megváltozott-e ennek a naptár eseménynek valamely adata. Ha igen, akkor nem engedi végrehajtódni az update (vagy replace) műveletet, hanem előtte újra le kell kérni az aktuális adat állapotot.
              required:
                - rejectComment
                - modifyDate
      responses:
        '200': # OK
          $ref: "#/components/responses/CalendarEventResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - officer
            - admin
      tags:
        - Doctor
        - DoctorWeb
        - Admin
        - OfficeManager
      x-base-domain: Calendar
  /webmodule/doctor/templates:
    get:
      summary: Sablon lista lekérdezése
      description: Az aktuálisan bejelentkezett orvos kiértékelési sablonjainak lekérdezése
      operationId: doctorGetTemplateList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    templateId:
                      type: number
                      description: A sablon dokumentum egyedi azonosítója
                    name:
                      type: string
                      description: A sablon dokumentum neve
                    text:
                      type: string
                      description: A sablon dokumentum szövege (Html formátumban)
                    createDate:
                      type: string
                      format: date-time
                      description: A sablon dokumentum létrehozásának időpontja
                    ownerId:
                      type: number
                      description: A sablon dokumentum tulajdonosa
                    uploaderId:
                      type: number
                      description: A sablon dokumentum feltöltője
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Document
    post:
      summary: Sablon létrehozása
      description: Az aktuálisan bejelentkezett orvoshoz egy új kiértékelési sablon létrehozása
      operationId: doctorAddTemplate
      requestBody:
        description: Az új Sablon dokumentum adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: A sablon dokumentum neve
                text:
                  type: string
                  description: A sablon dokumentum szövege (Html formátumban)
              required:
                - name
                - text
        required: true
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                type: object
                properties:
                  templateId:
                    type: number
                    description: A sablon dokumentum egyedi azonosítója
                  name:
                    type: string
                    description: A sablon dokumentum neve
                  text:
                    type: string
                    description: A sablon dokumentum szövege (Html formátumban)
                  createDate:
                    type: string
                    format: date-time
                    description: A sablon dokumentum létrehozásának időpontja
                  ownerId:
                    type: number
                    description: A sablon dokumentum tulajdonosa
                  uploaderId:
                    type: number
                    description: A sablon dokumentum feltöltője
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
      x-implementation: "x-create"
      x-base-domain: Document
  /webmodule/doctor/templates/{templateId}:
    get:
      summary: Sablon adatainak lekérdezése
      description: Az aktuálisan bejelentkezett orvos egy adott azonosítójú sablonjának lekérdezése
      operationId: doctorGetTemplateById
      parameters:
        - in: path
          name: templateId
          description: A keresett Sablon dokumentum egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  templateId:
                    type: number
                    description: A sablon dokumentum egyedi azonosítója
                  name:
                    type: string
                    description: A sablon dokumentum neve
                  text:
                    type: string
                    description: A sablon dokumentum szövege (Html formátumban)
                  createDate:
                    type: string
                    format: date-time
                    description: A sablon dokumentum létrehozásának időpontja
                  ownerId:
                    type: number
                    description: A sablon dokumentum tulajdonosa
                  uploaderId:
                    type: number
                    description: A sablon dokumentum feltöltője
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
      x-implementation: "x-findById"
      x-base-domain: Document
    post:
      summary: Sablon adatainak módosítása
      description: Az aktuálisan bejelentkezett orvos adott azonostójú sablonjának módosítása
      operationId: doctorUpdateTemplate
      parameters:
        - in: path
          name: templateId
          description: A módosítandó Sablon dokumentum egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: A sablon dokumentum új neve
                text:
                  type: string
                  description: A sablon dokumentum új szövege (Html formátumban)
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  templateId:
                    type: number
                    description: A sablon dokumentum egyedi azonosítója
                  name:
                    type: string
                    description: A sablon dokumentum neve
                  text:
                    type: string
                    description: A sablon dokumentum szövege (Html formátumban)
                  createDate:
                    type: string
                    format: date-time
                    description: A sablon dokumentum létrehozásának időpontja
                  ownerId:
                    type: number
                    description: A sablon dokumentum tulajdonosa
                  uploaderId:
                    type: number
                    description: A sablon dokumentum feltöltője
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
      x-implementation: "x-replaceById"
      x-base-domain: Document
    delete:
      summary: Sablon törlése
      description: Az aktuálisan bejelentkezett orvos adott azonosítójú sablonjának törlése
      operationId: doctorDeleteTemplate
      parameters:
        - in: path
          name: templateId
          description: A törlendő Sablon dokumentum egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
      x-implementation: "x-delete"
      x-base-domain: Document
  /webmodule/doctor/measurementAndAnalyse/startSelectionsEditing:
    get:
      summary: A kiválasztott mérések kiértékelésének szerkesztése
      description: "Az aktuális doktor által kiválasztott méréseknek és ha van, akkor a hozzájuk tartozó, még szerkesztés alatt lévő kiértékelés adatainak lekérése.<br>Ez a funkció hívandó a mérés listából a kiértékelési részletező oldalra átlépéskor, mert: ha már létezett a kiértékelés, akkor annak az állapotát beállítja EDITING-re!"
      operationId: startSelectionsEditing
      responses:
        '200':
          description: A kiválasztott mérések és a rájuk vonatkozó kiértékelés adatai
          content:
            'application/json':
              schema:
                type: object
                properties:
                  measurements:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Measurement"
                        - properties:
                            alarmType:
                              type: string
                              description: A méréshez tartozó riasztási szint
                            userName:
                              type: string
                              description: A páciens neve
                  analyse:
                    $ref: "#/components/schemas/Analyse"
                  attachments:
                    description: az adott kiértékeléshez csatolt dokumentumok adatai (de a kiértékelésből konvertált PDF az nem lesz benne)
                    type: array
                    items:
                      type: object
                      properties:
                        attachmentId:
                          type: integer
                          description: csatolmány (kapcsoló rekord) azonosítója
                        documentId:
                          type: integer
                          description: a csatolt dokumentum azonosítója
                        documentType:
                          type: string
                          description: a dokumentum fájl típusa
                        documentName:
                          type: string
                          description: a domunetum rövid leírása (tárgya)
                        documentPath:
                          type: string
                          description: a domunetum url elérési útvonala
                        originalFileName:
                          type: string
                          description: a dokumentum feltöltéskori fájlneve
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/measurementAndAnalyse/saveNewAnalyse:
    post:
      summary: Új kiértékelés létrehozása
      description: Az aktuális doktor által kiválasztott mérésekre a kiértékelés elmentése amikor még nem létezett a kiértékelés.<br>Vagy az adott dokumentumhoz tartozó (konzultációs) kiértékelés elmentése.
      operationId: measurementAndAnalyseSaveNewAnalyse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
                measurements:
                  description: A művelet után az adott doktorhoz tartozó kijelölt mérések
                  type: array
                  items:
                    type: number
                    description: mérés egyedi azonosítója
                attachedDocuments:
                  description: A kiértékeléshez csatolt dokumentum azonosítók listája
                  type: array
                  items:
                    type: number
                    description: a kiértékeléshez csatolt dokumentum azonosítója
                isDocumentBased:
                  description: Csak dokumentum alapú a kiértékelés és ezért nincs mérés(ek)hez csatolva?
                  type: boolean
                preConsultationId:
                  description: Ha konzultációs kérés miatt keletkezett a kiértékelés, akkor az előzmény konzultáció azonosítója
                  type: number
              required:
                - subject
                - measurements
                  documents
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "MEASUREMENTS_PARAM_ABSENT": "Hiányzó mérés azonosító!"
          "DOCUMENTS_PARAM_ABSENT": "Hiányzó dokumentum azonosító(k)!"
  /webmodule/doctor/measurementAndAnalyse/saveNewGdoctorAnalyse:
    post:
      summary: Új meghatalmazotti kiértékelés létrehozása
      description: Az aktuális doktor által kiválasztott mérésekre a kiértékelés elmentése amikor még nem létezett a kiértékelés.<br>Vagy az adott dokumentumhoz tartozó (konzultációs) kiértékelés elmentése.
      operationId: measurementAndAnalyseSaveNewGdoctorAnalyse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
                measurements:
                  description: A művelet után az adott doktorhoz tartozó kijelölt mérések
                  type: array
                  items:
                    type: number
                    description: mérés egyedi azonosítója
                attachedDocuments:
                  description: A kiértékeléshez csatolt dokumentum azonosítók listája
                  type: array
                  items:
                    type: number
                    description: a kiértékeléshez csatolt dokumentum azonosítója
                isDocumentBased:
                  description: Csak dokumentum alapú a kiértékelés és ezért nincs mérés(ek)hez csatolva?
                  type: boolean
                preConsultationId:
                  description: Ha konzultációs kérés miatt keletkezett a kiértékelés, akkor az előzmény konzultáció azonosítója
                  type: number
              required:
                - subject
                - measurements
                  documents
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - DoctorWeb
      x-responses:
        "406":
          "MEASUREMENTS_PARAM_ABSENT": "Hiányzó mérés azonosító!"
          "DOCUMENTS_PARAM_ABSENT": "Hiányzó dokumentum azonosító(k)!"
  /webmodule/doctor/measurementAndAnalyse/{analyseId}:
    get:
      summary: Adott kiértékelés információinak lekérése
      description: A még szerkesztés alatt lévő kiértékelés adatainak lekérése.
      operationId: measurementAndAnalyseGetAnalyse
      parameters:
        - in: path
          name: analyseId
          description: A keresett Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
        - in: query
          name: doctorRole
          description: A lekérdező orvosi szerepkör (GROUP_DROLE_ANALYSER vagy GROUP_DROLE_GENERAL)
          schema:
            type: string
            default: "GROUP_DROLE_GENERAL"
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Analyse"
                  - properties:
                      attachment:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Attachment"
                            - $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "404":
          "NOT_PATIENT_ERROR": "Kezelőorvos csak a saját páciensének a kiértékelését kaphatja meg!"
          "NOT_FOUND_ANALYSE": "Ez a kiértékelés nem található!"
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/saveAnalyse:
    put:
      summary: Kiértékelés mentése
      description: A még szerkesztés alatt lévő kiértékelés adatainak elmentése (update-elése), amikor az orvos még nem határozza meg, hogy publikusság szempontjából hogy kell kezelni a kiértékelést.<br>Az input paraméterként kapott mérés azonosító lista pontos kitöltése kötelező!!! Mert az alapján a kiértékeléshez kapcsolódó mérés id-ket aktualizálja (az újakat felveszi, a hiányzókat pedig kitörli) a Kiértékelés-Mérés kapcsoló táblában!<br>Utolsó lépésként törli az aktuális doktorhoz tartozó kiválasztási listát is!
      operationId: measurementAndAnalyseSaveAnalyse
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
                measurements:
                  description: A művelet után az adott doktorhoz tartozó kijelölt mérések
                  type: array
                  items:
                    type: number
                    description: mérés egyedi azonosítója
                attachedDocuments:
                  description: A kiértékeléshez csatolt dokumentum azonosítók listája
                  type: array
                  items:
                    type: number
                    description: a kiértékeléshez csatolt dokumentum azonosítója
                isDocumentBased:
                  description: Csak dokumentum alapú a kiértékelés és ezért nincs mérés(ek)hez csatolva?
                  type: boolean
              required:
                - subject
                - measurements
                  documents
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "MEASUREMENTS_PARAM_ABSENT": "Hiányzó mérés azonosító(k)!"
        "409":
          "CONFLICT_ANALYSE_UPDATE": "Sikertelen a kiértékelés mentése!"
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/saveGdoctorAnalyse:
    put:
      summary: Meghatalmazotti kiértékelés mentése
      description: A meghatalmazott által még szerkesztés alatt lévő kiértékelés adatainak elmentése (update-elése), amikor az orvos még nem határozza meg, hogy publikusság szempontjából hogy kell kezelni a kiértékelést. <b>De a mérések státusza nem változik (tehát továbbra is kiértékelendő marad), hogy a meghatalmazott "ne tudja elvenni" a kiértékelő orvosok elől az adott mérést.</b><br>Az input paraméterként kapott mérés azonosító lista pontos kitöltése kötelező!!! Mert az alapján a kiértékeléshez kapcsolódó mérés id-ket aktualizálja (az újakat felveszi, a hiányzókat pedig kitörli) a Kiértékelés-Mérés kapcsoló táblában!<br>Utolsó lépésként törli az aktuális doktorhoz tartozó kiválasztási listát is!
      operationId: measurementAndAnalyseSaveGdoctorAnalyse
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  description: A kiértékelés rövid leírása (pl. Heti mérések elemzése)
                  type: string
                text:
                  description: A kiértékelés teljes leírása (ha az HTML szövegben van elkészítve)
                  type: string
                metaData:
                  description: A kiértékeléshez tartozó egyéb adatok (pl. a kiértékelésez tartozó diagram jelölő objektumainak a paraméterei)
                  type: string
                measurements:
                  description: A művelet után az adott doktorhoz tartozó kijelölt mérések
                  type: array
                  items:
                    type: number
                    description: mérés egyedi azonosítója
                attachedDocuments:
                  description: A kiértékeléshez csatolt dokumentum azonosítók listája
                  type: array
                  items:
                    type: number
                    description: a kiértékeléshez csatolt dokumentum azonosítója
                isDocumentBased:
                  description: Csak dokumentum alapú a kiértékelés és ezért nincs mérés(ek)hez csatolva?
                  type: boolean
              required:
                - subject
                - measurements
                  documents
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - DoctorWeb
      x-responses:
        "406":
          "MEASUREMENTS_PARAM_ABSENT": "Hiányzó mérés azonosító(k)!"
        "409":
          "CONFLICT_ANALYSE_UPDATE": "Sikertelen a kiértékelés mentése!"
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/cancelAnalyse:
    put:
      summary: Kiértékelés megszakítása
      description: Annak jelzése a kliens alkalmazás felől, hogy session timeout miatt (pl. mert az orvos otthagyta a gépét a kiértékelés készítése közben) megszűnt a kiértékelés szerkesztése és a rendszer visszalépett a kiértékelés lista oldalra.<br>Ilyenkor a még nem mentett kiértékelés szöveg és csatolmány állapot elveszik a kliens oldalon.<br>A szerver oldalon pedig 'el kell engedni' az érintett mérések szelektált állapotát.
      operationId: measurementAndAnalyseCancelAnalyse
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/setAlarmType:
    put:
      summary: Kiértékelés méréseinek riasztási szint állítása
      description: Az adott kiértékeléshez tartozó mérések riasztási szintjének beállítása.<br>Ez még nem jelenti a kiértékelés elmentését! (Azt a .../save... funkcióval kell elvégezni!)
      operationId: measurementAndAnalyseSetAlarm
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                #- $ref: "#/components/requestBodies/SetAlarmTypeReq"
                - properties:
                    alarmType:
                      type: string
                      description: A riasztási állapot kódja (pl. ALARM_NORMAL, ALARM_LOW, ALARM_HIGH, ALARM_URGENT)
                    comment:
                      type: string
                      description: A riasztási állapotot átállító rövid magyarázata, hogy miért kellett átállítani az értéket
                - properties:
                    measurements:
                      description: Melyik mérésekre történjen meg a beállítás
                      type: array
                      items:
                        type: number
                        description: mérés egyedi azonosítója
              required:
                - alarmType
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  count:
                    description: hány mérésnél lett átállítva a riasztási szint
                    type: integer
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "PARAMETER_ERROR": "Hiányzó riasztási szint!"
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/setPublic:
    put:
      summary: Kiértékelés Publikálás
      description: Az adott kiértékelés publikussá tétele. (Ha a kiértékelés véglegesítéséhez további kiértékelő vagy ellenőrző orvos kell, akkor ez csak javaslatnak számít a publikusság szempontjából.)<br>Utolsó lépésként törli az aktuális doktorhoz tartozó kiválasztási listát is!
      operationId: measurementAndAnalyseSetPublic
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/setGdoctorPublic:
    put:
      summary: Meghatalmazotti kiértékelés publikálás
      description: Az adott kiértékelés publikussá tétele. (Ha a kiértékelés véglegesítéséhez további kiértékelő vagy ellenőrző orvos kell, akkor ez csak javaslatnak számít a publikusság szempontjából.)<br>Utolsó lépésként törli az aktuális doktorhoz tartozó kiválasztási listát is!
      operationId: measurementAndAnalyseSetGdoctorPublic
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - DoctorWeb
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/setNonPublic:
    put:
      summary: Kiértékelés Nem kell publikálni
      description: Az adott kiértékelés NEM-publikussá tétele. (Ha a kiértékelés véglegesítéséhez további kiértékelő vagy ellenőrző orvos kell, akkor ez csak javaslatnak számít a publikusság szempontjából.)<br>Utolsó lépésként törli az aktuális doktorhoz tartozó kiválasztási listát is!
      operationId: measurementAndAnalyseSetNonPublic
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/measurementAndAnalyse/{analyseId}/setGdoctorNonPublic:
    put:
      summary: Meghatalmazotti kiértékelés Nem kell publikálni
      description: Az adott kiértékelés NEM-publikussá tétele. (Ha a kiértékelés véglegesítéséhez további kiértékelő vagy ellenőrző orvos kell, akkor ez csak javaslatnak számít a publikusság szempontjából.)<br>Utolsó lépésként törli az aktuális doktorhoz tartozó kiválasztási listát is!
      operationId: measurementAndAnalyseSetGdoctorNonPublic
      parameters:
        - in: path
          name: analyseId
          description: Az adott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analyse"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Doctor
        - GeneralDoctor
        - DoctorWeb
  /webmodule/doctor/measurementAndAnalyse/getMeasurementHistory/{measurementId}:
    get:
      summary: Mérés története
      description: "!!!Csak kompatibilitási okok miatt maradt meg, helyette a [GET:]/webmodule/measurements/{measurementId}/getMeasurementHistory használandó<br>Az adott kiértékelés története (mikor és milyen állapot változás történt vele kapcsolatban)."
      deprecated: true
      operationId: measurementAndAnalyseGetHistory
      parameters:
        - in: path
          name: measurementId
          description: Mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Mérés esemény lista
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/MeasurementEvent"
                    - type: object
                      properties:
                        preConsultationId:
                          description: Az előzménynek számító konzultáció azonosítója
                          type: number
                        preConsultationType:
                          description: Az előzménynek számító konzultáció azonosítója
                          type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - Web
      x-responses:
        "406":
          "MEASUREMENT_ID_ERROR": "Ez a mérés nem található!"
  /webmodule/doctor/measurementAndAnalyse/saveActivity:
    put:
      summary: Orvosi aktivitás jelzése
      description: Annak jelzése, hogy az aktuálisan bejelentkezett orvos az éppen kijelölt mérések kiértékelése során még aktív - hogy a szerver oldali automatizmus ne vegye vissza (a ListSelection táblában) a hozzá kijelölt méréseket.
      operationId: measurementAndAnalyseSaveActivity
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/doctor/measurements/{measurementId}:
    get:
      summary: Adott teljes mérés lekérése
      description: "!!!Csak kompatibilitási okok miatt maradt meg, helyette a [GET:]/webmodule/measurements/{measurementId} használata javasolt!<br>Az adott mérésre vonatkozó (összes) részletes adat lekérése. (Ez mérés típustól függően más-más mennyiségű tényleges mért adatot jelent.)<br>Ha több szeletben van tárolva a mérés, akkor a previewOnly=true esetén csak a legelső szelet, false esetén az összes szelet van a válaszban."
      deprecated: true
      operationId: getDoctorSelectedMeasurementDataWeb
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: previewOnly
          description: "A mérés szeletek közül csak a preview-hoz szükséges első menjen vissza a válaszba (alapértelmezésben: false, azaz mind visszamegy)"
          schema:
            type: boolean
            default: false
      responses:
        '200': # A teljes mérési adat, ha több szeletből áll, akkor az összes szelet sliceIdx szerinti sorrendben
          $ref: "#/components/responses/MeasurementDataListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
      x-responses:
        "406":
          #---
          "DATA_NOT_FOUND": "Nincs ilyen mérés, vagy törölt állapotú!"
  /webmodule/doctor/measurements/{measurementId}/getMeasurementAnalyses:
    get:
      summary: Méréshez tartozó kiértékelések lekérése
      description: "!!!Csak kompatibilitási okok miatt maradt meg, helyette a [GET:]/webmodule/measurements/{measurementId}/getMeasurementAnalyses használata javasolt!<br>Az adott méréshez tartozó kiértékelés(ek) adatainak lekérése, beleértve a csatolt dokumentumokat is."
      operationId: getDoctorMeasurementAnalysesWeb
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
  /webmodule/doctor/measurements/{measurementId}/sendErrorReport:
    post:
      summary: Orvosi hibabejelntés
      description: Orvosi üzenet küldése a rendszer üzemeltetőinek, pl. ekg görbe kalkulációival vagy automatikus kiértékeléssel kapcsolatos problémáról.
      operationId: doctorSendErrorReport
      parameters:
        - in: path
          name: measurementId
          description: A mérés azonosítója, amiről a bejelentés szól
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                comment:
                  description: A bejelentés szövege
                  type: string
                subtype:
                  description: A bejelentés témája (pl. ECG_PROBLEM)
                  type: string
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
  /webmodule/doctor/measurements/filters:
    get:
      summary: Mérési szűrők lekérése
      description: Az aktuálisan bejelentkezett orvos által utoljára használt (és a user metaData mezőjébe elmentett) mérési listára vonatkozó szűrők lekérdezése.
      operationId: getDoctorMeasurementFilterWeb
      responses:
        '200': # Az aktuálisan bejelentkezett orvos által utóljára használt mérési szűrők értéke (azaz melyik mérés típusok látszottak számára a listában)
          description: A mérési szűrők értékét tartalmazó json
          content:
            'application/json':
              schema:
                type: object
                properties:
                  measurementFilters:
                    type: object
                    description: A szűrő beállításokat tartalmazó json
                example:
                  measurementFilters:
                    measurementEcg: true
                    measurementBloodPressure: false
                    measurementWeight: false
                    measurementHeartRate: true
                    measurementGlucose: true
                    measurementTemperature: false
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
    post:
      summary: Mérési szűrők elmentése
      description: Az aktuálisan bejelentkezett orvos által használt mérési lista szűrési feltételek eltárolása (a user metaData mezőjébe).
      operationId: updateDoctorMeasurementFilterWeb
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Az aktuálisan bejelentkezett orvos által használt mérési szűrők állapotát tartalmazó json struktúra
              properties:
                measurementFilters:
                  type: object
              example:
                measurementFilters:
                  measurementEcg: true
                  measurementBloodPressure: false
                  measurementWeight: false
                  measurementHeartRate: true
                  measurementGlucose: true
                  measurementTemperature: false
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
      tags:
        - Doctor
        - Web
        - DoctorWeb
  /webmodule/attachDocuments/{patientId}/attachFileToPatient:
    post:
      summary: Fájl csatolása pácienshez
      description: Az adott pácienshez (kép vagy dokumentum) állomány csatolása.
      operationId: attachFileToPatient
      parameters:
        - in: path
          name: patientId
          description: A páciens egyedi azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        description: A csatolandó fájl és adatai
        content:
          'multipart/form-data':
            # Skip standard body parsing
            x-parser: stream
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: A csatolt fájlhoz elrakandó elnevezés, ami a listákban megjelenik róla
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '200': # OK, feltöltve
          description: feltöltve
          content:
            'application/json':
              schema:
                type: object
                properties:
                  path:
                    description: Az elmentett image fájl elérési útvonala
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/attachDocuments/{patientId}/attachHtmlBasedFileToPatient:
    post:
      summary: HTML alapú fájl csatolása pácienshez
      description: Az adott pácienshez HTML alapú, de PDF-é konvertálódó csatolmány (pl. OKFŐ anamnézis) készítése.
      operationId: attachHtmlBasedFileToPatient
      parameters:
        - in: path
          name: patientId
          description: A páciens egyedi azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: A dokumentum rövid leírása (pl. Anamnézis)
                  type: string
                text:
                  description: A dokumentum szövege (HTML formátumban, ami PDF-é konvertálódik)
                  type: string
                documentCathegory:
                  description: A dokumentum kategóriája (pl. ANAMNESIS), alapértelmezésben üres
                  type: string
                mustEesztUpload:
                  description: Ha értéke true, akkor a PDF-é konvertált dokumentum fájl fel fog töltődni az EESZT rendszerbe
                  type: boolean
              required:
                - text
      responses:
        '200': # OK, a csatolmány elkészült és PDF-é konvertálva elérhető
          description: OK, a csatolmány elkészült és PDF-é konvertálva elérhető
          content:
            'application/json':
              schema:
                type: object
                properties:
                  documentId:
                    description: A keletkezett dokumentum egyedi azonosítója
                    type: integer
                  attachmentId:
                    description: A keletkezett csatolmány egyedi azonosító
                    type: integer
                  path:
                    description: Az elmentett és PDF-é konvertált dokumentum fájl elérési útvonala
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
        - GeneralDoctor
  /webmodule/attachDocuments/{patientId}/getPatientAttachedFiles:
    get:
      summary: Pácienshez csatolt fájl lista lekérése
      description: "Az adott pácienshez csatolt (dokumentum vagy kép) állományok listájának lekérése.<br>Megjegyzés: ezek nem a kiértékelések, hanem a pácienshez csatolt (egyéb) állományok!<br>"
      operationId: getPatientFileList
      parameters:
        - in: path
          name: patientId
          description: A páciens egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A pácienshez csatolt dokumentumok listája
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Document"
                    - properties:
                        attachmentId:
                          type: integer
                          description: A csatolmány egyedi azonosítója
                        editable:
                          type: boolean
                          description: A lekérdező számára szekeszthető-e az adott csatolás
                        uploaderName:
                          type: string
                          description: A csatolmányt feltöltő személy neve
                        activeStarterConsultationCount:
                          description: az aktuális lekérdező az adott dokumentummal kapcsolatban hány olyan konzultációt kezdeményezett amit még nem tekintett meg a konzultációs partner
                          type: integer
                        viewedStarterConsultationCount:
                          description: az aktuális lekérdező az adott dokumentummal kapcsolatban hány olyan konzultációt kezdeményezett amit már megtekintett a konzultációs partner
                          type: integer
                        activeTargetConsultationCount:
                          description: az adott dokumentummal kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit még nem tekintett meg ez a lekérdező
                          type: integer
                        viewedTargetConsultationCount:
                          description: az adott dokumentummal kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit már megtekintett ez a lekérdező
                          type: integer


        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
      x-base-domain: Document
  /webmodule/attachDocuments/{patientId}/updateAttachedSubject/{attachmentId}:
    post:
      summary: Csatolt fájl tárgy megváltoztatása
      description: Az adott pácienshez csatolt állomány rövid leírásának megváltoztatása.
      operationId: attachedFileSubjectUpdate
      parameters:
        - in: path
          name: patientId
          description: A páciens egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: attachmentId
          description: A pácienshez rendelt csatolmány egyedi azonosítója
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: A csatolt fájlhoz tartozó új rövid leírás
      responses:
        '200': # OK
          description: A rövid elnevezés megváltoztatva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "DOCUMENT_NOT_FOUND": "Ez a dokumentum nem található!"
          "UPDATE_NOT_ALLOW": "A dokumentumot csak annak feltöltője módosíthatja!"
  /webmodule/attachDocuments/{patientId}/deleteAttachedFile/{attachmentId}:
    delete:
      summary: Csatolmány törlése
      description: Az adott pácienshez a csatolás megszüntetése, a tényleges csatolt fájl csak akkor törlődik, ha a feltöltő végzi a megszüntetést és nincs másik kiértékeléshez is csatolva.
      operationId: deleteAttachedFile
      parameters:
        - in: path
          name: patientId
          description: A páciens egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: attachmentId
          description: A pácienshez csatolt fájl egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
      x-responses:
        "406":
          "DELETE_NOT_ALLOW": "A dokumentumot csak annak feltöltője törölheti!"
          "DOCUMENT_ATTACHED_TO_OTHER": "Ez a dokumentum nem törölhető, mert máshova is csatolva van!"
  /webmodule/attachDocuments/{patientId}/deleteDocument/{documentId}:
    delete:
      summary: Dokumentum törlése
      description: Az adott (pácienshez csatolt) dokumentum fájl törlése, ha az aktuális ügyfél a feltöltő és nincs még vagy már csatolva (másik) kiértékeléshez.
      operationId: deleteDocument
      parameters:
        - in: path
          name: patientId
          description: A páciens egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: path
          name: documentId
          description: A (pácienshez csatolt) dokumentum fájl egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - Doctor
        - DoctorWeb
  /webmodule/measurements/getAnalysedMeasurementList:
    get:
      summary: Kiértékelt mérések - lista lekérése
      description: A kiértékelt mérési adatok listájának lekérése. A válasz előállításakor a szűrési feltételeknek megfelelő (veszélyesség, időszak, mérés típus, ügyfél stb.) adatok kerülnek leválogatásra a megadott sorrend szerint.<br>countOnly=true esetén csak a szűrésnek megfelelő rekordok darabszámát adja vissza.<br>A törölt mérések nem mennek vissza a válaszban.<br>Ha a doctorRole = 'GROUP_DROLE_GENERAL', akkor a doctorId-ba kell megadni az kezelőorvos (ill. meghatalmazott) ügyfél azonosítóját és ilyenkor csak azok a kiértékelt mérések mennek vissza a válazsban, amik később születtek, mint amikor az ügyfél által küldütt meghatalmazási meghívást elfogadta az adott meghatalmazott.
      operationId: getAnalysedMeasurementList
      parameters:
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab
          schema:
            type: string
        - in: query
          name: isActualName
          description: Ha nincs userId szerinti, de van userName szerinti szűrő feltétel, akkor false esetén csak a mérésben tárolt ügyfél név szerinti mérések legyenek a válaszban, vagy true esetén az ügyfél aktuális és régebbi nevein mentett mérések is
          schema:
            type: boolean
            default: true
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
        - in: query
          name: pageLength
          description: "Legfeljebb hány rekordot adjon vissza (alapértelmezésben: 20 rekord)"
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (pl. measurementDate, status, measurementType, measurementId, arrivalDate, hash, localTransferDate, alarmType, userName, momentaryName)
          schema:
            type: string
            default: "measurementDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: alarmType
          description: A riasztási szint (all, NO_ALARM, ALARM_LOW, ALARM_HIGH, ALARM_URGENT), ha több is kell akkor vesszőkkel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: summary
          description: A mérés összefoglaló információban szabad szöveges (like) keresés
          schema:
            type: string
        - in: query
          name: countOnly
          description: Ha az értéke true, akkor csak a szűrésnek megfelelő rekordok számát adja vissza
          schema:
            type: boolean
            default: false
        - in: query
          name: isArchive
          description: Ha az értéke false, akkor az aktív mérés adatok, egyébként az archív adatok
          schema:
            type: boolean
            default: false
        - in: query
          name: publicOnly
          description: Ha az értéke true, akkor csak a publikus kiértékelésekhez tartozó mérések, egyébként a nem publikusokhoz tartozók is
          schema:
            type: boolean
            default: false
        - in: query
          name: analyserName
          description: A kiértékelő orvos név részlete szerinti szűrés
          schema:
            type: string
        - in: query
          name: doctorRole
          description: Milyen szerepkörben történjen a lekérdezés (PATIENT - csak a saját adatai, GROUP_DROLE_GENERAL - kezelőorvosként a saját pácienseinek adatai, GROUP_DROLE_ANALYSER - minden páciens adatai)
          schema:
            type: string
            default: PATIENT
        - in: query
          name: isBrief
          description: Ha az értéke true, akkor csak a mérés Id-je és a lastUpdate mező értéke megy a válaszban, egyébként minden mező
          schema:
            type: boolean
            default: false
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalysedMeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "406":
          "STOREDPROC_ERROR": "ex.message"
          "ROLE_ERROR": "Nem egyértelmű, hogy az adott orvos melyik szerepkörében kérdez le!"
  /webmodule/measurements/{measurementId}:
    get:
      summary: Adott teljes mérés lekérése
      description: Az adott mérésre vonatkozó (összes) részletes adat lekérése. (Ez mérés típustól függően más-más mennyiségű tényleges mért adatot jelent.)<br>Ha több szeletben van tárolva a mérés, akkor a previewOnly=true esetén csak a legelső szelet, false esetén az összes szelet van a válaszban.
      operationId: getMeasurementDataWeb
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: previewOnly
          description: "A mérés szeletek közül csak a preview-hoz szükséges első menjen vissza a válaszba (alapértelmezésben: false, azaz mind visszamegy)"
          schema:
            type: boolean
      responses:
        '200': # A teljes mérési adat, ha több szeletből áll, akkor az összes szelet sliceIdx szerinti sorrendben
          $ref: "#/components/responses/MeasurementDataListResp2"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - PatientWeb
        - DoctorWeb
      x-responses:
        "406":
          "MEASUREMENT_NOT_FOUND": "Ez a mérés nem található!"
  /webmodule/measurements/{measurementId}/getMeasurementAnalyses:
    get:
      summary: Méréshez tartozó kiértékelések lekérése
      description: Az adott méréshez tartozó kiértékelés(ek) adatainak lekérése, beleértve a csatolt dokumentumokat is.
      operationId: getMeasurementAnalysesWeb
      parameters:
        - in: path
          name: measurementId
          description: A lekért mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - PatientWeb
        - DoctorWeb
      x-responses:
        "406":
          "MEASUREMENT_NOT_FOUND": "Ez a mérés nem található!"
  /webmodule/measurements/{measurementId}/getMeasurementHistory:
    get:
      summary: Mérés története
      description: Az adott kiértékelés története (mikor és milyen állapot változás történt vele kapcsolatban).
      operationId: getMeasurementHistoryWeb
      parameters:
        - in: path
          name: measurementId
          description: Mérés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Mérés esemény lista
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/MeasurementEvent"
                    - type: object
                      properties:
                        preConsultationId:
                          description: Az előzménynek számító konzultáció azonosítója
                          type: number
                        preConsultationType:
                          description: Az előzménynek számító konzultáció azonosítója
                          type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
  /webmodule/measurements/{measurementId}/getPreviousMeasurement:
    get:
      summary: Előző mérés adatainak lekérése
      description: Az adott mérés előtti (ugyanolyan mérés típusú és az adott ügyfélhez tartozó) mérés lekérése.
      operationId: getPreviouseMeasurement
      parameters:
        - in: path
          name: measurementId
          description: Melyik mérés előtti adatra van szükség
          required: true
          schema:
            type: integer
      responses:
        '200': # A teljes mérési adat, ha több szeletből áll, akkor az összes szelet sliceIdx szerinti sorrendben
          $ref: "#/components/responses/MeasurementDataListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "404":
          "NOT_FOUND": "AZ adott mérés nem létezik, vagy nincs joga lekérdezni!"
  /webmodule/analyses/getAnalyseList:
    get:
      summary: Kiértékelések - lista lekérése
      description: A kiértékelések listájának lekérése. A válasz előállításakor a szűrési feltételeknek megfelelő (veszélyesség, időszak, mérés típus, ügyfél stb.) adatok kerülnek leválogatásra a megadott sorrend szerint.<br>countOnly=true esetén csak a szűrésnek megfelelő rekordok darabszámát adja vissza
      operationId: getAnalyseListWeb
      parameters:
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab szerinti szűrő
          schema:
            type: string
        - in: query
          name: isActualName
          description: Ha nincs userId szerinti, de van userName szerinti szűrő feltétel, akkor false esetén csak a mérésben tárolt ügyfél név szerinti mérések legyenek a válaszban, vagy true esetén az ügyfél aktuális és régebbi nevein mentett mérések is
          schema:
            type: boolean
            default: true
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: "Legfeljebb hány rekord menjen a válaszban (alapértelmezésben: 20)"
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (pl. analyseId, status, analyzeDate, publishDate, alarmType, userName)
          schema:
            type: string
            default: "analyseId"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: countOnly
          description: Ha az értéke true, akkor csak a szűrésnek megfelelő rekordok számát adja vissza
          schema:
            type: boolean
            default: false
        - in: query
          name: readType
          description: Ügyfelek általi dokumentum olvasottság szerinti szűrő (all-minden, UNREAD-van olvasatlan, READ-mind elolvasott)
          schema:
            type: string
            default: all
        - in: query
          name: isArchive
          description: Ha az értéke false, akkor az aktív mérés adatok, egyébként az archív adatok
          schema:
            type: boolean
            default: false
        - in: query
          name: publicOnly
          description: Csak a GROUP_DROLE_ANALYSER esetében van értelme, mert ha az értéke true, akkor csak a publikus kiértékelések, egyébként (a nem publikusok és a szerkesztés alatt levők is) mind - a másik két szerepkör esetében ennek a paraméternek az értéke mindenképpen felülbírálódik true-ra, hogy csak a publikus kiértékelések látszódjanak
          schema:
            type: boolean
            default: false
        - in: query
          name: doctorId
          description: Ha meg van adva az orvos azonosítója, akkor csak az ő kiértékelései szerinti lesz a szűrés
          schema:
            type: number
        - in: query
          name: analyserName
          description: A kiértékelő orvos név részlete szerinti szűrés
          schema:
            type: string
        - in: query
          name: doctorRole
          description: Milyen szerepkörben történjen a lekérdezés (PATIENT - csak a saját adatai, GROUP_DROLE_GENERAL - kezelőorvosként a saját pácienseinek adatai, GROUP_DROLE_ANALYSER - minden páciens adatai)
          schema:
            type: string
            default: PATIENT
        - in: query
          name: measurementId
          description: Csak az adott mérés(ek)hez tartozó kiértékelések (ha több mérés, akkor vesszővel elválasztva)
          schema:
            type: string
        - in: query
          name: analyseType
          description: csak előfeldolgozott(0), elsődlegesen kiértékelt(1), másodlagosan kiértékelt(2), ha ezekből több fajta is, akkor a kód értékek vesszővel elválasztva
          schema:
            type: string
      responses:
        '200': # OK
          $ref: "#/components/responses/AnalyseListResp2"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "406":
          "STOREDPROC_ERROR": "ex.message"
  /webmodule/analyses/{analyseId}:
    get:
      summary: Adott kiértékelés részleteinek lekérése
      description: Páciens adott kiértékelésének részletes adatainak lekérése.
      operationId: analysesGetAnalyseDetail
      parameters:
        - in: path
          name: analyseId
          description: A keresett Analyse egyedi azonosítója
          required: true
          schema:
            type: integer
            format: integer
        - in: query
          name: doctorRole
          description: A lekérdező orvosi szerepkör (GROUP_DROLE_ANALYSER vagy GROUP_DROLE_GENERAL vagy GROUP_DOLE_PATIENT)
          schema:
            type: string
            default: "GROUP_DOLE_PATIENT"
      responses:
        '200': # OK
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Analyse"
                  - properties:
                      attachment:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Attachment"
                            - $ref: "#/components/schemas/Document"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Doctor
        - PatientWeb
  /webmodule/analyses/{analyseId}/getDocuments:
    get:
      summary: Kiértékelés dokumentum adatainak lekérése
      description: (Valamely kiértékelési listabeli elemhez tartozó) csatolt dokumentumok alap adatainak lekérdezése.
      operationId: getAnalyseDocumentsWeb
      parameters:
        - in: path
          name: analyseId
          description: a kiértékelés azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # succesfull operation
          $ref: "#/components/responses/AnalyseDocumentsResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "406":
          "ANALYSE_NOT_FOUND": "Ez a kiértékelés nem található!"
          "DATA_PERMISSION_ERROR": "A lekérdezőnek nincs joga az adott adathoz!"
  /webmodule/analyses/{analyseId}/getAnalyseMeasurements:
    get:
      summary: Milyen mérés(ek)re vonatkozik a kiértékelés
      description: Annak lekérdezése, hogy milyen mérési adatokra vonatkozik egy adott kiértékelés.
      operationId: getAnalyseMeasurementsWeb
      parameters:
        - in: path
          name: analyseId
          description: A kiválasztott kiértékelés egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          $ref: "#/components/responses/MeasurementListResp"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
  /webmodule/consultation/startConsultation:
    post:
      summary: Konzultáció kezdeményezése
      description: Az aktuális ügyfél (vagy orvos) konzultációt kér bizonyos dologgal (mérés, kiértékelés, dokumentum) kapcsolatban valamely orvostól (vagy meghatalmazottól).
      operationId: startConsultation
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                consultationType:
                  type: string
                  description: Ügyfél és orvos közötti konzultáció (DICT_CONSULT_PATIENT) vagy Orvosok közötti konzultáció (DICT_CONSULT_DOCTOR) vagy Háziorvosi szakkonzultáció (DICT_CONSULT_SPECIALISTDOCTOR) vagy Kiértékelői szakkonzultáció (DICT_CONSULT_SPECIALISTANALYZE).
                referenceType:
                  type: string
                  description: Mire vonatkozik a konzultációs kérés (MEASUREMENT - Mérésre, ANALYSE - kiértékelésre, DOCUMENT - Dokumentumra).
                referenceId:
                  type: integer
                  format: int32
                  description: Annak a rekordnak az azonosítója (pl. mérés azonosítója), amire a konzultációs kérés vonatkozik.
                subject:
                  type: string
                  description: Annak a rövid leírása, hogy miért kéri a konzultációt a kezdeményező fél.
                targetUserId:
                  type: integer
                  description: A konzultációs kérés címzett ügyfél (doktor) azonosítója.
              required:
                - consultationType
                - referenceType
                - referenceId
                - targetUserId
            examples:
              ügyfél-orvos konzultáció kezdeményezése az 1277-es mérésre:
                value:
                  consultationType: 'DICT_CONSULT_PATIENT'
                  referenceType: 'MEASUREMENT'
                  referencId: 1277
                  subject: 'Az a mérés, amikor rosszul voltam, kérem vizsgálja meg'
                  targetUserId: 34
              orvos-orvos konzultáció kezdeményezése a 30105-ös kiértékelésre:
                value:
                  consultationType: 'DICT_CONSULT_DOCTOR'
                  referenceType: 'MEASUREMENT'
                  referencId: 30105
                  subject: 'Kérlek ellenőrizd az általam felállított diagnózist'
                  targetUserId: 35
              háziorvos-szakkonzulens konzultáció kezdeményezése a 30105-ös kiértékelésre:
                value:
                  consultationType: 'DICT_CONSULT_SPECIALISTDOCTOR'
                  referenceType: 'MEASUREMENT'
                  referencId: 30105
                  subject: 'Kérlek segíts értelmezni a mérési eredményeket'
                  targetUserId: 35
              kiértékelő-szakkonzulens konzultáció kezdeményezése a 30105-ös kiértékelésre:
                value:
                  consultationType: 'DICT_CONSULT_SPECIALISTANALYZE'
                  referenceType: 'MEASUREMENT'
                  referencId: 30105
                  subject: 'Kérlek segíts a mérési kiértékelésében'
                  targetUserId: 35
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Consultation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "406":
          "TARGET_USERID_ERROR": "Önmagával nem konzultálhat az ügyfél!"
          "REFERENCE_ERROR": "errmsg"
          "CONSULTATION_TYPE_ERROR": "Nem megfelelő a konzultációs típus!"
          "TARGET_ERROR": "A konzultációs partnernek nincs orvosi vagy meghatalmazotti szerepköre!"
          "CONSULTATION_ABSENT_YET": "Ebben a témában már van folyamatban konzultáció ezzel a partnerrel!"
          "CONSULTATION_TARGET_ERROR": "A konzoltációs partner azonosítója alapján ilyen partner nem található!"
          "TOO_MUCH_CONSULTATION": "Ezzel a partnerrel már túl sok konzultáció van folyamatban!"
          "GDOCTOR_ERROR": "Ennek a páciensnek nincs meghatalmazása az adott ügyféllel!"
  /webmodule/consultation/getConsultationsByRefId:
    post:
      summary: RefId-hez tartozó konzultációk lekérése
      description: Adott referencia azonosítója alapján a vele kapcsolatos konzultációk adatainak lekérése.
      operationId: getConsultationsByRefId
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                referenceType:
                  type: string
                  description: Mire vonatkozik a konzultációs kérés (Mérésre, kiértékelésre, Dokumentumra).
                referenceId:
                  type: integer
                  format: int32
                  description: Annak a rekordnak az azonosítója (pl. mérés azonosítója), amire a konzultációs kérés vonatkozik.
              required:
                - referenceType
                - referenceId
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Consultation"
                    - properties:
                        starterUserName:
                          type: string
                          description: A konzultációt kezdeményező személy neve
                        targetUserName:
                          type: string
                          description: A konzultációra felkért személy neve
                        comment:
                          type: string
                          description: A meghatalmazó megjegyzése a konzultációra felkért személlyel kapcsolatban
                        referenceInformation:
                          description: A referencia elem plusz infója (pl. MEASUREMENT esetében a mérés típusa)
                          type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "404":
          "NOT_FOUND_CONSULTATION": "Ez a konzultáció nem található!"
  /webmodule/consultation/{consultationId}:
    get:
      summary: Adott konzultáció lekérdezése
      description: Az adott konzultációra vonatkozó adatok (kezdeményező, tárgya, stb.) lekérdezése.
      operationId: getConsultation
      parameters:
        - in: path
          name: consultationId
          description: konzultáció egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                allOf:
                  - $ref: "#/components/schemas/Consultation"
                  - properties:
                      starterName:
                        description: a konzultációt kezdeményező felhasználó neve
                        type: string
                      targetName:
                        description: a konzultációs partner neve
                        type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "406":
          "CONSULTATION_ERROR": "Nincs ilyen adat, vagy nincs joga megtekinteni!"
    delete:
      summary: Konzultációs kérés visszavonása
      description: Az adott konzultációs kérés visszavonása.
      operationId: revokeConsultation
      parameters:
        - in: path
          name: consultationId
          description: konzultáció egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
        - Auth
  /webmodule/consultation/{consultationId}/setConsultationItemViewDate:
    post:
      summary: Konzultált elem megnézve
      description: Egy konzultáció alatt lévő elemre vonatkozóan annak beállítása, hogy mikor történt meg a kérdéses elem megtekintése.
      operationId: setConsultationItemViewDate
      parameters:
        - in: path
          name: consultationId
          description: konzultáció egyedi azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  viewDate:
                    type: string
                    format: date-time
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
      x-responses:
        "406":
          "CONSULTATION_ERROR": "Nincs ilyen adat, vagy nincs joga módosítani!"
  /webmodule/consultation/getMyConsultationList:
    get:
      summary: Konzultációim lekérése
      description: Az adott ügyfél folyamatban lévő konzultációinak lekérése (de a válasz a szakkonzultációkat nem tartalmazza)
      operationId: getMyConsultationList
      parameters:
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (startDate, refrenceType, targetUserName)
          schema:
            type: string
            default: "startDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: doctorId
          description: Alapértelmezésben üres, de ha meg van adva egy meghatalmazott user (kezelő orvos) azonosítója, akkor csak a vele kezdeményezett konzultációk mennek vissza a válaszban
          schema:
            type: integer
        - in: query
          name: consultationType
          description: Melyik konzultációs típusok menjenek vissza a válaszban (DICT_CONSULT_PATIENT, DICT_CONSULT_DOCTOR, DICT_CONSULT_OKFODOCTOR, DICT_CONSULT_SPECIALISTDOCTOR, DICT_CONSULT_SPECIALISTANALYZE), ha több ajta is, akkor vesszővel elválasztva
          schema:
            type: string
            default: "ALL"
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Consultation"
                        - properties:
                            starterUserName:
                              description: A konzultációt kezdeményező ügyfél neve
                              type: string
                            targetUserName:
                              description: A konzultációra felkért meghatalmazott (kezelőorvos vag Okfő szakorvos) neve
                              type: string
                            targetUserComment:
                              description: A meghatalmazáskor adott megjegyzés (pl. a háziorvosom)
                              type: string
                            referenceInformation:
                              description: A konzultáció alapját képező mérés, kiértékelés, dokumentum pontosító szövege
                              type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - GeneralDoctor
        - Web
        - PatientWeb
        - Auth
  /webmodule/setItemViewDate:
    post:
      summary: Adott elem megnézve
      description: Adott elemre (kiértékelés, mérés) vonatkozóan annak beállítása a konzultációkban ill. kiértékelés esetén a kiértesítésekben is, hogy mikor történt meg a kérdéses elem megtekintése.
      operationId: setItemViewDate
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                referenceType:
                  type: string
                  description: Milyen típusú adatra vonatkozik a dátum állítás (ANALYSE - Kiértékelésre, MEASUREMENT - Mérésre).
                referenceId:
                  type: integer
                  format: int32
                  description: Annak a rekordnak az azonosítója (pl. kiértékelés azonosítója), amire konzultáció(k)ban ill. a kiértesítés(ek)ben a megtekintés dátum állítás vonatkozzon.
              required:
                - referenceType
                - referenceId
            examples:
              az 1277-es méréshez tartozó (konzultációs viewDate) beállítás:
                value:
                  referenceType: 'MEASUREMENT'
                  referencId: 1277
              a 30105-ös kiértékeléshez tartozó (konzultációs és kiértesítés viewDate) beállítás:
                value:
                  referenceType: 'ANALYSE'
                  referencId: 30105
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  viewDate:
                    type: string
                    format: date-time
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
            - user
      tags:
        - Doctor
        - DoctorWeb
        - PatientWeb
  /eeszt/eesztLogin:
    post:
      summary: EESZT Bejelentkezés
      description: Az aktuális (orvos) ügyféllel EESZT bejelentkezés megkezdése, amikor az egyszer használatos jelszó megadásával (mobil token) megtörténik a tényleges bejentkezés, hogy a központi adatbázisból egészségügyi információkat lehessen lekérni.<br>Mivel aszinkron funkcióként hajtódik végre a külső rendszerben, ezért a válaszban visszaadott externalCommandId-t (ami valójában egy session azonosító) kell felhasználni annak lekérdezésére, hogy ténylegesen sikerült-e az EESZT rendszerben a SAML jegyet megszerezni az adott user-re.<br>
      operationId: eesztLogin
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                eesztOtp:
                  type: string
                  description: Az orvos mobiltelefonján futó EESZT mobiltoken app által adott egyszer használatos jelszó
              required:
                - eesztOtp
      responses:
        '200':
          description: Bejelentkeztetés megkezdődött
          content:
            'application/json':
              schema:
                type: object
                properties:
                  loggedIn:
                    type: boolean
                    description: Az értéke true, ha már be van jelentkezve és az EESZT SAML token még érvényes
                  externalCommandId:
                    type: integer
                    description: A (külső parancshoz tartozó SAML) session azonosító
                  commandStatus:
                    type: string
                    description: A (külső EESZT) login parancs állapota (pl. NEW, PROCESSING, OK, ERROR)
                  commandResult:
                    type: string
                    description: A (külső EESZT) login parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása)
                  commandValidityDate:
                    type: string
                    format: date-time
                    description: A (külső EESZT) login parancs érvényességi ideje
                  tokenValidityDate:
                    type: string
                    format: date-time
                    description: A (külső EESZT SAML session) login token érvényességi ideje
        '401': # Hibás bejelentkezés
          $ref: "#/components/responses/Error401"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
      x-responses:
        "409":
          #---
          "ERROR_INACTIVE_USER": "Az adott ügyfél nem aktív állapotú!"
        "401":
          #---
          "LOGIN_ERROR": "Sikertelen bejelentkezés!"
      x-base-domain: User
  /eeszt/eesztIsLoggedIn:
    get:
      summary: EESZT-be be van-e jelentkezve
      description: Az aktuális ügyfél a paraméterbeli session-ben (már) be van-e jelentkezve az EESZT rendszerbe
      operationId: eesztIsLoggedIn
      parameters:
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  loggedIn:
                    type: boolean
                    description: Az értéke true, ha már be van jelentkezve és az EESZT SAML token még érvényes
                  externalCommandId:
                    type: integer
                    description: A (külső parancshoz tartozó SAML) session azonosító
                  commandStatus:
                    type: string
                    description: A (külső EESZT) login parancs állapota (pl. NEW, PROCESSING, OK, ERROR)
                  commandResult:
                    type: string
                    description: A (külső EESZT) login parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása)
                  commandValidityDate:
                    type: string
                    format: date-time
                    description: A (külső EESZT) login parancs érvényességi ideje
                  tokenValidityDate:
                    type: string
                    format: date-time
                    description: A (külső EESZT SAML session) login token érvényességi ideje
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/eesztLogout:
    post:
      summary: EESZT Kijelentkezés
      description: Az aktuális (orvos) ügyféllel kijelentkezés az EESZT rendszerből.
      operationId: eesztLogout
      parameters:
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
      responses:
        '200': # OK
          description: OK
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
      x-base-domain: User
  /eeszt/bindingEesztUsers:
    post:
      summary: EESZT páciensek inicializálása
      description: Minden az utóbbi időben létrejött új ACTIVE páciensre, akiknél az eesztBindingDate még nincs kitöltve, egy inicializáló telemetria lelet felküldése az EESZT rendszerbe, hogy utána az orvosok már lekérdezhessenek ezekre a páciensekre.<br>
      operationId: eesztBindingUsers
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                eesztUserName:
                  type: string
                  description: Annak az orvosnak vagy assisztensnek az EESZT azonosítója, akinek a nevében történik a páciensek felrögzítése
                eesztOtp:
                  type: string
                  description: Az orvos mobil eszközére kapott EESZT egyszer használatos jelszó
              required:
                - eesztUserName
                - eesztOtp
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  successCount:
                    type: integer
                    description: Sikeresen inicializált páciensek száma
                  errorCount:
                    type: integer
                    description: Sikertelen páciens inicializálások száma
        '401': # Hibás bejelentkezés
          $ref: "#/components/responses/Error401"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - EESZT
        - Doctor
        - Admin
        - OfficeManager
      x-responses:
        "409":
          #---
          "ERROR_INACTIVE_USER": "Az adott ügyfél nem aktív állapotú!"
        "401":
          #---
          "LOGIN_ERROR": "Sikertelen bejelentkezés!"
      x-base-domain: User
  /eeszt/getCovidStatus:
    get:
      summary: EESZT Covid státusz lekérése
      description: Az adott páciens Covid státuszának lekérése az EESZT rendszerből.
      operationId: eesztGetCovidStatus
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: patientId
          description: Annak a páciensnek a PrivátDoktor beli azonosítója, akire a lekérdezés vonatkozik
          required: true
          schema:
            type: integer
        - in: query
          name: fromDate
          description: Milyen dátumtól
          schema:
            type: string
        - in: query
          name: toDate
          description: Milyen dátumig
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  data:
                    type: object
                    description: Az EESZT-től kapott Covid státusz adatok
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getDocumentList:
    get:
      summary: EESZT dokumentum lista lekérése
      description: Az adott páciens dokumentum listájának lekérése az EESZT rendszerből.
      operationId: eesztGetDocumentList
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: patientId
          description: Annak a páciensnek a PrivátDoktor beli azonosítója, akire a lekérdezés vonatkozik
          required: true
          schema:
            type: integer
        - in: query
          name: fromDate
          description: Milyen dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: toDate
          description: Milyen dátumig
          required: true
          schema:
            type: string
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: countOnly
          description: Csak a válasz tételek darab számára vonatkozik a lekérdezés
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  count:
                    type: number
                    description: Hány tétel van a lekérdezés válaszában (max. hány tétel kerül a data tag-be, ha a pageStart paraméter értéke 0 és a pageLength paraméter sincy megadva)
                  data:
                    type: array
                    description: Az EESZT-től kapott Dokumentum lista adatok
                    items:
                      type: object
                      properties:
                        documentGuid:
                          type: string
                          description: Dokumentum EESZT azonosító
                        documentVersion:
                          type: integer
                          description: Dokumentum verziójának száma (azaz hányszor módosították)
                        hospital:
                          type: string
                          description: Az egészségügyi intézmény neve
                        department:
                          type: string
                          description: Osztály, részleg
                        doctorName:
                          type: string
                          description: A dokumentum létrehozója
                        createDate:
                          type: string
                          description: A létrehozás időpontja
                        documentType:
                          type: string
                          description: A documentum típusa (szöveges formában)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getCovidDocumentList:
    get:
      summary: EESZT Covid dokumentum lista lekérése
      description: Az adott páciens Covid dokumentum listájának lekérése az EESZT rendszerből.
      operationId: eesztGetCovidDocumentList
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: patientId
          description: Annak a páciensnek a PrivátDoktor beli azonosítója, akire a lekérdezés vonatkozik
          required: true
          schema:
            type: integer
        - in: query
          name: fromDate
          description: Milyen dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: toDate
          description: Milyen dátumig
          required: true
          schema:
            type: string
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: countOnly
          description: Csak a válasz tételek darab számára vonatkozik a lekérdezés
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  count:
                    type: number
                    description: Hány tétel van a lekérdezés válaszában (max. hány tétel kerül a data tag-be, ha a pageStart paraméter értéke 0 és a pageLength paraméter sincy megadva)
                  data:
                    type: array
                    description: Az EESZT-től kapott Dokumentum lista adatok
                    items:
                      type: object
                      properties:
                        documentGuid:
                          type: string
                          description: Dokumentum EESZT azonosító
                        documentVersion:
                          type: integer
                          description: Dokumentum verziójának száma (azaz hányszor módosították)
                        hospital:
                          type: string
                          description: Az egészségügyi intézmény neve
                        department:
                          type: string
                          description: Osztály, részleg
                        doctorName:
                          type: string
                          description: A dokumentum létrehozója
                        createDate:
                          type: string
                          description: A létrehozás időpontja
                        documentType:
                          type: string
                          description: A documentum típusa (szöveges formában)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getDocument:
    get:
      summary: EESZT dokumentum lekérése
      description: Az adott EESZT dokumentum adatainak lekérése az EESZT rendszerből.
      operationId: eesztGetDocument
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: eesztDocumentGuid
          description: Annak az EESZT dokumentumnak a Guid azonosítója, amire a lekérdezés vonatkozik
          required: true
          schema:
            type: string
        - in: query
          name: eesztDocumentVersion
          description: Annak az EESZT dokumentumnak a verzió száma, amire a lekérdezés vonatkozik (ha nincs megadva, akkor értéke 1)
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  data:
                    type: object
                    description: Az EESZT-től kapott Dokumentum adatai
                    properties:
                      documentUrl:
                        type: string
                        description: Az EESZT-től letöltött (PDF) dokumentum elérési útvonala, amikor a kliens programok a megjelenítés miatt le akarják kérni
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getEprofil:
    get:
      summary: EESZT eProfil lekérése
      description: Az adott páciens eProfil adatainak lekérése az EESZT rendszerből.
      operationId: eesztGetEprofil
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: patientId
          description: Annak a páciensnek a PrivátDoktor beli azonosítója, akire a lekérdezés vonatkozik
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a comandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  data:
                    type: object
                    description: Az EESZT-től kapott eProfil adatai
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getReceiptList:
    get:
      summary: EESZT recept lista lekérése
      description: Az adott páciens recept listájának lekérése az EESZT rendszerből.
      operationId: eesztGetReceiptList
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: patientId
          description: Annak a páciensnek a PrivátDoktor beli azonosítója, akire a lekérdezés vonatkozik
          required: true
          schema:
            type: integer
        - in: query
          name: isActive
          description: Értéke true, ha aktív és False ha kiváltott receptekre vonatkozik a lekérdezés
          required: true
          schema:
            type: boolean
            default: true
        - in: query
          name: fromDate
          description: Milyen dátumtól
          required: true
          schema:
            type: string
        - in: query
          name: toDate
          description: Milyen dátumig
          required: true
          schema:
            type: string
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: countOnly
          description: Csak a válasz tételek darab számára vonatkozik a lekérdezés
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  count:
                    type: number
                    description: Hány tétel van a lekérdezés válaszában (max. hány tétel kerül a data tag-be, ha a pageStart paraméter értéke 0 és a pageLength paraméter sincy megadva)
                  data:
                    type: array
                    description: Az EESZT-től kapott recept lista adatok
                    items:
                      type: object
                      properties:
                        receptGuid:
                          type: string
                          description: Recept EESZT azonosító
                        subject:
                          type: string
                          description: A gyógyszer leírása
                        otherId:
                          type: string
                          description: Valami másik azonosító
                        count:
                          type: integer
                          description: Darabszám
                        units:
                          type: string
                          description: Mennyiségi egység
                        doctorName:
                          type: string
                          description: Felíró orvos neve
                        createDate:
                          type: string
                          description: A létrehozás időpontja
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getReceipt:
    get:
      summary: EESZT recept lekérése
      description: Az adott EESZTrecept adatainak lekérése az EESZT rendszerből.
      operationId: eesztGetReceipt
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: receiptId
          description: Annak az EESZT receptnek az azonosítója, amire a lekérdezés vonatkozik
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  data:
                    type: object
                    description: Az EESZT-től kapott recept adatai
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getReferralList:
    get:
      summary: EESZT beutaló lista lekérése
      description: Az adott páciens beutaló listájának lekérése az EESZT rendszerből.
      operationId: eesztGetReferralList
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: patientId
          description: Annak a páciensnek a PrivátDoktor beli azonosítója, akire a lekérdezés vonatkozik
          required: true
          schema:
            type: integer
        - in: query
          name: referralStatus
          description: Milyen státuszú beutalókat adjon vissza a lekérdezés (Létrehozva - 1, Időpont foglalva - 2, ...  stb. ha nincs megadva, akkor az Összeset)
          schema:
            type: integer
        - in: query
          name: fromDate
          description: Milyen dátumtól
          schema:
            type: string
        - in: query
          name: toDate
          description: Milyen dátumig
          schema:
            type: string
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben: 0)"
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: "Legfeljebb hány adatot adjon vissza (alapértelmezésben: 20)"
          schema:
            type: integer
            default: 20
        - in: query
          name: countOnly
          description: Csak a válasz tételek darab számára vonatkozik a lekérdezés
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  count:
                    type: number
                    description: Hány tétel van a lekérdezés válaszában (max. hány tétel kerül a data tag-be, ha a pageStart paraméter értéke 0 és a pageLength paraméter sincy megadva
                  data:
                    type: array
                    description: Az EESZT-től kapott beutaló lista adatok
                    items:
                      type: object
                      properties:
                        referralHospital:
                          type: string
                          description: Beutaló intézmény
                        doctorName:
                          type: string
                          description: Beutaló orvos neve
                        supplierHospital:
                          type: string
                          description: Ellátó intézmény
                        referralDate:
                          type: string
                          description: Felírás dátuma
                        validityDate:
                          type: string
                          description: Érvényesség dátuma
                        referralStatus:
                          type: string
                          description: Beutaló állapota
                        referralGuid:
                          type: string
                          description: A beutaló EESZT egyedi azonosítója
                        operations:
                          type: string
                          description: Műveletek
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getReferral:
    get:
      summary: EESZT beutaló lekérése
      description: Az adott EESZT beutaló adatainak lekérése az EESZT rendszerből.
      operationId: eesztGetReferral
      parameters:
        - in: query
          name: transactionId
          description: Ha meg van adva ez a paraméter és értéke nem nulla, akkor nem új parancs keletkezik, hanem egy már elkezdett, de feldolgozás alatt lévő külső lekérdező parancs válaszának megérkezését ellenőrzi a rendszer (és a többi paraméter értéke figyelmen kívül marad)
          schema:
            type: integer
        - in: query
          name: externalCommandId
          description: Az eesztLogin válaszában visszakapott (SAML session) azonosító
          required: true
          schema:
            type: integer
        - in: query
          name: referralId
          description: Annak az EESZT beutalónak az azonosítója, amire a lekérdezés vonatkozik
          required: true
          schema:
            type: string
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transactionId:
                    type: integer
                    description: A lekérdező tranzakció azonosítója, amit a válasz státusz ellenőrzésekor és a válasz elkérésekor használni kell
                  commandStatus:
                    type: string
                    description: A lekérdezés feldolgozási állapota (PROCESSING - feldolgozás folyamatban és a data tag még üres lesz, OK - válasz megérkezett és a data tag-ben található, ERROR - hiba a tranzakcióban és a hiba pontosítása a commandResult tag-ben található)
                  commandResult:
                    type: string
                    description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása ER- kezdettel)
                  data:
                    type: object
                    description: Az EESZT-től kapott beutaló adatai
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/getEesztReportList:
    get:
      summary: EESZT riport lista lekérése
      description: Az EESZT riport lista (azaz a folyamatban lévő EKAT és dokumentum felküldési tranzakciók állapotának) lekérdezése
      operationId: eesztGetReportList
      parameters:
        - in: query
          name: patientId
          description: Melyik páciensre vonatkozó tételek kellenek, alapértelmezésben üres, azaz minden páciens tételei
          schema:
            type: integer
        - in: query
          name: doctorId
          description: Melyik orvosra vonatkozó tételek kellenek, alapértelmezésben üres, azaz minden páciens tételei
          schema:
            type: integer
        - in: query
          name: reportStatus
          description: "Milyen státuszú tételek szerepeljenek (pl. SENDING), ha több is, akkor vesszővel elválasztva. Alapértelmezésben az értéke: NEW,SENDING,SENDED (de csak az aktuális napon beküldöttek!)"
          schema:
            type: string
        - in: query
          name: fromDate
          description: Milyen dátumtól
          schema:
            type: string
        - in: query
          name: toDate
          description: Milyen dátumig
          schema:
            type: string
        - in: query
          name: pageStart
          description: "Hányadik rekordtól kezdve adja az adatokat (alapértelmezésben:0)"
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: "Legfeljebb hány adatot adjon vissza (alapértelmezésben: 20)"
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (createDate, userName, doctorName)
          schema:
            type: string
            default: "createDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "asc"
        - in: query
          name: countOnly
          description: Csak a válasz tételek darab számára vonatkozik a lekérdezés
          schema:
            type: boolean
            default: false
        - in: query
          name: transType
          description: A külső tranzakció típusa (all, EESZT_EKAT, EESZT_DOC, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: Ha countOnly=true volt az input paraméter, akkor ebben a válasz mezőben megy vissza a szűrési feltételnek megfelelő rekordok száma, egyébként ez a mező nem megy a válaszban
                  data:
                    type: array
                    description: Az Eeszt riport tételek listája
                    items:
                      type: object
                      properties:
                        eesztReportId:
                          type: integer
                          description: Az Eeszt riport tétel azonosítója
                        userName:
                          type: string
                          description: Annak a páciensnek a neve, akire vonatkozik az adott tétel
                        userStatus:
                          type: string
                          description: Annak a páciensnek a regiztráció szerinti státusza (pl. DICT_USER_REGWAIT, DICT_USER_ACTIVE, DICT_USER_UNREGISTER), akire vonatkozik az adott tétel (EESZT EKAT-ot csak DICT_USER_ACTIVE páciensre fog elküldeni a rendszer!)
                        doctorName:
                          type: string
                          description: Annak az orvosnak a neve, aki az adott tételt feladta az EESZT rendszer felé
                        eesztOrganization:
                          type: string
                          description: Annak a szervezeti egységnek az EESZT azonosítója, akinek a nevében a tétel feladásra került az EESZT rendszer felé
                        extTransType:
                          type: string
                          description: Az adott tétel felküldési tranzakciójának typusa (pl. EESZT_EKAT vagy EESZT_DOC)
                        reportStatus:
                          type: string
                          description: Az adott tétel aktuális állapota (pl. NEW vagy SENDING vagy SENDED)
                        commandResult:
                          type: string
                          description: Az adott tételhez tartozó külső parancs válaszában kapott eredmény (hiba) szöveg
                        createDate:
                          type: string
                          description: Az adott tétel létrehozás időpontja
                        modifyDate:
                          type: string
                          description: Az adott tétel utolsó módosulásának időpontja (pl. státusz változás miatt)
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
  /eeszt/sendOrCheckEesztReportItem:
    post:
      summary: EESZT riport elem beküldése
      description: A megadott EESZT riport elem vagy elemek beküldése (vagy a beküldési folyamat állapotának aktalizálása)
      operationId: eesztSendOrCheckReportItem
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                eesztReportId:
                  type: string
                  description: (String-ként!!!) Az adott azonosítójú riport elem beküldése vagy státusz aktualizálása történik meg. (Ha több elem is, akkor vesszővel elválasztva kell megadni őket.)
              required:
                - eesztReportId
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  sentCnt:
                    type: integer
                    description: a műveletek során az EESZT rendszer felé elküldött tételek száma
                  statusCnt:
                    type: integer
                    description: a műveletek során az EESZT rendszer felé beolvasott státusz információk száma
                  resetCnt:
                    type: integer
                    description: a műveletek során az EESZT rendszer felé ismételt elküldésre beállított tételek száma
                  errorCnt:
                    type: integer
                    description: a műveletek során keletkezett hibás tételek száma
                  eesztReportItem:
                    $ref: "#/components/schemas/EesztReport"
                  commandResult:
                    type: string
                    description: Az adott tételhez tartozó külső parancs válaszában kapott eredmény (hiba) szöveg
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - doctor
            - gdoctor
      tags:
        - EESZT
        - Doctor
        - DoctorWeb
      x-responses:
        "409":
          #---
          "ERROR_INACTIVE_USER": "Az adott ügyfél nem aktív állapotú!"
        "401":
          #---
          "LOGIN_ERROR": "Sikertelen bejelentkezés!"
      x-base-domain: User
  /okfo/adminRegisterGdoctorImport:
    post:
      summary: Háziorvos regisztrációs import
      description: Új háziorvosi regisztráció beimportálása a rendszerbe (és a kötelező jelszó csere beállítása).<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott címre és csak akkor tud majd bejelentkezni a háziorvos a rendszerbe, ha arra a linkre rákattintott.<br>Külön ellenőrzi a rendszer az email+TAJ szám alapján, hogy a rendszerben már létező ügyfélről van-e szó, mert akkor csak a háziorvosságra vonatkozó plusz tevékenységeket végzi el.
      operationId: adminOkfoRegisterGDoctorImport
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              allOf:
                #- $ref: "#/components/requestBodies/DoctorRegistrationReq"
                - properties:
                    firstName:
                      type: string
                      description: Az ügyfél keresztneve
                    lastName:
                      type: string
                      description: Az ügyfél családi neve
                    email:
                      type: string
                      description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
                    language:
                      type: string
                      description: Nyelv (hu, en, ch, ...)
                    phoneNumber:
                      type: string
                      description: Max. 18, csak szám.
                    postalCode:
                      type: string
                    city:
                      type: string
                      description: Min. 1, max. 30 karakter.
                    address:
                      type: string
                      description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 30 karakter.<br>
                    socialSecurityNumber:
                      type: string
                      description: A társadalombiztosítási azonosító (TAJ szám)
                    birthYear:
                      type: integer
                      format: int32
                      description: A személy természetes azonosítói közül a születési dátumból az év
                    birthPlace:
                      type: string
                      description: Születési hely
                    motherName:
                      type: string
                    gender:
                      type: string
                    password:
                      type: string
                      description: A felhasználó jelszava
                    acceptTermIds:
                      description: A felhasználó által elfogadott szabályzatok azonosítói
                      type: array
                      items:
                        type: integer
                    instituteName:
                      type: string
                      description: Az orvos egészségügyi intézményének neve
                    instituteAddress:
                      type: string
                      description: Az orvos egészségügyi intézményének címe
                    stamp:
                      type: string
                      description: Az orvos EESZT-beli pecsétszáma (Oxxxxx-ből az xxxxx-es rész)
                    eesztOrganization:
                      type: string
                      description: Annak az intézménynek az EESZT szervezet azonosítója (Exxxxx-ből az xxxxx-es rész), akinek a nevében az orvos feltölti az adatokat
                - properties:
                    groupCode:
                      type: string
                      description: "Melyik csoportba tartozzon az új háziorvos (pl: GROUP_OKFO_DOCTOR), ha nincs megadva ilyen, akkor GROUP_DROLE_GENERAL lesz az értéke"
              required:
                - firstName
                - lastName
                - email
                - stamp
            examples:
              minta minimum:
                value:
                  groupCode: "GROUP_OKFO_DOCTOR"
                  email: "okfodoctor@mail.hu"
                  lastName: "Doktor"
                  firstName: "OKFŐ"
                  stamp: "55551"
              minta teljesebb:
                value:
                  groupCode: "GROUP_OKFO_DOCTOR"
                  email: "okfodoctor@mail.hu"
                  lastName: "Doktor"
                  firstName: "OKFŐ"
                  stamp: "55551"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
      responses:
        '200': # OK, felhasználó sikeresen regisztrálva
          $ref: "#/components/schemas/User"
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - admin
      tags:
        - Auth
        - Admin
      x-responses:
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "Az adatok változtatása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /okfo/checkInviteUserRegistration:
    post:
      summary: Meghívandó Ügyfél ellenőrzése
      description: Annak ellenőrzése, hogy ha az OKFŐ Háziorvos általi meghívással fog bekerülni egy új ügyfél, akkor a felvétele (előregisztrációja) sikeres lesz-e a rendszerbe.
      operationId: checkOkfoInviteRegisterUser
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
            examples:
              TAJszám minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  socialSecurityNumber: "111222111"
              Útlevél minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  identityType: "PASSPORT"
                  identityNumber: "BX 123456"
      responses:
        '200': # ilyen adatokkal már létező user
          $ref: "#/components/schemas/User"
        '409': # Sikertelen lesz az előregisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Auth
        - Web
      x-responses:
        "409":
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen lesz, már van ilyen email cím a rendszerben!"
          "SOCIALNUMBER_EXISTS_YET": "A user regisztrálása sikertelen lesz, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /okfo/inviteUserRegistration:
    post:
      summary: Meghívott Ügyfél előregisztráció kezdeményezése
      description: OKFŐ Háziorvos általi meghívás miatti új ügyfél felvétele (előregisztrációja) a rendszerbe (és a kötelező jelszó csere beállítása nála).<br>Egyedi visszaigazoló link-et tartalmazó mail-t küld a rendszer a megadott páciens címére és csak akkor tud majd bejelentkezni a felhasználó a rendszerbe, ha arra a linkre rákattintott.
      operationId: inviteOkfoRegisterUser
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/InviteUserRegistrationReq"
              type: object
              allOf:
                - $ref: "#/components/schemas/User"
                - properties:
                    password:
                      type: string
                      description: A felhasználó jelszava
                    acceptTermIds:
                      description: A felhasználó által elfogadott szabályzatok
                      type: array
                      items:
                        type: integer
                    groupCode:
                      description: Melyik csoportba kerüljön bele az ügyfél (pl. GROUP_OKFO_PATIENT)
                      type: string
              required:
                - firstName
                - lastName
                - email
                - language
                - postalCode
                - city
                - address
                - birthYear
                - birthMonth
                - birthDay
                - birthPlace
                - motherName
                - gender
                - password
                - acceptTermIds
                - groupCode
            examples:
              minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  acceptTermIds: [1,2]
      responses:
        '200': # OK, felhasználó sikeresen regisztrálva
          $ref: "#/components/schemas/User"
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - gdoctor
      tags:
        - Auth
        - Web
      x-responses:
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /okfo/unregisterInvitedUser/{patientId}:
    delete:
      summary: Meghívott páciens előregisztrációjának megszüntetése
      description: Az OKFŐ háziorvos által meghívott adott felhasználó regisztrált állapotának megszüntetése, abban az esetben, ha még regisztrációra vár (REGWAIT) állapotban van az adott felhasználó.<br><b>!Csak hibás felhasználói előrögzítés korrigálására használanadó!</b>
      operationId: unregisterOkfoInvitedUser
      parameters:
        - in: path
          name: patientId
          description: A deregisztrálandó páciens egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A deregisztrálás sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "409":
          #---
          "USER_NOT_FOUND": "Az adott ügyfél nem található a rendszerben!"
          "DEPERSONALIZATION_CONFLICT": "A felhasználó deregisztrálása sikertelen!"
      x-base-domain: User
  /okfo/changeEesztUploadable/{patientId}:
    post:
      summary: Páciens Eeszt feltöltendőség változtatása
      description: Annak az ügyfél beállításnak a megváltoztatása, ami meghatározza, hogy az adott orvos viszonylatában fel kell-e tölteni a páciens adatait az Eeszt rendszerbe
      operationId: changeOkfoPatientEesztUploadable
      parameters:
        - in: path
          name: patientId
          description: Melyik páciensnél kell megváltoztatni az eesztUploadable mezőjét
          required: true
          schema:
            type: number
        - in: query
          name: newValue
          description: Milyen értékre kell beállítani a user eesztUploadable mezőt
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/User"
                  - properties:
                      eesztUploadable:
                        type: boolean
                        description: Annak az ügyfél beállításnak az értéke, ami meghatározza, hogy az adott orvos viszonylatában fel kell-e tölteni a páciens adatait az Eeszt rendszerbe
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /okfo/getOkfoConsultationInstitutes:
    get:
      summary: OKFŐ szakkonzultációs intézmények lista lekérése
      description: Az OKFŐ (szak)konzultációkra kijelölt intézmények listájának lekérése
      operationId: getOkfoConsultationInstituteList
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Dictionary"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "USER_NOT_PATIENT": "Ez a páciens nem adott meghatalmazást az aktuális ügyfélnek!"
  /okfo/startOkfoConsultation:
    post:
      summary: OKFŐ szakkonzultáció kezdeményezése
      description: Az aktuális meghatalmazott (háziorvos) az ügyfél méréséhez kapcsolódó konzultációt kér az adott Okfő által erre szerződött valamelyik intézménytől, melyről mail-t küld a rendszer az intézménynek. Ezt követően fogja az adott intézmény kijelölni azt a szakorvosát, aki ezt a mérést ki fogja értékelni de ehhez előbb a mail másolatát küldik el neki. (A mail-ben lévő linkre kattintva van lehetősége bejelentkezni a rendszerbe.)
      operationId: startOkfoConsultation
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                referenceId:
                  type: integer
                  format: int32
                  description: Annak a rekordnak az azonosítója (pl. mérés azonosítója), amire a konzultációs kérés vonatkozik.
                subject:
                  type: string
                  description: Annak a rövid leírása, hogy miért kéri a konzultációt a kezdeményező fél.
                instituteMail:
                  type: string
                  description: A konzultációs kérés címzett intézmény mail címe, amin keresztül majd egy megfelelő szakorvosnak lesz kijelölve a feladat.
              required:
                - referenceId
                - instituteMail
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Consultation"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "TARGET_USERID_ERROR": "Önmagával nem konzultálhat az ügyfél!"
          "CONSULTATION_ABSENT_YET": "Ebben a témában már van folyamatban konzultáció ezzel a partnerrel!"
          "CONSULTATION_TARGET_ERROR": "A konzoltációs partner azonosítója alapján ilyen partner nem található!"
          "TOO_MUCH_CONSULTATION": "Ezzel a partnerrel már túl sok konzultáció van folyamatban!"
          "GDOCTOR_ERROR": "Ennek a páciensnek nincs meghatalmazása az adott ügyféllel!"
  /okfo/okfoPassDevice:
    put:
      summary: OKFŐ Eszköz átadása
      description: Az adott eszköz átadása a bevont páciensnek. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!<br>Meghatalmazott (háziorvosként) csak azt az eszközt adhatja át, amiért ő a felelős!
      operationId: okfoPassDevice
      parameters:
        - in: query
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name:  userId
          description: Az új felelős (és ha megvásárolt eszköz, az új tulajdonos) User egyedi azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
        - in: query
          name: passType
          description: Milyen módon történt az eszköz átadása (pl. POSTED vagy HANDOVER)
          schema:
            type: string
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /okfo/okfoRepassDevice:
    put:
      summary: OKFŐ Eszköz visszavétele
      description: Az adott eszköz visszavétele a bevont pácienstől. Ilyenkor az eszköz felelőse megváltozik, de a tulajdonos ugyanaz marad, aki előtte volt.<br>Az adott eszközre vonatkozó felhasználói kapcsolatok törlésre kerülnek, hogy az új felelősnek ne lehessen semmilyen fennhatósága az előző felelős csatolt ismerőseinek adatai felett!
      operationId: okfoRepassDevice
      parameters:
        - in: query
          name: deviceId
          description: Annak ez eszköznek az azonosítója, aminek a felelősét megváltoztatjuk
          required: true
          schema:
            type: integer
        - in: query
          name: usage
          description: Mi lesz az eszköz utóélete a vissazvételt követően (pl. PASS - tényleges visszaadás, RENT - páciens tovább bérli, PURCHASE - páciens kifizeti és tovább használja, SCRAP - elvileg visszaadja, de selejtesen pl. összetört vagy ellopták)
          required: true
          schema:
            type: string
            enum: [PASS,RENT,PURCHASE,SCRAP]
        - in: query
          name:  changePayer
          description: Ha értéke true, akkor az adott eszközre vonatkozó fizetési kötelezettségek is át lesznek állítva az új felelős ügyfélre (ez az alapértelmezés)
          schema:
            type: boolean
        - in: query
          name: duration
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
          schema:
            type: integer
        - in: query
          name: paymentDeadline
          description: Fizetési határidő, alapértelmezésben 8 nap
          schema:
            type: integer
        - in: query
          name: paymentInterval
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Device"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
      x-responses:
        "406":
          "USER_NOT_FOUND": "A megadott felelős user azonosítója nem megfelelő!"
  /okfo/closeInvitedUser/{patientId}:
    post:
      summary: Bevont páciens pilot lezárása
      description: Az adott páciens pilot projektbeli részvételének lezárása
      operationId: closeOkfoInvitedPatient
      parameters:
        - in: path
          name: patientId
          description: Melyik páciensnél kell lezárni az OKFŐ projektet
          required: true
          schema:
            type: number
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                okfoEndComment:
                  type: string
                  description: A pilot projekt záráskor az orvos megjegyzése az adott pácienssel kapcsolatban
                okfoEndRating:
                  type: string
                  description: A pilot projekt zérésaor az orvos projekt értékelése (pl. Sikeres - SUCCESSfull, Sikertelen - FAILED)
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/User"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /okfo/calcAdherence:
    post:
      summary: Adherencia kiszámolása
      description: Az adott páciens adott eszközére vonatkozó adherencia (mérés megfelelőség) kiszámítása
      operationId: okfoCalcAdherence
      parameters:
        - in: query
          name: patientId
          description: Melyik OKFŐ páciensre vonatkozik az adherencia számítás
          required: true
          schema:
            type: number
        - in: query
          name: deviceId
          description: Melyik eszközre vonatkozik az adherencia számítás (valójában az eszköz által készíthető mérés típus, pl. PulseOxygen, BloodPressure, BloodGlucose, lesz a lekérdezés alapja)
          required: true
          schema:
            type: number
        - in: query
          name: forceCalc
          description: Ha értéke true, akkor mindenképpen megtörténik az adherencia számítás és le is tárolódik a most kiszámított információ
          schema:
            type: boolean
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                description: A mérés típus(ok)hoz tartozó adherencia állapot(ok) listában (ha csak egyetlen típusra vonatkozott a számítás, akkor is tömbben érkezik vissza a válasz!)
                type: array
                items:
                  type: object
                  properties:
                    patientId:
                      type: integer
                      description: A mérés(eke)t végző páciens azonosítója
                    measurementType:
                      type: string
                      description: A mérés típusa (pl. PulseOxygen), amire az adherencia adat vonatkozik
                    version:
                      type: string
                      description: Milyen adherencia számítási algoritmus verzióval történt a kalkuláció
                    resultCode:
                      type: string
                      description: Az adott mérés típusra kiszámított adherencia állapot (pl. ADHER_SUCCESS - teljesen megfelelő az adherencia)
                    partialRestCount:
                      type: integer
                      description: Ha a resultCode == ADHER_PARTIAL_SUCCESS, akkor még hány napnyi sikeres mérés hiányzik a teljes sikeres adherenciához
                    calculationDate:
                      type: string
                      format: data-time
                      description: Az adherencia számítás elvégzésének időpontja
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - gdoctor
      tags:
        - GeneralDoctor
        - Web
  /team/admin:
    get:
      summary: Team lista lekérdezése
      description: Az összes team definíció listájának lekérése a vezérlők közül
      operationId: adminGetTeamList
      parameters:
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  properties:
                    teamId:
                      type: number
                      description: A team vezérlő rekord egyedi azonosítója (valójában egy dictionaryId)
                    teamCode:
                      type: string
                      description: A team (rövid) egyedi azonosítója (mindenképpen TEAM_xxx formátumú, pl. TEAM_HOKIKLUB_18EVESEK)
                    teamName:
                      type: string
                      description: A team teljes megnevezése
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - sysadmin
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Dictionary
    post:
      summary: Team létrehozása
      description: Új (csoportos mérési) team létrehozásaés elrakása a vezérlők közé
      operationId: adminAddTeam
      requestBody:
        description: Az új Dictionary adatai
        content:
          'application/json':
            schema:
              type: object
              properties:
                teamCode:
                  type: string
                  description: A team (rövid) egyedi azonosítója (mindenképpen TEAM_xxx formátumú, pl. TEAM_HOKIKLUB_18EVESEK)
                teamName:
                  type: string
                  description: A team teljes megnevezése
                autoAnalyseDisabled:
                  type: boolean
                  default: false
                  description: Ha az értéke true, akkor a team mérései a feltöltéskor nem értékelődhetnek ki automatikusan
              required:
                - teamCode
                - teamName
        required: true
      responses:
        '200': # A létrehozás sikeresen megtörtént
          description: A létrehozás sikeresen megtörtént
          content:
            'application/json':
              schema:
                type: object
                properties:
                  teamId:
                    type: number
                    description: A team vezérlő rekord egyedi azonosítója (valójában egy dictionaryId)
                  teamCode:
                    type: string
                    description: A team (rövid) egyedi azonosítója (mindenképpen TEAM_xxx formátumú, pl. TEAM_HOKIKLUB_18EVESEK)
                  teamName:
                    type: string
                    description: A team teljes megnevezése
                  autoAnalyseDisabled:
                    type: boolean
                    description: Ha az értéke true, akkor a team mérései a feltöltéskor nem értékelődhetnek ki automatikusan
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - sysadmin
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-create"
      x-base-domain: Dictionary
  /team/admin/{teamId}:
    get:
      summary: Team adatainak lekérdezése
      description: Team adatainak elővétele a vezérlők közül
      operationId: adminGetTeamById
      parameters:
        - in: path
          name: teamId
          description: A keresett team egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  teamId:
                    type: number
                    description: A team vezérlő rekord egyedi azonosítója (valójában egy dictionaryId)
                  teamCode:
                    type: string
                    description: A team (rövid) egyedi azonosítója (mindenképpen TEAM_xxx formátumú, pl. TEAM_HOKIKLUB_18EVESEK)
                  teamName:
                    type: string
                    description: A team teljes megnevezése
                  autoAnalyseDisabled:
                    type: boolean
                    description: Ha az értéke true, akkor a team mérései a feltöltéskor nem értékelődhetnek ki automatikusan
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - sysadmin
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-findById"
      x-base-domain: Dictionary
    post:
      summary: Team adatainak módosítása
      description: Team adatainak módosítása a vezérlőkben
      operationId: adminUpdateTeam
      parameters:
        - in: path
          name:  teamId
          description: A módosítandó team egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                teamCode:
                  type: string
                  description: A team (rövid) egyedi azonosítója (mindenképpen TEAM_xxx formátumú, pl. TEAM_HOKIKLUB_18EVESEK)
                teamName:
                  type: string
                  description: A team teljes megnevezése
                autoAnalyseDisabled:
                  type: boolean
                  default: false
                  description: Ha az értéke true, akkor a team mérései a feltöltéskor nem értékelődhetnek ki automatikusan
        description: A módosítandó adatok
      responses:
        '200': # OK
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  teamId:
                    type: number
                    description: A team vezérlő rekord egyedi azonosítója (valójában egy dictionaryId)
                  teamCode:
                    type: string
                    description: A team (rövid) egyedi azonosítója (mindenképpen TEAM_xxx formátumú, pl. TEAM_HOKIKLUB_18EVESEK)
                  teamName:
                    type: string
                    description: A team teljes megnevezése
                  autoAnalyseDisabled:
                    type: boolean
                    description: Ha az értéke true, akkor a team mérései a feltöltéskor nem értékelődhetnek ki automatikusan
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - sysadmin
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-replaceById"
      x-base-domain: Dictionary
    delete:
      summary: Team törlése
      description: Team adatainak törlése
      operationId: adminDeleteTeam
      parameters:
        - in: path
          name: teamId
          description: A törlendő team egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - sysadmin
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-delete"
      x-base-domain: Dictionary
  /team/registerAsTeamVisitor:
    post:
      summary: Felhasználó csoportlátogatóként regisztrálása
      description: Egy már regisztrált felhasználó hozzáadása valamely teamhez mint csoportlátogató.
      operationId: adminRegisterAsTeamVisitor
      parameters:
        - in: query
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name:  teamCode
          description: A team (csoport) azonosítója
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Megjegyzés az adott user-team szerepkör kapcsolathoz
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Team
        - Admin
        - OfficeManager
      x-base-domain: UserGroup
  /team/unregisterAsTeamVisitor:
    delete:
      summary: Felhasználó törlése a csoportlátogatók közül
      description: Az adott ügyfél törlése valamely team csoportlátogatói közül.
      operationId: adminUnregisterAsTeamVisitor
      parameters:
        - in: query
          name:  userId
          description: A felhasználó egyedi azonosítója
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name:  teamCode
          description: A team (csoport) azonosítója
          required: true
          schema:
            type: string
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
      tags:
        - Team
        - Admin
        - OfficeManager
      x-base-domain: UserGroup
  /team/checkInviteTeamUserRegister:
    post:
      summary: Team-be meghívandó Ügyfél ellenőrzése
      description: Annak ellenőrzése, hogy ha a csoportba (team-be) meghívással fog bekerülni az új ügyfél, akkor a felvétele (előregisztrációja) sikeres lesz-e a rendszerbe.
      operationId: checkInviteTeamUserRegister
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
                teamCode:
                  description: Melyik csoportba kerüljön bele az ügyfél (pl. TEAM_ORG01_SUBORG02)
                  type: string
            examples:
              TAJszám minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  socialSecurityNumber: "111222111"
                  teamCode: "TEAM_ORG01_SUBORG02"
              Útlevél minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  identityType: "PASSPORT"
                  identityNumber: "BX 123456"
                  teamCode: "TEAM_ORG01_SUBORG02"
      responses:
        '200': # ilyen adatokkal már létező user
          $ref: "#/components/schemas/User"
        '409': # Sikertelen lesz az előregisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-responses:
        "409":
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen lesz, már van ilyen email cím a rendszerben!"
          "SOCIALNUMBER_EXISTS_YET": "A user regisztrálása sikertelen lesz, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /team/inviteTeamUserRegister:
    post:
      summary: Team-be meghívott Ügyfél előregisztráció kezdeményezése
      description: Csoportba (team-be) meghívás miatti új ügyfél felvétele (előregisztrációja) a rendszerbe (és a kötelező jelszó csere, valamint a csoportba tartozás beállítása nála). Ha a csoporton belüli szerepkör nincs megadva, akkor alapértelmezésben csak egyszerű csoporttag lesz, egyébként a megfelelő szintű vezető.<br>Az előregisztrációról és a csoportba sorolásról mail-t küld a rendszer a megadott páciens címére.
      operationId: inviteTeamUserRegister
      requestBody:
        content:
          'application/json':
            schema:
              #$ref: "#/components/requestBodies/InviteTeamUserRegistrationReq"
              type: object
              allOf:
                - $ref: "#/components/schemas/User"
                - properties:
                    password:
                      type: string
                      description: A felhasználó jelszava
                    acceptTermIds:
                      description: A felhasználó által elfogadott szabályzatok
                      type: array
                      items:
                        type: integer
                    teamCode:
                      description: Melyik team-be (csoportba) kerüljön bele az ügyfél (pl. GROUP_OKFO_PATIENT)
                      type: string
                    teamRole:
                      description: A team-en belül milyen szerepkörbe (BOSS, LEADER, MEMBER) kerüljön a felhasználó. Ha nincs kitöltve, akkor egyszerű csoport tag lesz.
                      type: string
                    qrOnly:
                      description: Ha értéke true, akkor nem lesz létrehozva a felhasználó, hanem csak a kapott adatok alapján a páciens QR kódját generálja le a rendszer. Alapértelmezésben az értéke false, azaz a páciens létrehozás is megtörténik.
                      type: boolean
                    comment:
                      type: string
                      description: Megjegyzés az adott user-team szerepkör kapcsolathoz
              required:
                - firstName
                - lastName
                - email
                - language
                - postalCode
                - city
                - address
                - birthYear
                - birthMonth
                - birthDay
                - birthPlace
                - motherName
                - gender
                - password
                - acceptTermIds
                - teamCode
            examples:
              minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  password: "password123"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthMonth: 4
                  birthDay: 15
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  gender: "DICT_FEMALE"
                  phoneNumber: "06201112233"
                  postalCode: "1110"
                  city: "Budapest"
                  address: "Kő u. 1."
                  socialSecurityNumber: "111222111"
                  language: "hu"
                  teamCode: "TEAM_ORG01_SUBORG02"
                  teamRole: "LEADER"
      responses:
        '200': # OK, felhasználó sikeresen regisztrálva és/vagy a páciens QR kód generálás sikeres
          description: OK, felhasználó és/vagy páciens QR kód létrehozva
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/User"
                  - properties:
                      userQR:
                        description: Az adott felhasználói adatok alapján képzett QR kód base64 formátumban
                        type: string
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-responses:
        "409":
          #---
          "PASSWORD_ERROR": "Nem megfelelő jelszó!"
          "USER_EXISTS_YET": "A user regisztrálása sikertelen!"
          "EMAIL_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen email cím a rendszerben!"
          "BAD_USER_DATA": "A user regisztrálása sikertelen!"
          "SOCIALNUMBER_EXISTS_YET": "A user regisztrálása sikertelen, már van ilyen aktív TAJ szám a rendszerben!"
      x-base-domain: User
  /team/findOrInviteUserByUserQR:
    post:
      summary: Team-be meghívott Ügyfél előregisztráció kezdeményezése QR alapján
      description: Ha a QR paraméterben megadott adatokkal létezik már felhasználó, akkor a team-be bevonása egyszerű csoport tagként, ha még nem volt a team tagja. Ha user még nem létezett a rendszerben, akkor új ügyfélként előregisztráció, automatikus aktiválás és a team-be tartozás beállítása a rendszerben.<br>Csak TEAM_MEMBER szerepkörben lehet így meghívni ügyfelet!<br>Az előregisztrációról és a csoportba sorolásról mail-t küld a rendszer a megadott páciens címére.
      operationId: findOrInviteUserByUserQR
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                userQR:
                  description: Az adott felhasználói adatok alapján képzett, a QR szkennerrel beolvasott string
                  type: string
                teamCode:
                  description: Melyik team-be (csoportba) kerüljön bele az ügyfél (pl. TEAM_ORG01_UBORG02), ha nincs megadva, akkor a kérést kezdeményező team vezető csoportjába. Azonbankötelező megadni, a meghívó személy több team-be is tartozik!
                  type: string
              required:
                - userQR
      responses:
        '200':
          description: OK, felhasználó sikeresen regisztrálva és az adott team-be bevonva
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/User"
                  - properties:
                      userQR:
                        description: Az adott felhasználói adatok alapján képzett QR kód base64 formátumban
                        type: string
                      deviceMismatch:
                        description: Ha a mérés vezetőnek nincs a felelősségi körében megfelelő mérőeszköz, akkor az értéke true
                        type: boolean
                      teamCodeMismatch:
                        description: Ha a QR kódban kapott és a megadott teamCode nem azonos, akkor az értéke true, hogy jelezni lehessen a bevonó személynek, hogy nem megfelelő szervezet nevében végzi a páciens bevonását
                        type: boolean
        '409': # Sikertelen regisztráció
          $ref: "#/components/responses/Error409"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-base-domain: User
  /team/createTeamUserQR:
    post:
      summary: Ügyfél QR kód generálása
      description: Az ügyfél adatok alapján páciens QR kód létrehozása
      operationId: createTeamUserQR
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: Az ügyfél keresztneve
                lastName:
                  type: string
                  description: Az ügyfél családi neve
                email:
                  type: string
                  description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
                socialSecurityNumber:
                  type: string
                  description: A társadalombiztosítási azonosító (TAJ szám)
                identityType:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
                identityNumber:
                  type: string
                  description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
                birthYear:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az év
                birthMonth:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból az hónap
                birthDay:
                  type: integer
                  format: int32
                  description: A személy természetes azonosítói közül a születési dátumból a nap
                birthPlace:
                  type: string
                  description: Születési hely
                motherName:
                  type: string
                  description: Anyja neve
                teamCode:
                  type: string
                  description: Ha meg van adva, akkor a QR kód beolvasásával kezdeményezett csoportba meghíváskor az adott team-be kerül a felhasználó (pl. TEAM_HOKIKLUB_18EVESEK) - egyébkéntmajd a meghívó személy alapértelmezett team-jébe
            examples:
              TAJszámos minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthMonth: 4
                  birthDay: 15
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  socialSecurityNumber: "111222111"
                  identityType: "SOCIALSECNUM"
              Útlevélszámos minta:
                value:
                  email: "teszt.eszter@mail.hu"
                  lastName: "Teszt"
                  firstName: "Eszter"
                  birthYear: 1990
                  birthMonth: 4
                  birthDay: 15
                  birthPlace: "Budapest"
                  motherName: "Kovács Aranka"
                  identityType: "PASSPORT"
                  identityNumber: "BX 111222"
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  userQR:
                    description: Az adott felhasználói adatok alapján képzett QR kód base64 formátumban
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-base-domain: User
  /team/getTeamUserQR:
    get:
      summary: Team ügyfél QR kódjának lekérése
      description: A megadott felhasználó adataiból képzett páciens QR kód lekérése.<br>Az admin és officer szerepkör esetén bármely felhasználó QR kódja lekérhető, egyébként csak a lekérdező team-jébe (csoportjába) tartozó, de team hierarchiában nála alacsonyabb szerpkörű felhasználóé.
      operationId: getTeamUserQR
      parameters:
        - in: query
          name: userId
          description: A lekérdezett felhasználó azonosítója (ha nincs megadva, akkor az aktuális felhasználóra magára vonatkozik a kérés)
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  userQR:
                    description: Az adott felhasználói adatok alapján képzett QR kód base64 formátumban
                    type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: User
  /team/findUserByQR:
    post:
      summary: Felhasználó lekérése QR alapján
      description: Felhasználó adatainak és team adatainak lekérése páciens QR kód alapján.<br>Az admin és officer szerepkörben bármely felhasználó lekérdezhető, egyéb esetben csak a lekérdező team-jébe (csoportjába) tartozó, a lekérdezőnél alacsonyabb team hierarchia szerepkörű felhasználó.
      operationId: findUserByQR
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                userQR:
                  description: Az adott felhasználói adatok alapján képzett, a QR szkennerrel beolvasott string
                  type: string
              required:
                - userQR
      responses:
        '200': # OK, az adott felhasználó adatai
          description: Az adott felhasználó adatai
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/User"
                  - properties:
                      teamGroups:
                        description: "Melyik team-ekbe tartozik bele a QR által meghatározott ügyfél"
                        type: array
                        items:
                          type: object
                          properties:
                            teamCode:
                              description: a team kódja
                              type: string
                            teamName:
                              description: a team megnevezése
                              type: string
                            teamRole:
                              description: a team-en belüli szerepkör
                              type: string
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-create"
      x-base-domain: UserGroup
  /team/addUserToTeam:
    post:
      summary: Felhasználó team-hez adása
      description: Egy felhasználó hozzáadása a hozzáadást végző csoportjához (team-jéhez) valamely szerepkörben.
      operationId: addUserToTeam
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                userId:
                  description: A team-be kerülő felhasználó azonosítója
                  type: integer
                teamCode:
                  description: Melyik team-be kerüljön be a felhasználó - ha nincs megadva, akkor a hívó team-jébe kerül (viszont ha a hívó több team-be is tartozik, vagy officer, vagy admin, akkor kötelező megadni értéket)
                  type: string
                teamRole:
                  description: "Az új felhasználó team-en belüli szerepköre - ha nincs megadva, akkor egyszerű tag (azaz MEMBER) lesz. Az érték legfeljebb a hívó team-en belüli szerepkörével azonos vagy annál alacsonybb lehet. (Lehetséges értékei: MEMBER, LEADER, BOSS, TEAMVISITOR)"
                  type: string
                comment:
                  type: string
                  description: Megjegyzés az adott user-team szerepkör kapcsolathoz
              required:
                - userId
      responses:
        '200': # OK, létrehozva
          description: Létrehozva
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserGroup"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-create"
      x-base-domain: UserGroup
  /team/deleteUserFromTeam:
    delete:
      summary: Felhasználói team-hez rendelés törlése
      description: Az adott felhasználó csoporthoz (team-hez) rendelésének kitörlése. (Legfeljebb a hívó szintjével azonos vagy az alatti szerepkörben lévő felhasználó team-ből kitörlését lehet elvégezni!)
      operationId: deleteUserFromTeam
      parameters:
        - in: query
          name: userId
          description: A team-ből törlendő felhasználó azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: teamCode
          description: Melyik team-ből törlődjön a felhasználó - ha nincs megadva, akkor a hívó team-jéből (viszont ha a hívó több team-be is tartozik, vagy officer, vagy admin, akkor kötelező megadni értéket)
          schema:
            type: string
      responses:
        '204': # OK
          description: A törlés sikeresen végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-delete"
      x-base-domain: UserGroup
  /team/getMyTeams:
    get:
      summary: A lekérdező melyik team-ekbe tartozik
      description: Az aktuálisan bejelentkezett felhasználó mely csoport(ok)ba (team-ekbe) tartozik és milyen szerepkörrel.
      operationId: getMyTeams
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    teamCode:
                      type: string
                      description: A csoport (team) kódja
                    teamName:
                      type: string
                      description: A csoport (team) elnevezése
                    teamRole:
                      type: string
                      description: A csoporton belüli szerepkör
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
      tags:
        - Team
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: User
  /team/getTeamUserList:
    get:
      summary: Team tagok listájának lekérése
      description: A megadott team-be (csoportba) tartozó tagok listájának lekérése.
      operationId: getTeamUserList
      parameters:
        - in: query
          name: teamCode
          description: Milyen team-hez tartozó adatok kerüljenek a leválogatásba (pl. TEAM_ORG01_SUBORG02. Ha nem admin vagy officer, akkor itt csak olyan team azonosítója szerepelhet, amelyikbe benne van a lekérdező személy!
          required: true
          schema:
            type: string
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: leaderOnly
          description: Csak team vezetők adatai, vagy a team tagok adatai is (ha nincs ilyen paraméter megadva, akkor az összes team-beli személy)
          schema:
            type: boolean
      responses:
        '200': # OK, de csak az aktuális bejelentkezett felhasználó csoportjaiba (team-jeibe) tartozó felhasználók
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: integer
                    email:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    birthYear:
                      type: integer
                    gender:
                      type: string
                    userStatus:
                      type: string
                    photoUrl:
                      type: string
                      description: A felhasználó fényképére mutató url
                    teamRole:
                      type: string
                      description: A csoporton belüli szerepkör
                    comment:
                      type: string
                      description: Megjegyzés az adott user-team szerepkör kapcsolathoz
                    hasDevicesToRepass:
                      type: number
                      description: Hány olyan eszköz van a páciensnek kiadva, amit a lekérdező adott neki
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: User
  /team/uploadTeamData:
    post:
      summary: Mérési adat felküldés
      description: Egy csoportos mérés adatainak felküldése a szerverre. (Azaz amikor egy mérés vezető végzi a mérést valamely páciens helyett, pl. alkohol szonda.)
      operationId: uploadTeamData
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              allOf:
                - $ref: "#/components/schemas/Measurement"
                - properties:
                    data:
                      type: string
                      description: A tényleges mérési adat Base64 formában, de csak abban az esetben, ha nem szeletelt az adatküldés - mert szeletelt esetben ez a mező nem definiált, hanem majd az addToDataSLice hívásban kell a mérési adat (szeleteket) küldeni.
                    userIdx:
                      type: integer
                      description: A mérőeszköz szerint hányadik eszköz pozícióban lévő felhasználóra vonatkoznak az adatok
                    deviceMac:
                      type: string
                      description: A mérőeszköz MAC azonosítója
                    collectorMac:
                      type: string
                      description: A mérést továbbító lokális gyűjtő eszköz MAC azonosítója
                    userId:
                      description: Annak az ügyfélnek az azonosítója, akire a (csoportos) mérés vonatkozik (pl. akit alkohol szondáztattak)
                      type: integer
                    teamCode:
                      description: Melyik team-be (csoportba) tartozik a mérés. Ha nincs megadva, akkor a mérés vezető (LEADER) team-jéhez kapcsolódik. De ha a mérés vezető több team-be is tartozik, akkor hibát dob a rendszer.
                      type: string
              required:
                - measurementDate
                - localTransferDate
                - sliceDeltaTime
                - measurementType
                - deviceMac
                - collectorMac
                - userIdx
                - hash
                - userId
            examples:
              normál nem szeletelt:
                value:
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.750Z"
                  sliceDeltaTime: 10000
                  measurementType: "BLOOD_PRESSURE"
                  data: "<measurement data in Base64 format>"
                  deviceMac: "AA:BB:CC:DD:01:02"
                  collectorMac: "AA:BB:CC:DD:01:03"
                  userIdx: -1
                  hash: "1234567890"
                  userId: 1123
              normál nem szeletelt nem MAC alapú minta:
                value:
                  measurementDataId: 0  #kötelezően 0 az értéke
                  measurementDate: "2019-09-20T13:11:57.622Z"
                  localTransferDate: "2019-09-20T13:11:57.623Z"
                  sliceDeltaTime: 10000
                  measurementType: "Alcohol"
                  data: "<measurement data in Base64 format>"
                  latitude: 47.49801
                  longitude: 19.03991
                  deviceId: 17
                  userIdx: -1
                  hash: "1234567890"
                  userId: 1123
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  measurementId:
                    type: integer
                    description: A sikeresen tárolt adat azonosítója
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-responses:
        "406":
          "EMBEDDED_JSON_ERROR": "A data mezőben nem lehet beágyazott JSON struktúra, csak legfeljebb Base64 string formában!"
          "NOT_CREATED_DATA": "`A data rész mentése sikertelen ($measure.measurementId)! Oka: $ex.message`"
          "DEVICE_DISABLED": "Ez a mérőeszköz le van tiltva a rendszerben!"
          "DEVICE_ACTIVE_USERFEE_ABSENT": "Ehhez a mérőeszközhöz lejárt az aktív szolgáltatás megrendelés a rendszerben, ezért a mérés nem tárolható!"
          "DEVICE_USERFEE_WAIT": "Ehhez a mérőeszközhöz még nincs kifizetve, ezért még nem érvényes a szolgáltatás megrendelés a rendszerben, így a mérés nem tárolható!"
          "DEVICE_USERFEE_INACTIVE": "Ehhez a mérőeszközhöz lemondott állapotú a szolgáltatás megrendelés a rendszerben, így a mérés nem tárolható!"
          "TOO_OLD_MEASUREMENTDATE": "Ehhez a mérőeszközhöz tartozó aktív szolgáltatás megrendeléshez képest túl régi mérési adat, a mérés ezért nem tárolható!"
          "COLLECTOR_DISABLED": "Ez a gyűjtőeszköz le van tiltva a rendszerben!"
          "USERINDEX_ERROR": "Nem volt megadva a userIdx és az eszköz felelőse nem az aktuális user!"
  /team/getAnalysedTeamMeasurementList:
    get:
      summary: Kiértékelt team mérések - lista lekérése
      description: A kiértékelt mérési adatok listájának lekérése. A válasz előállításakor a szűrési feltételeknek megfelelő (veszélyesség, időszak, mérés típus, ügyfél stb.) adatok kerülnek leválogatásra a megadott sorrend szerint.<br>countOnly=true esetén csak a szűrésnek megfelelő rekordok darabszámát adja vissza.<br>A törölt mérések nem mennek vissza a válaszban.
      operationId: getAnalysedTeamMeasurementList
      parameters:
        - in: query
          name: dataType
          description: Mérés típusa (all, FitKitBloodPressure, FitKitWeight, stb.), ha több is kell, akkor vesszővel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: dateFrom
          description: Mérés dátumtól
          schema:
            type: string
        - in: query
          name: dateTo
          description: Mérés dátumig
          schema:
            type: string
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab
          schema:
            type: string
        - in: query
          name: isActualName
          description: Ha nincs userId szerinti, de van userName szerinti szűrő feltétel, akkor false esetén csak a mérésben tárolt ügyfél név szerinti mérések legyenek a válaszban, vagy true esetén az ügyfél aktuális és régebbi nevein mentett mérések is
          schema:
            type: boolean
            default: true
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (pl. measurementDate, status, measurementType, measurementId, arrivalDate, hash, localTransferDate, alarmType, userName, momentaryName)
          schema:
            type: string
            default: "measurementDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: alarmType
          description: A riasztási szint (all, NO_ALARM, ALARM_LOW, ALARM_HIGH, ALARM_URGENT), ha több is kell akkor vesszőkkel elválasztva
          schema:
            type: string
            default: "all"
        - in: query
          name: summary
          description: A mérés összefoglaló információban szabad szöveges (like) keresés
          schema:
            type: string
        - in: query
          name: countOnly
          description: Ha az értéke true, akkor csak a szűrésnek megfelelő rekordok számát adja vissza
          schema:
            type: boolean
            default: false
        - in: query
          name: isArchive
          description: Ha az értéke false, akkor az aktív mérés adatok, egyébként az archív adatok
          schema:
            type: boolean
            default: false
        - in: query
          name: publicOnly
          description: Ha az értéke true, akkor csak a publikus kiértékelésekhez tartozó mérések, egyébként a nem publikusokhoz tartozók is
          schema:
            type: boolean
            default: false
        - in: query
          name: analyserName
          description: A kiértékelő orvos név részlete szerinti szűrés
          schema:
            type: string
        - in: query
          name: isBrief
          description: Ha az értéke true, akkor csak a mérés Id-je és a lastUpdate mező értéke megy a válaszban, egyébként minden mező
          schema:
            type: boolean
            default: false
        - in: query
          name: teamCode
          description: Milyen team(ek)-hez tartozó adatok kerüljenek a leválogatásba (pl. TEAM_ORG01_SUBORG02), ha több is kell akkor vesszőkkel elválasztva. Itt csak olyan team azonosítója szerepelhet, mint amelyikbe benne van a lekérdező személy!
          schema:
            type: string
            default: "all"
        - in: query
          name: isLeader
          description: Ha értéke true, akkor (ha a lekérdező TEAM_LEADER) a válaszban csak azok a mérések mennek vissza, amelyeket ő végzett el.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: object
                # ehelyett $ref: #/components/responses/AnalysedMeasurementListResp ide be kellett másolni, mert dupla mélységű response típus hivatkozás, amit a yaml generátor nem jól fejt ki
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Measurement"
                        - properties:
                            alarmType:
                              description: "a mérés értékei lapján (az orvos által) megállapított riasztási állapot (pl: ALARM_URGENT - azaz életveszélyesen sürgős)"
                              type: string
                            userName:
                              description: annak az ügyfélnek a (jelenlegi) neve, akire vonatkozik a mérési adat
                              type: string
                            momentaryName:
                              description: a mérésben tárolt méréskori (pillanatnyi) ügyfélnév, akire vonatkozik a mérési adat
                              type: string
                            analyseCount:
                              description: a mérésre vonatkozó kiértékelések száma
                              type: integer
                            analysedByMe:
                              description: a lekérdezést végző orvos már az adott mérésre végzett-e kiértékelést
                              type: boolean
                            analysersName:
                              description: azoknak az orvosoknak a neve vesszővel elválasztva, akik részt vettek a méréssel kapcsolatos kiértékelés(ek) készítésében
                              type: string
                            activeStarterConsultationCount:
                              description: az aktuális lekérdező az adott méréssel kapcsolatban hány olyan konzultációt kezdeményezett amit még nem tekintett meg a konzultációs partner
                              type: integer
                            viewedStarterConsultationCount:
                              description: az aktuális lekérdező az adott méréssel kapcsolatban hány olyan konzultációt kezdeményezett amit már megtekintett a konzultációs partner
                              type: integer
                            activeTargetConsultationCount:
                              description: az adott méréssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit még nem tekintett meg ez a lekérdező
                              type: integer
                            viewedTargetConsultationCount:
                              description: az adott méréssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit már megtekintett ez a lekérdező
                              type: integer
                            realizerName:
                              type: string
                              description: A csoportos mérést végző személy neve
                            teamName:
                              type: string
                              description: Csoportos mérés esetén a mérési csoport (team) megnevezése
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamboss
            - teamleader
      tags:
        - Team
      x-responses:
        "406":
          "STOREDPROC_ERROR": "ex.message"
  /team/getTeamDocumentList:
    get:
      summary: Team dokumentumok - lista lekérése
      description: A team-hez tartozó dokumentumok (pl. alkohol szondáztatási jegyzőkönyv) listájának lekérése
      operationId: getTeamDocumentList
      parameters:
        - in: query
          name: documentCathegory
          description: Dokumentum kategóriája (pl. ALCOHOL_REPORT), ha nincs megadva, akkor az összes dokumentum típus
          schema:
            type: string
        - in: query
          name: dateFrom
          description: Dokumentum keletkezési dátumtól
          schema:
            type: string
        - in: query
          name: dateTo
          description: Dokumentum keletkezési dátumig
          schema:
            type: string
        - in: query
          name: userId
          description: A páciens (ügyfél) azonosítója
          schema:
            type: integer
        - in: query
          name: userName
          description: A páciens (ügyfél) név darab
          schema:
            type: string
        - in: query
          name: pageStart
          description: Hányadik rekordtól kezdve adja az adatokat
          schema:
            type: integer
            default: 0
        - in: query
          name: pageLength
          description: Lap méret
          schema:
            type: integer
            default: 20
        - in: query
          name: orderField
          description: Rendezési mező (pl. createDate, userName, teamCode)
          schema:
            type: string
            default: "createDate"
        - in: query
          name: orderType
          description: Rendezés típus (asc, desc)
          schema:
            type: string
            default: "desc"
        - in: query
          name: countOnly
          description: Ha az értéke true, akkor csak a szűrésnek megfelelő rekordok számát adja vissza
          schema:
            type: boolean
            default: false
        - in: query
          name: uploaderId
          description: A dokumentum feltöltő (pl. a csoportos mérést végző személy) azonosítója
          schema:
            type: integer
        - in: query
          name: uploaderName
          description: A dokumentum feltöltő (pl. a csoportos mérést végző személy) név darab
          schema:
            type: string
        - in: query
          name: teamCode
          description: Milyen team(ek)-hez tartozó adatok kerüljenek a leválogatásba (pl. TEAM_ORG01_SUBORG02), ha több is kell akkor vesszőkkel elválasztva. Itt csak olyan team azonosítója szerepelhet, mint amelyikbe benne van a lekérdező személy!  Team vezető lekérdező számára a team összes tagjának dokumentumai visszamennek, egyszerű tag számara csak a saját dokumentumai. Ha nincs kitöltve (vagy all az értéke), akkor az értéket olyannak tekintjük, hogy az összes olyan team, amiben benne van a lekérdező.
          schema:
            type: string
            default: "all"
      responses:
        '200':
          description: A team dokumentumok listája
          content:
            'application/json':
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Document"
                    - properties:
                        userName:
                          type: string
                          description: A dokumentum tulajdonosának neve
                        uploaderName:
                          type: string
                          description: A dokumentumot feltöltő (pl. csoportos mérés vezető) user neve

        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - user
            - teamboss
            - teamleader
      tags:
        - Team
  /team/adminDecodeUserQR:
    post:
      summary: A QR kódban tárolt felhasználói adatok elővétele
      description: A felhasználói QR kódban lévő adatok dekódolása, hogy az alapján lehessen inviteTeamUserRegistration-t kezdeményezni (vagy hiba keresési célokból)
      operationId: adminDecodeUserQR
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                userQR:
                  description: Az adott felhasználói adatok alapján képzett, a QR szkennerrel beolvasott string
                  type: string
              required:
                - userQR
      responses:
        '200': # OK, a user QR-ban lévő felhasználó adatok
          description: A user QR-ban lévő felhasználó adatok
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/User"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - officer
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
        - Admin
        - OfficeManager
      x-implementation: "x-create"
      x-base-domain: UserGroup
  /team/protocols:
    get:
      summary: Team Protokollok listájának lekérése
      description: A lehetséges csoportos mérési protokollok lekérése
      operationId: getTeamProtocolList
      parameters:
        - in: query
          name: teamCode
          description: Melyik team-re vonatkozik a művelet - ha nincs megadva, akkor a hívó összes team-jére
          schema:
            type: string
        - in: query
          name: enabledOnly
          description: "Ha értéke true, akkor csak az olyan protokollok mennek vissza a válaszban, amik hozzá vannak rendelve ügyfél-eszközhöz, egyébként minden eddigi protokoll (alapértelmezésben az értéke: true)"
          schema:
            type: boolean
            default: true
      responses:
        '200': # OK
          $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Protocol
    post:
      summary: Új team protokoll létrehozása
      description: Új csoportos mérési protokoll létrehozása, de csak akkor, ha még nincs ilyen nevű és leírású
      operationId: createTeamProtocol
      parameters:
        - in: query
          name: teamCode
          description: Melyik team-re vonatkozik a művelet - ha nincs megadva, akkor a hívó team-jébe kerül (viszont ha a hívó több team-be is tartozik, akkor kötelező megadni értéket)
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "A mérési protokoll rövid neve (pl: 3x2 perces mérés)"
                text:
                  type: string
                  description: A mérési protokoll tevékenység és célok részletes leírása
              required:
                - name
                - text
        required: true
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
  /team/protocols/{protocolId}:
    get:
      summary: Team Protokoll adatainak lekérése
      description: Adott csoportos mérési protokoll adatainak lekérdezése
      operationId: getTeamProtocol
      parameters:
        - in: path
          name: protocolId
          description: A lekérdezett protokoll azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
    delete:
      summary: Team Protokoll törlése
      description: Adott csoportos mérési protokoll törlése.<br>Ez csak logikai törlés, hogy a még folyamatban lévő vagy már lezárt ügyfél-eszköz hozzárendelések kapcsán megmaradhasson a protokoll információ is.<br>
      operationId: deleteTeamProtocol
      parameters:
        - in: path
          name: protocolId
          description: A törlendő protokoll azonosítója
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Protocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
      x-responses:
        "406":
          "ANALYSE_PUBLIC_YET": "Ez a kiértékelés már publikus, nem törölhető!"
  /team/protocols/{protocolId}/addProtocolToDevice:
    post:
      summary: Team Protokoll hozzáadás ügyfél-eszközhöz
      description: Adott csoportos mérési protokoll hozzárendelése adott ügyfél adott eszközéhez.
      operationId: addTeamProtocolToUserDevice
      parameters:
        - in: path
          name: protocolId
          description: A protokoll azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          description: Az ügyfél azonosítója, akinek az adott eszközzel kapcsolatban szól a protokoll
          required: true
          schema:
            type: number
        - in: query
          name: deviceId
          description: Az eszköz azonosítója, amire vonatkozik a protokoll
          required: true
          schema:
            type: number
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserProtocol"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
  /team/protocols/{protocolId}/removeProtocolFromDevice:
    post:
      summary: Team Protokoll törlése ügyfél-eszköztől
      description: Adott csoportos mérési protokoll hozzárendelésének megszüntetése adott ügyfél adott eszközénél.
      operationId: removeTeamProtocolFromUserDevice
      parameters:
        - in: path
          name: protocolId
          description: A protokoll azonosítója
          required: true
          schema:
            type: integer
        - in: query
          name: userId
          description: Az ügyfél azonosítója, akinek az adott eszközzel kapcsolatban szól a protokoll
          required: true
          schema:
            type: number
        - in: query
          name: deviceId
          description: Az eszköz azonosítója, amire vonatkozik a protokoll
          required: true
          schema:
            type: number
      responses:
        '200': # OK
          description: A kérés rendben végrehajtódott
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
  /team/{userId}/devices:
    get:
      summary: Team user eszköz listájának lekérése
      description: Az adott csoport tag (praktikusan csoport vezető) eszközeinek listája.
      operationId: getTeamUserDevices
      parameters:
        - in: path
          name: userId
          description: A lekérdezett userId azonosítója
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/FilterParam"
      responses:
        '200': # OK
          $ref: "#/components/responses/AssignedDevicesList"
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - teamvisitor
            - teamboss
            - teamleader
      tags:
        - Team
      x-implementation: "x-find"
      x-force-find-with-filter: true
      x-base-domain: Device
  /adminjobs/startInvoiceJob:
    post:
      summary: Számlázási feladat elindítása
      description: A számlázással kapcsolatos háttér funkció (napi ügyfél exportálás, napi megrendelés exportálás, stb.) elindítása.
      operationId: adminjobStartInvoiceJob
      parameters:
        - in: query
          name: jobType
          description: Melyik típusú számlázási job fusson le (exportUserCsv, exportOrderCsv, importBalanceCsv, stb.)
          required: true
          schema:
            type: string
            enum: [exportUserCsv, exportOrderCsv, importBalanceCsv, importValidityCsv, importOutstandingsCsv, importBankCsv,importAllCsv]
        - in: query
          name: syncAll
          description: "Ha az értéke true, akkor minden adat exportálásra kerül, ha false, akkor csak a legutóbbi ilyen fajta export óta megváltozott értékek (alapértelmezésben: false)"
          schema:
            type: boolean
            default: false
        - in: query
          name: fromDate
          description: Milyen dátum utáni változásokra fusson le a funkció (ha nincs megadva, akkor a naplóban szereplő utolsó ilyen jobType típusú futás dátumát követő időszakra fog)
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  description: Az adott feladat során használandó (pl. import vagy export) állomány elérési útja és neve
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  exportCount:
                    type: integer
                    description: A kiexportált tételek darabszáma
                  importCount:
                    type: integer
                    description: A beimportált tételek darabszáma
                  errorCount:
                    type: integer
                    description: A hibás (vagy utólag kezelendő) tételek darabszáma
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Jobs
      x-responses:
        "406":
          "NOT_IMPLEMENTED_YET": "Unimplemented  + jobType +  function!"
  /adminjobs/startBackgroundJob:
    post:
      summary: Háttér funkció direkt futtatása
      description: Háttér funkció (pl. autoDeselectAnalysing) direkt futtatása.
      operationId: adminjobStartBackgroundJob
      parameters:
        - in: query
          name: jobType
          description: Melyik típusú háttér job fusson le (pl. deselectAnalysing)
          required: true
          schema:
            type: string
            enum: [autoDeselectAnalysing,autoCancelAnalysing,autoOrderValidityChecking,recalculateDiagnosis,sendAnalyseAlarms,endOfDay,sumStatistic,autoCancelPaying,sendDutyWarning,sendDutyAlarms,calculateAdherence,sendEesztEkat,sendPushDirectMessage]
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                params:
                  type: string
                  description: Az adott feladat futása során használandó paraméterek
            examples:
              autoDeselectAnalysing:
                description: "A bepipált checkbox-os tételek ellenőrzése, és a túl régiek (alapértelmezésben limit: 10 perc) kiszedése a kiválasztott állapotból"
                value:
                  params: 'LIMIT=10'
              autoCancelAnalysing:
                description: "Azoknak a kiértékeléseknek a megszakítása, amik túl sokáig (alapértelmezésben limit: 180 perc) vannak befejezetlen állapotban valemely doktoroknál"
                value:
                  params: 'LIMIT=180'
              autoOrderValidityChecking:
                description: "A mostani időpontban már lejárt érvényességű megrendelések WAIT-be állítás, hogy jelezzük, a következő befizetésre várunk vele kapcsolatban"
                value:
                  params: ''
              recalculateDiagnosis adott mérésre:
                description: "A params-ban megadott azonosítójú mérés metaData mezőjében található diagnózis értékek újraszámolása és kiértékelés készítése kihagyása"
                value:
                  params: 'MEASUREMENTID=2345,ANALYSEGEN=false'
              recalculateDiagnosis több mérésre:
                description: "A params-ban <b>pontosvesszővel</b> elválasztva megadott azonosítójú mérések metaData mezőjében található diagnózis értékek újraszámolása<br><b>Figyelem!</b> NEM lehet megszakítani a folyamatot!"
                value:
                  params: 'MEASUREMENTID=2345;2010;4511'
              sendAnalyseAlarms:
                description: "Ha a paraméter értéke COUNTONLY=true, akkor csak megszámolja, hogy hány üzenet menne ki, de az nem kerül elküldésre.<br>Ha a paraméter értéke MAX=n, akkor legfeljebb csak az adott mennyiségű kiértékelés kerül kiküldésre.<b>Figyelem!</b> NEM lehet megszakítani a folyamatot!"
                value:
                  params: 'MAX=10,COUNTONLY=true'
              sumStatistic:
                description: Az alap statisztika rekordok összesítése, majd az összesítés végén a feleslegessé váló statisztikai adat rekordok törlése
                value:
                  params: ''
              autoCancelPaying:
                description: "A túl rég óta fizetés alatt lévő bankkártyás fizetési folyamatok megszakítása (alapértelmezésben limit: 30 perc)"
                value:
                  params: 'LIMIT=30'
              sendDutyWarning:
                description: "Az ügyeleti időszak közeledtére (15 perc) figyelmeztető mail, illetve az ügyeleti idő miatti bejelentkezési kötelezettségre figyelmeztető mail kiküldése"
                value:
                  params: ''
              sendDutyAlarms:
                description: "Ha a paraméter értéke COUNTONLY=true, akkor csak megszámolja, hogy hány üzenet menne ki, de az nem kerül elküldésre.<br><b>Figyelem!</b> NEM lehet megszakítani a folyamatot!"
                value:
                  params: 'COUNTONLY=true'
              calculateAdherence:
                description: "Az OKFŐ adherencia (mérés megfelelőség) újraszámolása az összes (ha PATIENTID=ALL) vagy az adott páciens méréseire. Ha a CALCONLY paraméter értéke=true, akkor csak elvégzi a számításokat és a console-ra íródnak az ellenőrzéshez szükséges információk, de nem tárolódik le az Adherencia táblába. Ha a FORCECALC=true, akkor a számításban érintett mérések meghatározásakor nem kerül figyelembevételre, hogy már készült-e számítás az adott mérésekre.<br><b>Figyelem!</b> NEM lehet megszakítani a folyamatot!"
                value:
                  params: 'PATIENTID=1017,CALCONLY=true,FORCECALC=false'
              sendEesztEkat:
                description: "Az EESZT rendszerbe az (első) EKAT járóbeteg felvétel esemény elküldése azokra az ügyfelekre, akiknek ez még nem történt meg sikeresen, hogy utána már lehessen lekérdezni rájuk az EESZT rendszerből. Ha PATIENTID=ALL, akkor az összesre, egyébként az adott ügyfélre."
                value:
                  params: 'PATIENTID=1012'
              sendPushDirectMessage:
                description: "Teszt push üzenet kiküldése az adott azonosítójú ügyfél push csatornáira<br><b>Figyelem!</b> NEM lehet megszakítani a folyamatot!"
                value:
                  params: 'EXTERNALUSERID=pd-001,TITLE=Üzenet fejléce,TEXT=Teszt üzenet szövege'
      responses:
        '200':
          description: succesfull operation
          content:
            'application/json':
              schema:
                type: string
                description: Az adott job működésének eredménye, pl. a funkció által érintett tételek darabszáma
        '400': # Bad request - a szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt
          $ref: "#/components/responses/Error400"
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
      tags:
        - Jobs
  /adminjobs/disableBackgroundJobs:
    post:
      summary: Ütemezett funkciók letiltása
      description: A háttér taszkok elindulásának letiltása.<br>Csak akkor szabad leállítani a szervert, ha ez a hívás sikeresen (HTTP 200-al) tért vissza!
      operationId: adminjobDisableJobs
      responses:
        '409':
          description: Éppen fut egy háttér feladat, ezért most nem tiltható le a futás
        '200': # OK
          description: A kérés rendben végrehajtódott
        '401': # Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
          $ref: "#/components/responses/Error401"
        '403': # Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
          $ref: "#/components/responses/Error403"
        '404': # Not found - Az Url nem található, vagy nincs ilyen adat
          $ref: "#/components/responses/Error404"
        '406': # Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
          $ref: "#/components/responses/Error406"
      security:
        - OpenID:
            - admin
            - sysadmin
      tags:
        - Jobs
        - Admin
components:
  securitySchemes:
    OpenID:
      flows:
        implicit:
          authorizationUrl: 'http://web.api.hu/api/oauth/dialog'
          scopes:
            admin: Rendszergazdai joga van a technikai adatok lekérdezésében és megváltoztatásában.
            user: Megváltoztathatja a saját jelszavát és saját üzleti adatai felett írási joga van.
            cadmin: A saját kompetencia központjának technikai adatait változtathatja meg. (Pl. kik tartoznak az adott kompetencia központba)
            doctor: Azoknak az ügyfeleknek az egészségügyi adatait kérdezheti le, akik felhatalmazták őt erre. Valamint ügyeleti riasztási helyzet esetén a saját szakterületére vonatkozó veszélyben lévő ügyfelek adatait kérheti le az ügyeleti időszaka alatt.
            sysadmin: A rendszer alap vezérlő és konfigurációs információinak telepítéséhez és beállításához van joga.
            gdoctor: A rendszerbe meghívott kezelőorvosként az őt meghívó ügyfelek mérési adatait, illetve az ezekre a mérésekre vonatkozó kiértékeléseket kérheti le a rendszerben.
            group_approver: Olyan orvos, aki csoportosan hagyhat jóvá méréseket
            insider: Olyan speciális felhasználó, aki belső alkalmazottnak számít, ezért részt vehet a fizetési funkciók tesztelésében
            dvisitor: Orvoslátogató
      type: oauth2
  schemas:
    Adherence:
      description: Az OKFŐ projektben használatos adherencia (mérés megfelelőség) számítások eredményei.
      properties:
        adherenceId:
          type: integer
          description: Adherence egyedi azonosítója
        measurementType:
          type: string
          description: A mérés típusa
        version:
          type: string
          description: Melyik adherencia számítási algoritmussal történt a kalkuláció
        resultCode:
          type: string
          description: Az adherencia számítás eredménye (pl. ADHER_SUCCESS - megfelelő, ADHER_PARTIAL - részben megfelelő, ADHER_ERR_xxxx - a nem megfelelőség okára utaló hibakód)
        resultRest:
          type: integer
          format: int32
          description: Ha az Eredmény kódja ADHER_PARTIAL, akkor még hány teljesen sikeres napnyi mérés hiányzik a teljesen sikeres mérés sorozathoz
        calculationDate:
          type: string
          format: date-time
          description: Mikor történt az adherencia számítás
        startDate:
          type: string
          format: date-time
          description: A számításkor figyelembevett kezdődátum (általában az adott páciens OKFŐ projekt kezdete)
        endDate:
          type: string
          format: date-time
          description: A számításban figyelembevett befejezés dátuma (általában az adott páciens OKFŐ projekt befejezés dátuma, vagy ha az még nem érkezett el, akkor a számítás elvégzésének dátuma)
        userId:
          type: integer
          description: Melyik páciensre vonatkozik a számítás
      required:
        - adherenceId
      type: object
    Analyse:
      description: A mérési eredmény(ek) orvosi szempontú értékelése ill. a jelenségek magyarázata, amit a páciens is megkap.
      properties:
        analyseId:
          type: integer
          description: Analyse egyedi azonosítója
        status:
          type: string
          description: "Az elemzési eredmény állapota, pl: folyamatban, publikus, nem publikus, elavult."
        subject:
          type: string
          description: Az elemzés tárgya, azaz rövid megnevezése
        text:
          type: string
          description: Az elemzés részletes szövege (HTML formátumban).
        viewStatus:
          type: string
          description: "Az adott kiértékelés állapota megtekinthetőség szempontjából.<br>Lehetséges értékei: kiértékelés alatt, megtekinthető, megtekintett, elavult"
        analyzeDate:
          type: string
          format: date-time
          description: A kiértékelés készítésének kezdete
        publishDate:
          type: string
          format: date-time
          description: Az az időpont, amikortól az ügyfél láthatja a kiértékelést (azaz amikor a View status értéke ANALYSE_VIEW_UNREAD értékre változott)
        metaData:
          type: string
          description: A kiértékeléskor használatos egyéb információk JSON formátumban, pl. a mérési diagram(ok)ra felrakott jelölési objektumok és azok pozíciója.
        obsolatedDate:
          type: string
          format: date-time
          description: Az az időpont, amikortól kezdve elavultnak számít a kiértékelés (pl. mert a pulseoxy esetén az előzmény mérések közül valamelyiket törölték)
        prevStatus:
          type: string
          description: Az aktuális státusz előtti érték, ami arra használatos, hogyha a kiértékelést végző meggondolja magát és módosítás mentése nélkül kilép a szerkesztésből, akkor mely státuszra kell visszaállni. (Ha a mező értéke NULL, akkor pedig törölni kell a kiértékelés rekordot.)
        analyseGuid:
          type: string
          description: A kiértékelés GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját.
        userId:
          type: integer
          description: Annak az ügyfélnek az azonosítója, akiről (akinek a méréseiről) szól a kiértékelés.
        preConsultationId:
          type: integer
          description: Kiértékelés előzményének tekinthető konzultáció azonosítója
      required:
        - analyseId
        - status
      type: object
    AnalyseBasis:
      description: Olyan kapcsoló adat, ami megmutatja, hogy a kiértékelés milyen mérések és előfeldolgozások alapján keletkezett.
      properties:
        analyseBasisId:
          type: integer
          description: Analyse Basis egyedi azonosítója
        createDate:
          type: string
          format: date-time
          description: Az adott mérésnek a kiértékeléshez rendelési időpontja
        processedDataId:
          type: integer
          description: Annak a feldolgozásnak az azonosítója, ami tartalmazza, hogy melyik mérésre és milyen kiértékelési szabály alapján történt az előfeldolgozás.
        measurementId:
          type: integer
          description: A mérés, amire az adat előfeldolgozása és a kiértékelés vonatkozik.
        analyseId:
          type: integer
          description: Az elemzés, ami a mérésre vonatkozik.
      required:
        - analyseBasisId
      type: object
    AnalyseRule:
      description: Mérési adat típus automatikus (elő)értelmezésének szabályai (érték határok, feldolgozási funkció típusok).
      properties:
        analyseRuleId:
          type: integer
          description: Analyse rule egyedi azonosítója
        name:
          type: string
          description: Az adott paraméterek szerinti feldolgozás típus rövid megnevezése.
        measureType:
          type: string
          description: "A mérés típusát mutató szótárkód (pl: vérnyomás, vércukor, súly, stb.), amire a feldolgozási módszer vonatkozik."
        processType:
          type: string
          description: "Az automatikus elemzés típus szótárkódja, pl: intervallumba tartozás vizsgálata, gyakoriság vizsgálata, kiterjedtség vizsgálata, eltérés százalékos vizsgálat, stb."
        normalMinimum:
          type: number
          description: Normális alsó érték
        normalMaximum:
          type: number
          description: Normális felső érték
        warningMinimum:
          type: number
          description: A normális érték alatti, figyelemre méltó alsó érték, ami az Alarm státuszt Warning-ra állítja.
        warningMaximum:
          type: number
          description: A normális érték feletti, figyelemre méltó felső érték, ami az Alarm státuszt Warning-ra állítja.
        errorMinimum:
          type: number
          description: A normális érték alatti jelentős eltérés, ami már nem csak figyelemre méltó alsó érték, ezért az Alarm státuszt Error-ra állítja. (Az ez alatt értékek eredményezik az Urgent státuszt.)
        errorMaximum:
          type: number
          description: A normális érték feletti jelentős eltérés, ami már nem csak figyelemre méltó felső érték, ezért az Alarm státuszt Error-ra állítja. (Az efölötti értékek eredményezik az Urgent státuszt.)
      required:
        - analyseRuleId
        - measureType
        - processType
      type: object
    Analysers:
      description: Az adott kiértékelés készítését illetve felülvizsgálatát végző személyek nyilvántartását tartalmazza.
      properties:
        analysersId:
          type: integer
          description: Analysers egyedi azonosítója
        analyserType:
          type: string
          description: A kiértékelést végző orvos típusa (kiértékelő vagy ellenőrző).
        analyseStart:
          type: string
          format: date-time
          description: Az az időpont, amikor az adott kiértékelő először kezdte meg a kiértékelés szerkesztését.
        analyseEnd:
          type: string
          format: date-time
          description: A kiértékelés befejezésének időpontja (pontosabban amikor az adott kiértékelő tovább adta a kiértékelést a következő orvos számára, vagy befejezettnek nyilvánította a kiértékelés folyamatát).
        resultState:
          type: string
          description: Az adott kiértékelő által hozott döntés, azaz az AnalyseEnd mező kitöltésekor általa meghatározott kiértékelési állapot (pl. Publikus, Nem publikus).
        index:
          type: integer
          format: int32
          description: Hányadik kiértékelőként vett részt a folyamatban.
        analyseId:
          type: integer
          description: Az elemzés, amire vonatkozik a kiértékési információ.
        doctorId:
          type: integer
          description: A kiértékelést elvégző orvos azonosítója
      required:
        - analysersId
      type: object
    AssignedUser:
      description: Olyan kapcsoló adat, ami megmutatja, hogy az adott felhasználó hányas számú páciense az adott eszköznek. Ez akkor használatos, ha a mérőeszköz képes több személy méréseit is kezelni, általában egy sorszámmal (1-es vagy 2-es személy) azonosítják az eszközök, hogy éppen ki végzi a mérést.
      properties:
        assignedUserId:
          type: integer
          description: Assigned User egyedi azonosítója
        userIdx:
          type: integer
          format: int32
          description: Az adott felhasználó hányadik helyére van csatolva az adott eszköznek.
        deviceName:
          type: string
          description: A felhasználó által adott (felüldefiniáló) eszköz elnevezés
        deviceId:
          type: integer
          description: A hozzárendelt eszköz azonosítója
        userId:
          type: integer
          description: Az adott eszközhöz rendelt felhasználó azonosítója
      required:
        - assignedUserId
      type: object
    Attachment:
      description: Csatolt dokumentumok listája
      properties:
        attachmentId:
          type: integer
          description: Attachment egyedi azonosítója
        createDate:
          type: string
          format: date-time
          description: A rekord létrehozásának dátuma.
        isAnalyseDoc:
          type: boolean
          description: Értéke akkor true, ha ez nem manuálisan csatolt állomány, hanem egy rendszerbeli kiértékelés vagy jegyzőkönyv PDF formára konvertált formája.<br>
        documentId:
          type: integer
          description: Melyik dokumentum van csatolva a kiértékeléshez.
        analyseId:
          type: integer
          description: Az elemzés, amihez csatolt az adott dokumentum.
        patientId:
          type: integer
          description: Annak a páciensnek az azonosítója, akihez tartozik az adott csatolmány. (A kiértékeléshez tartozó dokumentumoknál nincs kitöltve.)
        measurementId:
          type: integer
          description: Az adott dokumentum melyik méréshez kapcsolódik
      required:
        - attachmentId
      type: object
    Calendar:
      description: Az orvosok ügyeleti rendjének és a felhasználók különböző időponthoz kötődő előírásainak és tennivalóinak naptára.
      properties:
        calendarId:
          type: integer
          description: Calendar egyedi azonosítója
        startTime:
          type: string
          format: date-time
          description: Az adott naptár esemény kezdete
        endTime:
          type: string
          format: date-time
          description: A naptár esemény befejeződési időpontja
        timeLength:
          type: integer
          format: int32
          description: Az esemény hossza (percekben számolva) - kalkulált mező a startTime-ból és az endTime-ból
        eventType:
          type: string
          description: "Az adott időponthoz kötődő esemény típusa (pl: orvosi ügyelet, adott páciensnek szóló mérési előírás, figyelmeztetés megjelenítés, stb.)."
        extendedData:
          type: string
          description: A naptári időponthoz kapcsolt kiegészítő információ.
        status:
          type: string
          description: "A naptári esemény állapota, pl: aktív, inaktív, befejezett."
        createDate:
          type: string
          format: date-time
          description: A naptári esemény létrehozásának időpontja
        modifyDate:
          type: string
          format: date-time
          description: A naptári esemény utolsó módosításának időpontja
        acceptanceDate:
          type: string
          format: date-time
          description: Ha az adott esemény típus elfogadásra kötelezett (pl. orvosi ügyeleti esemény), akkor az az időpont, amikor az esemény tulajdonosa (a cél személy) elfogadta
        preWarningTime:
          type: string
          format: date-time
          description: Az adott esemény (pl. ügyelet) kezdete előtt kiküldött figyelmeztető mail időpontja
        forcedWarningTime:
          type: string
          format: date-time
          description: Az adott esemény kezdetekor (pl. ügyeleti időpont elkezdődésekor, ha még nincs bejelentkezve az adott orvos) küldött felszólító mail kiküldésének időpontja
        commentReference:
          type: integer
          format: int32
          description: Pl. amikor visszautasítja a tervezett ügyeleti eseményt az orvos, akkor kötelező hozzáfűznie egy szöveges megjegyzést<br>A megjegyzés szövege az Eventlog táblában tárolódik, ebben mezőben pedig az adott EVT_REJECT_CALENDAREVENT típusú rekord egyedi azonosítója van.
        isChanged:
          type: boolean
          description: Ha értéke true, akkor olyan változás történt az esemény adataiban, ami miatt ki kell értesíteni a targetUserId azonosítójú orvost (pl. új ügyeleti esemény, vagy megváltozott az ügyelet hossza)
        completionStart:
          type: string
          format: date-time
          description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor ténylegesen végrehajtotta az időpontra előírt tennivalót.<br>Orvosi ügyeleti eseménynél itt található, hogy mikor lépett be az ügyeletes orvos.
        completionEnd:
          type: string
          format: date-time
          description: Ha az adott eseményhez kapcsolódóan el kell végezni valamit a cél személynek (pl. páciens számára előírt mérés elvégzése, vagy gyógyszer bevétele), akkor az az időpont, amikor befejezte az időpontra előírt tennivalót. Elsősorban orvosi ügyeleti eseménynél van jelentősége, mert itt található, hogy mikor tevékenykedett legutóbb vagy lépett ki az ügyeletes orvos.
        completionLength:
          type: integer
          format: int32
          description: Az elvégzés hossza (percekben számolva) - kalkulált mező a completionStart-ból és a completionEnd-ből.<br>De ha az esemény orvosi ügyelet, akkor az adott ügyelet alatt ténylegesen bejelentkezve töltött időt tartalmazza!
        completionPercent:
          type: integer
          format: int32
          description: "Az esemény hosszához képest mennyire van kész az elvégzés - kalkulált mező: a startTime, endTime, completionStart, completionEnd arányból számítódik.<br>Elsősorban az orvosi ügyeletek elszámolhatósága miatt van jelentősége."
        adhocType:
          type: string
          description: "Ha értéke 'ADHOC', akkor automatikusan növekvő nem előre tervezett esemény (pl: adhoc orvosi jelentkezés ügyeletes nélküli időszakra). Ha értéke 'ADHOCFIX', akkor pedig fix vég időpontú nem előre tervezett esemény (pl. mert az orvos jelezte a kérelemkor, hogy meddig tudja vállalni az ügyeletet)."
        targetUserId:
          type: integer
          description: Melyik felhasználóra vonatkozik a naptár bejegyzés
        regulationId:
          type: integer
          description: Melyik előírásra vonatkozik a naptár bejegyzés.
        userGroupId:
          type: integer
          description: Melyik felhasználó csoportra vonatkozik a naptár esemény
        creatorId:
          type: integer
          description: Eseményt létrehozó felhasználó azonosítója
        modifierId:
          type: integer
          description: Módosító felhasználó azonosítója
      required:
        - calendarId
        - startTime
        - eventType
      type: object
    Consultation:
      description: Az ügyfelek között kezdeményezett konzultációs kérések adatai.
      properties:
        consultationId:
          type: integer
          description: Consultation egyedi azonosítója
        startDate:
          type: string
          format: date-time
          description: Az az időpont, amikor a konzultációt kezdeményezte az ügyfél.
        consultationType:
          type: string
          description: Ügyfél és orvos közötti konzultáció (DICT_CONSULT_PATIENT) vagy Orvosok közötti konzultáció (DICT_CONSULT_DOCTOR) vagy Okfő orvosnak szóló szakkonzultáció (DICT_CONSULT_OKFODOCTOR).<br>A konzultációs rekord törlése csak logikailag történik, ekkor az EndDate mező kitöltődik!
        referenceType:
          type: string
          description: Mire vonatkozik a konzultációs kérés (Mérésre, kiértékelésre, Dokumentumra).
        referenceId:
          type: integer
          format: int32
          description: Annak a rekordnak az azonosítója (pl. mérés azonosítója), amire a konzultációs kérés vonatkozik.
        subject:
          type: string
          description: Annak a rövid leírása, hogy miért kéri a konzultációt a kezdeményező fél.
        viewDate:
          type: string
          format: date-time
          description: Mikor látta először a konzultáció kérés után a felkért személy a referenciában szereplő (pl. mérés) adatokat.
        referenceGuid:
          type: string
          description: Annak a rekordnak a Guid azonosítója (pl. mérés Guid azonosítója), amire a konzultációs kérés vonatkozik.
        instituteMail:
          type: string
          description: Ha (szak)konzultáció kezdeményezése történt, akkor annak a szervezetnek a mail címe, aminél a koordinátor majd delegálja a megfelelő szakorvos felé a konzultációs kérésre vonatkozó értesítő mail-t
        endDate:
          type: string
          format: date-time
          description: A konzultáció befejezeésének (törlésének) az időpontja
        consultationGuid:
          type: string
          description: A konzultációs rekord GUID azonosítója, hogy mail-beli linkben kiküldhető legyen
        starterUserId:
          type: integer
          description: A konzultációt kezdeményező ügyfél azonosítója.
        targetUserId:
          type: integer
          description: A konzultációs kérés címzett ügyfél azonosítója.
        inviterUserId:
          type: integer
          description: Ha szakkonzultációról van szó, akkor a szakkonzultációt kezdeményező háziorvos ügyfél azonosítója
      required:
        - consultationId
      type: object
    Coupon:
      description: Kedvezmények kezelésére alkalmas vezérlő adatok
      properties:
        couponId:
          type: integer
          description: Coupon egyedi azonosítója
        couponCode:
          type: string
          description: A kupon publikus azonosítója, amit meg kell adni a megrendelés során, ha a kedvezményt érvényesíteni akarja az ügyfél
        comment:
          type: string
          description: A kupon (értelmének vagy körülményeinek) rövid magyarázata
        productType:
          type: string
          description: Ha ki van töltve, akkor csak az adott termék típus esetén vehető igénybe a kedvezmény. Ha értéke null, akkor bármely termék típusra vonatkozhat a kedvezmény.
        deviceType:
          type: string
          description: Ha ki van töltve, akkor csak az adott eszköz típusra vehető igénybe a kedvezmény. Ha értéke null, akkor bármely eszköz típusra.
        discountPercent:
          type: number
          format: double
          description: A kedvezmény értéke százalékban kifejezve. Ha ki van töltve, akkor ez jut érvényre, ha nincs, akkor a Discount value mező.
        discountValue:
          type: integer
          format: int32
          description: A kedvezmény értéke (nem százalékban kifejezve). Csak akkor jut érvényre, ha a Discount percent mező nincs kitöltve!
        validFrom:
          type: string
          format: date-time
          description: Mikortól érvényes a kedvezmény
        validTo:
          type: string
          format: date-time
          description: Meddig érvényes a kedvezmény
      required:
        - couponId
        - couponCode
      type: object
    Device:
      description: A vizsgálatok elvégzésére alkalmas konkrét mérő eszköz, valamint az adatgyűjtő eszköz jellemzői.
      properties:
        deviceId:
          type: integer
          description: Device egyedi azonosítója
        mac:
          type: string
          description: Eszköz egyedi hardver azonosítója (MAC azonosítója vagy a virtuális pl. HelthKit eszközöknél a hozzá generált UUID)
        name:
          type: string
          description: Eszköz megnevezése
        type:
          type: string
          description: Eszköz típusának kódja (pl. lokális adatgyűjtő eszköz, vérnyomásmérő, mérleg, stb. - DEVICE_TYPE szótárkód)
        status:
          type: string
          description: Eszköz állapotát mutató szótárkód (pl. működőképes, hibás, javítás alatt, tiltott)
        ownerType:
          type: string
          description: Kié az eszköz (pl. PrivátDoktoré, Ügyfélé)<br>
        syncWithBackend:
          type: boolean
          description: "Ha az adott eszközhöz tartozó adott ügyfélre vonatkozó Meta Data rekordbeli Sync with Backend mező értéke null, akkor mi legyen az alapértelmezett szinkronizációs elv: ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját, ha az ügyfél éppen nem csinál semmit, ha false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél"
        metaData:
          type: string
          description: A kliens oldali globális, tehát minden ügyfélre vonatkozó egyedi beállítások eltárolására alkalmas mező.
        pairedWithGuid:
          type: string
          description: Ha az adott eszköz jelenleg össze van párosítva egy adatgyűjtő telefonnal vagy eszközzel, akkor annak a GUID azonosítója.
        serialNumber:
          type: string
          description: Ha a saját eszközünk, akkor annak a gyári cimkén szereplő sorozatszáma, hogy könnyebbé tehető legyen az eszköz bluetooth kapcsoldás folyamata.
        registrationDate:
          type: string
          format: date-time
          description: Az eszköz regisztráció időpontja
        unregistrationDate:
          type: string
          format: date-time
          description: Az deregisztrálásának (törlés kezdeményezésének) időpontja
        clientAppVersion:
          type: string
          description: Az eszköz adatokat meghatározó kliens alkalmazás verzióját tartalmazza, hogy ha kell konevrtálni egy frissebb verzió miatt, akkor azt a kliens el tudja végezni.
        changeOwnerDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az eszköz tulajdonosa megváltozott
        changeLiablerDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az eszköz felelőse megváltozott
        secretKey:
          type: string
          description: Az eszközhöz rendelt titkos kulcs, ami a BLE párosításkor használatos kulcs érték
        groupValidityCount:
          type: integer
          format: int32
          description: Ha az eszköz szolgáltatást csoportosan fizették ki, akkor hány darab megrendelésre vonatkozik a fizetés. Eszerint lesz azonnal aktív a megrendelés (és állítódik be a validityDate mezőbe a groupValidityDate értéke), amikor valamely ügyfél megrendelést ad erre az eszközre, ha aktuálisan még nincs ennyi aktív megrendelő rá.
        groupValidityDate:
          type: string
          format: date-time
          description: Ha az eszköz megrendelését csoportosan fizették ki, akkor mi legyen egyből a megrendeléskor az érvényességi dátum. (De figyelembevéve a groupValidityCount érték szerinti darabszámokat is!)
        color:
          type: string
          description: Az eszköz színe. (Ennek csak bizonyos eszközöknél van jelentősége, pl. véroxigén mérőnél.)
        bookingDate:
          type: string
          format: date-time
          description: Mikor érkezett a webshop felől az eszközre a megrendelés
        passType:
          type: string
          description: Amikor az eszköz átadásra került a felelős ügyfélnek, akkor az milyen formában történt meg (postázva lett, személyesen lett átadva, stb.)
        modifyDate:
          type: string
          format: date-time
          description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
        isOkfoPassed:
          type: boolean
          description: Ha az értéke true, akkor az adott eszköz a felelős személynek az OKFŐ páciens bevonás során lett átadva
        liableUserId:
          type: integer
          description: Melyik felhasználó felelős az eszközért, azaz kinél van
        ownerId:
          type: integer
          description: Az eszköz tulajdonosa. (Ha üres, akkor a PrivátDoktor üzemeltető cég tulajdonában van.)
        modifierId:
          type: integer
          description: A rögzítő vagy utoljára módosító azonosítója
        bookerUserId:
          type: integer
          description: Melyik user végezte az eszköz megrendelését (a webshop-ban)
      required:
        - deviceId
        - type
        - status
        - ownerType
        - syncWithBackend
      type: object
    DeviceMetaData:
      description: Az adott eszköz esetében az adott ügyfélhez tartozó meta adatok.
      properties:
        deviceMetaDataId:
          type: integer
          description: Device Meta Data egyedi azonosítója
        metaData:
          type: string
          description: A kliens oldali egyedi beállítások eltárolására alkalmas mező.
        syncWithBackend:
          type: boolean
          description: Ha értéke true, akkor az eszköz a háttérben elvégezheti az adatok szinkronizációját amikor az ügyfél éppen nem csinál semmit, ha pedig false, akkor csak manuálisan kezdeményezheti a szinkronizációt az ügyfél
        modifyDate:
          type: string
          format: date-time
          description: A meta adatok mikor változtak meg utoljára.
        deviceId:
          type: integer
          description: Device kapcsoló mezője
        userId:
          type: integer
          description: User kapcsoló mezője
      required:
        - deviceMetaDataId
        - syncWithBackend
      type: object
    Dictionary:
      description: A rendszer azonosító, vezérlő és csoportosító információinak azonosítói, nevei és (választáskori) értékei.
      properties:
        dictionaryId:
          type: integer
          description: Dictionary egyedi azonosítója
        dictionaryGroup:
          type: string
          description: "Adott szótár elemek összefogására alkalmas csoport azonosító. (Pl: városok)"
        index:
          type: integer
          format: int32
          description: A szótár csoporton belül hányadik elem. (Lista szerű megjelenítéskor van jelentősége.)
        code:
          type: string
          description: A szótár elem könnyen használható statikus, szöveges azonosítója. (Pl. a városok esetében az irányítószám, string formában)
        name:
          type: string
          description: "A szótárkód megjeleníthető, értelemes elnevezése. (Pl: városok esetében a helység neve)"
        value:
          type: string
          description: "A szótár elem értéke. Opcionális, de némely szótár elem esetében lehet haszna, pl: valamilyen az adott elemhez kötődő vezérlési információ."
      required:
        - dictionaryId
        - dictionaryGroup
        - code
        - name
      type: object
    Document:
      description: Elektronikus dokumentumok
      properties:
        documentId:
          type: integer
          description: Document egyedi azonosítója
        documentType:
          type: string
          description: "A dokumentum típusát jelző szótárkód, pl: PDF, keskeny PDF, hang állomány, kép állomány, link, html, fájl."
        name:
          type: string
          description: A listákban a dokumentum megnevezéseként megjelenő szöveg. (Pácienshez csatolt feltöltött dokumentum esetén itt van a tartalom rövid leírása.)
        path:
          type: string
          description: A dokumentum url elérési útja, vagy hivatkozási azonosítója.
        theDocument:
          type: string
          format: binary
          description: Ha nem elérési úton keresztül található meg a dokumentum, akkor ebben a bináris adatban van.
        documentGuid:
          type: string
          description: A dokumentum GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az állománynév meghatározására.)
        createDate:
          type: string
          format: date-time
          description: A rekord létrehozásának dátuma.
        pdfConvertDate:
          type: string
          format: date-time
          description: A dokumentum Pdf-é konvertálás időpontja.
        originalFileName:
          type: string
          description: A feltöltött dokumentumok esetén az eredeti fájl neve.
        readDate:
          type: string
          format: date-time
          description: Az az időpont, amikor a dokumentum tulajdonosa (azaz a páciens) először megtekintette a dokumentumot.
        mustEesztUpload:
          type: boolean
          description: Ha az értéke true, akkor ennek a dokumentumnak a feltöltését el kell végezni az EESZT rendszer felé
        eesztUploadDate:
          type: string
          format: date-time
          description: Mikor történt meg az EESZT rendszerbe a feltöltés
        externalDocumentId:
          type: string
          description: "A PrivátDoktoron kívüli külső rendszerbeli azonosítója a dokumentumnak (pl: EESZT dokumentum azonosító, amikor sikeresen lezajlott a feltöltés)"
        documentCathegory:
          type: string
          description: A dokumentum kategóriája (pl. anamnézis, template html, stb.)
        groupCode:
          type: string
          description: Akkor van kitöltve, ha az adott dokumentum csoporthoz tartozik. Ilyenkor nem csak a dokumentum tulajdonos és a feltöltő, hanem a csoport vezetői is láthatják a dokumentumot.
        ownerId:
          type: integer
          description: A dokumentum tulajdonosa (általában a páciens, akiről szól a dokumentum)
        uploaderId:
          type: integer
          description: A dokumentum feltöltését végző doktor (vagy esetleg páciens) azonosítója
      required:
        - documentId
        - documentType
      type: object
    EesztReport:
      description: Az EESZT rendszer felé menő késleltetett, több fázisú vagy hosszan tartó adatküldések (pl. EKAT, orvosi mérés kiértékelési dokumentum) állapot információit tartalmazza
      properties:
        eesztReportId:
          type: integer
          description: Eeszt Report egyedi azonosítója
        extTransType:
          type: string
          description: Az adott információ felküldési tranzakció fajtája (pl. EESZT_EKAT, EESZT_DOC)
        eesztOrganization:
          type: string
          description: Annak a szervezetnek az EESZT szervezeti azonosítója, akinek a nevében az adat felküldés történt
        reportStatus:
          type: string
          description: A külső rendszere felküldési folyamat állapota pl. NEW, SENDING, SENDED)
        createDate:
          type: string
          format: date-time
          description: A rekord létrehozásának (azaz a küldési folyamat kezdetének) időpontja
        modifyDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az adott rekord státusza megváltozott
        repeatCount:
          type: integer
          format: int32
          description: A külső parancsot hányszor próbálta már kiadni a rendszer
        prevExternalCommandId:
          type: integer
          format: int32
          description: Ha megismétlésre került a külső parancs, akkor az előző (valószínűleg hibára futott) külső parancs milyen azonosító alatt található az ExternalCommand táblában
        userId:
          type: integer
          description: Melyik felhaszálóra vonatkozik az adat
        doctorId:
          type: integer
          description: Melyik orvos nevében került felküldésre az adat
        externalCommandId:
          type: integer
          description: Annak a külső rendszerbeli parancs vezérlő rekordnak az azonosítója, amelyikben a felküldés történt
        documentId:
          type: integer
          description: Annak a dokumentum rekordnak az azonosítója, ami a felküldés kapcsán a releváns információkat tartalmazza
        analyseId:
          type: integer
          description: Ha ki van töltve, akkor annak az (ügyeletesi) kiértékelésnek azonosítója, ami alapján a dokumentum felküldésre kerül
      required:
        - eesztReportId
      type: object
    Eventlog:
      description: A rendszer működésével kapcsolatos események körülményei, adatai.
      properties:
        eventlogId:
          type: integer
          description: Eventlog egyedi azonosítója
        eventType:
          type: string
          description: Olyan szótárkód, ami az esemény típusát jelenti.
        eventSubtype:
          type: string
          description: Az esemény típuson belüli altípus, ami könnyebbé teszi a szűrést és a csoportosítást.
        eventData:
          type: string
          description: Az eseményhez tartozó pontosító adat.
        eventTime:
          type: string
          format: date-time
          description: Az esemény bekövetkezésének dátuma és időpontja.
        userId:
          type: integer
          description: Melyik felhasználó tevékenysége miatt keletkezett az esemény.
        deviceId:
          type: integer
          description: Melyik eszközre vonatkozik az esemény.
      required:
        - eventlogId
        - eventType
        - eventData
        - eventTime
      type: object
    ExternalCommand:
      description: Olyan külső rendszerek felé menő parancsok, amik aszinkron módon kezelődnek. (Pl. EESZT rendszer funkcióinak használata)
      properties:
        externalCommandId:
          type: integer
          description: External Command egyedi azonosítója
        commandType:
          type: string
          description: A parancs típusa (pl. EESZT_LOGIN_MOTP)
        commandParams:
          type: string
          description: A parancs paraméterei (ide is letárolódnak, hogy könnyebb legyen a hibakeresés, ha a küls rendszer már kitakarította az adott parancsot a saját commands táblájából)
        externalSystem:
          type: string
          description: Annak a külső rendszernek a típusa, ami a parancsot végrehajtja
        externalId:
          type: string
          description: A parancsot végrehajtó külső rendszerben az adott parancs referencia azonosítója
        commandStatus:
          type: string
          description: A parancs feldolgozási állapota (pl. NEW, OK, ERROR)
        createDate:
          type: string
          format: date-time
          description: A parancs kezdeményezésének időpontja
        modifyDate:
          type: string
          format: date-time
          description: A parancs (állapot) utolsó módosulásának illetve a parancs állapot ellenőrzésének időpontja
        endDate:
          type: string
          format: date-time
          description: A parancs feldolgozás befejezésének időpontja (OK vagy ERROR státusz beállásának időpontja)
        validityDate:
          type: string
          format: date-time
          description: A parancs érvényességi dátuma
        commandResult:
          type: string
          description: A parancs befejeződéskor keletkezett eredmény adat (pl. hiba esetén a probléma pontosítása)
        externalTokenId:
          type: integer
          format: int32
          description: A külső rendszerbeli token azonosítója (nem maga a token, hanem csak az azonosítója)
        userId:
          type: integer
          description: A parancsot kezdeményező ügyfél (ill. orvos) azonosítója.
      required:
        - externalCommandId
      type: object
    ExternalData:
      description: A külső rendszerekkel kapcsolatot tartó (pl. import ill. export) állományok tartalma napló szerűen
      properties:
        externalDataId:
          type: integer
          description: External Data egyedi azonosítója
        referenceType:
          type: string
          description: Milyen információ külső adata (pl. importBalanceCsv)
        referenceId:
          type: integer
          format: int32
          description: Milyen referencia rekordhoz kapcsolódik az adat (pl. InvoicingEventlogId érték)
        lineIdx:
          type: integer
          format: int32
          description: Az adott (import/export) állomány hányadik sora
        text:
          type: string
          description: Az adott állomány adott sorának szövege
        resultCode:
          type: string
          description: "A feldolgozás eredménye, pl: OK, ERROR, WARNING"
        comment:
          type: string
          description: A feldolgozáshoz fűzött megjegyzés ill. az eredmény kódot részletező (hiba) adatok
        importDate:
          type: string
          format: date-time
          description: Az importálás dátuma
      required:
        - externalDataId
      type: object
    InvoicingEventlog:
      description: A számlázással kapcsolatos import-export események
      properties:
        invoicingEventlogId:
          type: integer
          description: Invoicing Eventlog egyedi azonosítója
        startDate:
          type: string
          format: date-time
          description: Az adott számlázási esemény kezdetének időpontja
        endDate:
          type: string
          format: date-time
          description: Az adott számlázási esemény befejezésének időpontja
        eventType:
          type: string
          description: Az adott számlázási esemény típusa (pl. számlazási állapot, user export, számla import, stb.)
        sequence:
          type: integer
          format: int32
          description: Az adott típus szerinti sorszám (pl. hányadik ügyfél adat export - ez a sorszám szerepel az export fájl nevében)
        status:
          type: string
          description: Az adott esemény állapota (START,OK,ERROR)
        fileName:
          type: string
          description: Az adott számlázási eseményben szereplő állomány neve (ha fájlra vonatkozik az esemény)
        otherId:
          type: string
          description: Az adott számlázási eseményhez kapcsolódó egyéb azonosító (pl. számla állomány import esetében a külső számla azonosító)
        otherDate:
          type: string
          format: date-time
          description: A számlázási eseményhez kapcsolódó egyéb dátum (pl. milyen adatokig történt a megrendelések leválogatása; vagy pl. a beimportált számla kelte)
        otherValue:
          type: integer
          format: int32
          description: A számlázási eseményhez tartozó egyéb numerikus érték (pl. a számla egyenlege)
        comment:
          type: string
          description: Az eseményhez fűzött megjegyzés
        exportCount:
          type: integer
          format: int32
          description: Az adott típusú funkció lefutása során hány rekord került exportálásra a csv állományba.
        importCount:
          type: integer
          format: int32
        errorCount:
          type: integer
          format: int32
        userId:
          type: integer
          description: Az ügyfél, akire a számlázási esemény vonatkozik
      required:
        - invoicingEventlogId
        - eventType
        - sequence
        - status
      type: object
    ListSelection:
      description: Adott listákban kiválasztott elemek nyilvántartása a konkurens adat használat vezérléséhez.
      properties:
        listSelectionId:
          type: integer
          description: List Selection egyedi azonosítója
        type:
          type: string
          description: A kiválasztás (vagy a kiválasztott elem) típus azonosítása. (pl. ANALYSABLE - a kiértékelendő mérések checkbox-os kiértékeléséhez)
        selectedEntityId:
          type: integer
          format: int32
          description: A típusnak megfelelő kiválasztott entitáson belüli rekord egyedi azonosítója. (Pl. ANALYSABLE típus esetén a mérés Id)
        groupEntityId:
          type: integer
          format: int32
          description: Az adott típushoz tartozóan a kiválasztási csoportként használt rekord egyedi azonosítója. (Pl. ANALYSABLE típus esetében a Kiértékelés azonosító, ami összefogja a kiválasztott Méréseket)
        createDate:
          type: string
          format: date-time
          description: Az a dátum és idő, amikor a kiválasztás megtörtént.
        activityDate:
          type: string
          format: date-time
          description: Az utolsó ezzel a kiválasztással kapcsolatos tevékenység időpontja. Arra alkalmas, hogy az adott kiválasztást követően megítélhető legyen, hogy inaktivitás esetén mikor lehet automatikusan megszüntetni a kiválastottságot.
        selectorId:
          type: integer
          description: A kiválasztást végző felhasználó (pl. orvos) azonosítója
      required:
        - listSelectionId
      type: object
    Measurement:
      description: Mérésekkel kapcsolatos információk
      properties:
        measurementId:
          type: integer
          description: Measurement egyedi azonosítója
        measurementDate:
          type: string
          format: date-time
          description: A mérés időpontja
        localTransferDate:
          type: string
          format: date-time
          description: A lokális adatgyűjtés időpontja, amikor a mérőeszköztől megkapta az adatot a lokális adatgyűjtő eszköz
        serverTransferDate:
          type: string
          format: date-time
          description: Amikor a lokális adatgyűjtő felküldte a szervernek az adatot
        arrivalDate:
          type: string
          format: date-time
          description: Az a dátum, amikor a szerver megkapta az adatot a lokális adatgyűjtő eszköztől vagy a telefontól
        timeLength:
          type: integer
          format: int32
          description: Milyen hosszú időszakra vonatkozik századmásodpercben értelmezve  (pl. 300 000 ms, azaz 5 másodpercnyi információ van az adat szelet(ek)ben)
        measurementType:
          type: string
          description: "A mérési adat típusa. Lehetséges értékei:<br>BLOOD_PRESSURE, BLOOD_SUGAR, ECG, PULSE, stb."
        status:
          type: string
          description: "Az adat státusza<br>Lehetséges értékei pl.:<br>LOADING - szeletelt adta esetén amíg nem érkezik meg az isLastSlice=true tartalmú szelet<br>NEW - új, frissen kapott<br>PROCESSED - értelmezett<br>ARCHIVE - elavult, archíválható"
        latitude:
          type: number
          format: float
          description: A mérés helyszínének szélességi koordinátája
        longitude:
          type: number
          format: float
          description: A mérés helyszínének hosszúsági koordinátája
        activity:
          type: string
          description: "Olyan (ACTIVITY_TYPE típusú) szótárkód érték, ami arra utal, hogy mit csinált a méréskor az ügyfél (pl: futás, úszás, stb.). Alapértelmezése: 'nyugalmi állapot'."
        mealActivity:
          type: string
          description: "Az étkezési szituációra utaló (MEALING_TYPE típusú) szótárkód érték, ami mutathatja, hogy mikor evett a méréshez képest az ügyfél (pl: étkezés előtt van, étkezés után van, stb.). Alapértelmezése: 'két étkezés között'."
        mood:
          type: integer
          format: int32
          description: A mérést végző ügyfél hangulatát jelző érték 1-5 skálán (ahol az 1 jelenti a vidámat - azaz a nagyon jó hangulatot, 3 a normált, 5 pedig a mérges-idegest - azaz a nagyon rossz hangulatot), mert a hangulat általában befolyásolja pl. a vérnyomás értéket.
        symptoms:
          type: string
          description: A méréskor az ügyfél szerint fennáló tünetek (SYMPTOM_TYPE szótárkód alapú) listája vesszővel elválasztva (pl. köhögés, végtagfajdalom).
        hash:
          type: string
          description: A mérési adat duplikáció kizárására használt, a kliens oldalon generált egyediség vizsgálatára alkalmas hash érték.
        userIdx:
          type: integer
          format: int32
          description: A mérés adat feltöltésekor megadott páciens pozíció, ami azt mutatja, hogy ha az adott mérőeszköz képes több felhasználó méréseit is kezelni, akkor azok közül melyikre vonatkozik a mérés.<br>(Ez alapján keresi ki a szerver a tényleges user id-t, az AssignedUser tábla adott pillantbeli beállítása szerint.)
        clientAppVersion:
          type: string
          description: A mérést végző kliens alkalmazás verzióját tartalmazza, hogy ha kell konevrtálni egy frissebb verzió miatt, akkor azt a kliens el tudja végezni.
        measurementVersion:
          type: integer
          format: int32
          default: 0
          description: A mérés struktúra, ill. szeletelési és csomagolási algoritmus verzió azonosítója. (pl. 0 - a régi "egyben" base enkódolt forma, 1 - az adat szeletenkénti base enkódolt forma, stb.) Ezt a mezőt tudja kompatibilitási szempontból elágazásra használni minden olyan programrész, ami mérés szeletek kezelésével foglalkozik.
        requiredAnalyser:
          type: integer
          format: int32
          default: 0
          description: Hány kiértékelő orvosnak kell látnia a mérést.
        requiredController:
          type: integer
          format: int32
          default: 0
          description: A kiértékelő orvos(ok)on kívül hány jóváhagyó orvosnak kell látnia a kiértékelést.
        summary:
          type: string
          description: A mérésre vonatkozó összefoglaló információ, ami alapján pl. a kiértékelési listákban könnyen lehet keresni adott rendellenességi csoportba sorolható méréseket.
        lastUpdate:
          type: string
          format: date-time
          description: A mérés rekordban történt legutolsó módosulás időpontja. (pl. státusz változás - de ide tartozik a kiértékeltségi állapot is)
        metaData:
          type: string
          description: A méréssel kapcsolatos egyedi inforációk eltárolására alkalmas mező (pl. EKG mérés típus esetén a görbéből számított pulzusszám érték).
        calculatedDiagnose:
          type: string
          description: Az előfeldolgozás során kiszámított automatikus diagnózis szerinti kategória (pl. normális, tachycardia, bradicardia, stb.)
        momentaryFirstName:
          type: string
          description: A mérés feltöltésének pillanatában az adott ügyfél keresztneve
        momentaryLastName:
          type: string
          description: A mérés feltöltésének pillanatában az adott ügyfél családi neve
        momentaryName:
          type: string
          description: Kalkulált mező! Az ügyfél pillanatnyi neve a lastName+firstName alapján, hogy a névtöredékre keresési műveletek gyorsíthatók legyenek index-el.
        momentaryLanguage:
          type: string
          description: A mérés felküldésekor az ügyfél nyelvi beállítása, hogy azon a nyelven készülhessen majd a kiértékelés rá
        deleteDate:
          type: string
          format: date-time
          description: Az az időpont, amikor a törölt státuszra állítás lezajlott.
        calculationDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az utolsó diagnózis kalkulációs számítások megtörténtek. (Vagyis amikor a metaData értékek beíródtak.)
        calculationLevel:
          type: integer
          format: int32
          description: A metaData adatokban szereplő értékek milyen szintig készültek el.
        calculationVersion:
          type: string
          description: Melyik kalkulációs algoritmus verzióval történt az utolsó számítás.
        measurementGuid:
          type: string
          description: A mérés GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját.
        userAge:
          type: integer
          format: int32
          description: Az ügyfl életkora a mérés időpontjában (aminek osztott eszköz használatkor külön jelentősége is lehet).
        userGender:
          type: string
          description: Ügyfél neme (a mérés pillanatában, aminek osztott eszköz használatkor külön jelentősége is lehet).
        isOkfoMeasure:
          type: boolean
          description: Akkor true az értéke, ha az adott páciens a mérés időpontjában OKFŐ projektbe bevont személy volt
        errorMessage:
          type: string
          description: A mérés adataival kapcsolatos hiba üzenet(ek)
        userGroup:
          type: string
          description: Ha nem a páciens készítette a mérést, akkor melyik felhasználói csoport vezetője végezte el a mérést a páciensen (pl. alkohol szondáztatás).
        deviceId:
          type: integer
          description: A mérést végző eszköz azonosítója
        collectorId:
          type: integer
          description: Az adatfelküldést végző eszköz azonosítója
        userId:
          type: integer
          description: Belső használatú mező! Annak a felhasználónak az azonosítója, akire a mérés vonatkozik. (Az adatfeltöltéskor a szerver kalkulálja ki a mérőeszköz azonosító + felhasználói eszköz index alapján.)
        regulationId:
          type: integer
          description: Előírás azonosítója, ami alapján a mérést el kell végezni
        realizerId:
          type: integer
          description: Ha csoportos mérésként jött létre (pl. alkohol szondáztatás), akkor a mérést elvégző (csoport vezető) felhasználó azonosítója
      required:
        - measurementId
        - measurementDate
        - measurementType
        - hash
      type: object
    MeasurementData:
      description: A mérésekhez tartozó tényleges adatok. Egy méréshez több mérés adat rekord is tartozhat, ha a mező hossz miatti szeletelésre szükség volt a letároláskor.
      properties:
        measurementDataId:
          type: integer
          description: Measurement Data egyedi azonosítója
        sliceIdx:
          type: integer
          format: int32
          description: Az adatszelet sorszáma
        data:
          type: string
          description: A ténylegesen mért adat (szelet) Base64 formában
        isLastSlice:
          type: boolean
          description: Ha az adott méréshez felküldött szeletek közül ez az utolsó, akkor az értéke true
        arrivalDate:
          type: string
          format: date-time
          description: Az a dátum, amikor a szerver megkapta az adat szeletet a lokális adatgyűjtő eszköztől vagy a telefontól
        isBadSlice:
          type: boolean
          description: Ha értéke true, akkor valamely (elő)feldolgozási folyamat ebben a szeletben irreleváns vagy értelmezhetetlen adatokat talált
        measurementId:
          type: integer
          description: Measurement kapcsoló mezője
      required:
        - measurementDataId
        - sliceIdx
        - data
      type: object
    MeasurementEvent:
      description: A mérés állapot változásaival és feldolgozásával kapcsolatos események naplója.
      properties:
        measurementEventId:
          type: integer
          description: Measurement Event egyedi azonosítója
        eventType:
          type: string
          description: Olyan szótárkód, ami az esemény típusát jelenti.
        eventData:
          type: string
          description: Az eseménnyel kapcsolatos lényeges adat, pl. milyen állapotról milyen állapotra változott a mérés vagy a kiértékelés.
        eventTime:
          type: string
          format: date-time
          description: Az esemény bekövetkezésének dátuma és időpontja.
        text:
          type: string
          description: Egyéb az eseményhez köthető információk adata, pl. elemzés részletes szövege (HTML formátumban) az adott állapotváltáskor.
        measurementId:
          type: integer
          description: A mérés azonosítója, amire az esemény vonatkozik.
        userId:
          type: integer
          description: Az eseményt előidéző vagy végrehajtó ügyfél (ill. orvos) azonosítója.
        analyseId:
          type: integer
          description: A kiértékelés azonosítója, amire az esemény vonatkozik
      required:
        - measurementEventId
        - eventType
        - eventData
        - eventTime
      type: object
    Notification:
      description: Az ügyfeleknek szóló értesítések adatai
      properties:
        notificationId:
          type: integer
          description: Notification egyedi azonosítója
        priority:
          type: integer
          format: int32
          description: Az értesítés fontossága (0-100 közötti érték, ahol a 0 értékűek kerülnek kiküldésre leghamarabb)
        createDate:
          type: string
          format: date-time
          description: Az üzenet keletkezése<br>
        scheduleDate:
          type: string
          format: date-time
          description: Az a legkorábbi időpont, amikor az értesítés már kiküldhető (általában a CreateDate-el azonos értékű - azaz az értesítés keletkezését követően bármikor kiküldhető)
        sendDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az üzenet a megfelelő kiküldő platform felé átadásra került
        viewDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az adott elemet (pl. kiértékelést) megtekintette az, akinek ment az értesítés.
        platform:
          type: string
          description: Milyen üzenetküldő rendszeren keresztül kell továbbítani (pl. Email, Push)
        notificationType:
          type: string
          description: Értesítés típusa (pl. NOTIFY_USER_ANALYSE, NOTIFY_DOCTOR_ANALYSE), amivel csoportosítható és egy üzenetként mehetnek ki az azonos címzetthez tartozó üzenetek
        groupable:
          type: boolean
          description: Ha értéke true, akkor több, ugyanahhoz az ügyfélhez tartozó, ugyanilyen értesítési típusú üzenet egyben is kiküldhető
        subject:
          type: string
          description: Az üzenet tárgya, azaz a rövid tartalma
        message:
          type: string
          description: Az üzenet szövege
        referenceType:
          type: string
          description: Annak az objektumnak a típusa, ami miatt az értesítés keletkezett (pl. kiértékelés publikussá válása)
        reference:
          type: string
          description: Annak az objektumnak az azonosítója, ami miatt az értesítés keletkezett (pl. publikus állapotú kiértékelés rekord azonosítója)
        enabled:
          type: boolean
          description: Csak akkor kerül elküldésre az értesítés, ha ez a mező true értékű
        referenceGuid:
          type: string
          description: Annak a rekordnak a Guid azonosítója (pl. kiértékelés Guid azonosítója), amire a konzultációs kérés vonatkozik.
        userId:
          type: integer
          description: Melyik felhasználónak szól az üzenet
      required:
        - notificationId
      type: object
    OrderPayment:
      description: Adott fizetési folyamathoz tartozó megrendelés(ek) kapcsolója
      properties:
        orderPaymentId:
          type: integer
          description: Order Payment egyedi azonosítója
        createDate:
          type: string
          format: date-time
          description: Az a dátum és időpont, amikor a fizetési folyamat létrejött (valójában annak a fizetési folyamatnak a StartDate-je, amivel kapcsolatos a megrendelés), hogy keresésekben szűrni lehessen időpontra
        userOrderId:
          type: integer
          description: Melyik fizetésre vonatkozik a megrendelés
        paymentId:
          type: integer
          description: Melyik fizetésbe szerepel a megrendelés
      required:
        - orderPaymentId
      type: object
    Payment:
      description: Fizetési folyamat alap adatai
      properties:
        paymentId:
          type: integer
          description: Payment egyedi azonosítója
        serviceProvider:
          type: string
          description: "Annak a szolgáltatónak a kódja (pl: STRIPE), akinél a fizetési tranzakció történik."
        externalSessionId:
          type: string
          description: A pénzügyi szolgáltató által használt fizetési folyamat egyedi azonosító (pl. session id)
        externalPaymentId:
          type: string
          description: A pénzügyi szolgáltató által használt fizetési egyedi azonosító (pl. payment inetent id)
        amount:
          type: integer
          format: int32
          description: A fizetendő összeg
        paymentStatus:
          type: string
        startDate:
          type: string
          format: date-time
          description: A fizetési folyamat kezdő dátuma és időpontja
        endDate:
          type: string
          format: date-time
          description: A fizetési folyamat befejeződésének dátuma és időpontja
        lastModifyDate:
          type: string
          format: date-time
          description: Az utolsó módosulás dátuma
        clientAppVersion:
          type: string
          description: Annak a kliens alkalmazásnak a verzióját tartalmazza, ahonnan a fizetés kezdeményezése történt
        payerId:
          type: integer
          description: A fizetést kezdeményező felhasználó
      required:
        - paymentId
      type: object
    PaymentEvent:
      description: Fizetéshez kapcsolódó események
      properties:
        paymentEventId:
          type: integer
          description: Payment Event egyedi azonosítója
        system:
          type: string
          description: Annak arendszernek az azonosítója, aki az esemény küldőjének számít. (pl. PD - a PrivátDoktor rendszer, STRIPE - a Stripe.com külső elektronikus fizetési szolgáltató)
        eventExternalId:
          type: string
          description: Az esemény forrás rendszerbeli azonosítója (amire hivatkoza lehet pl. reklamációt kezdeményezni az adott rendszerben)
        eventType:
          type: string
          description: A fizetési esemény típusa
        eventStatus:
          type: string
          description: Az esemény milyen feldolgozottsági állapotban van (ARRIVED,PROCESSING,PROCESSED,ERROR)
        arrivalDate:
          type: string
          format: date-time
          description: Az adott esemény mikor érkezett a PrivátDoktor rendszerbe (pl. a webhook visszahívás segítségével)
        processedDate:
          type: string
          format: date-time
          description: Mikor történt meg az esemény feldolgozása
        paymentId:
          type: integer
          description: Meylik fizetésre vonatkozik az esemény
      required:
        - paymentEventId
      type: object
    PaymentMetaData:
      description: Fizetés vagy fizetési esemény teszőleges hosszúságú metaadatai (pl. a fizetés session indítsok átadott adatok, vagy a webhook visszahíváson kapott esemény részletes adatai) - lényegében a hibakereséshez használható napló adatok
      properties:
        paymentMetaDataId:
          type: integer
          description: Payment Meta Data egyedi azonosítója
        dataType:
          type: string
          description: Milyen metaadatról van szó (pl. PARAMDATA - Fizetési folyamat adata, EVENTDATA - Fizetési esemény adata, ERRORDATA - Fizetési esemény feldolgozási hiba adata)
        metaData:
          type: string
          description: A tényleges metaadat (a JSON objektumok is string formában)
        paymentId:
          type: integer
          description: Melyik fizetési folyamathoz tartoznak közvetlenül vagy közvetve az adatok
        paymentEventId:
          type: integer
          description: Ha fizetési esemény metaadata, akkor annak az esemény egyedi azonosítója
      required:
        - paymentMetaDataId
      type: object
    ProcessedData:
      description: Az automatikus (elő)feldolgozás információi.
      properties:
        processedDataId:
          type: integer
          description: Processed Data egyedi azonosítója
        startDate:
          type: string
          format: date-time
          description: Az automatikus elemző folyamat elindulásának időpontja.
        endDate:
          type: string
          format: date-time
          description: Az automatikus elemzés befejezésének időpontja. Ha nincs kitöltve, akkor még nem fejeződött be az elemzés.
        status:
          type: string
          description: "Az elemzés állapotát jelző szótárkód (pl: jóváhagyandó, jóváhagyott, felülvizsgálandó, hibás)."
        alarmType:
          type: string
          description: "A mérés elemzése alapján szükségesnek vélt riasztási kód (pl: rendben, figyelmeztetés, veszélyes, életveszélyes).<br>Beállítása az automatikus kiértékelése során valamely elemzési szabály alapján történik, vagy ha egy orvos a mérés elemzésekor be- vagy átállítja. (Az aktuális értéknek mindig az End date szerint rendezett rekordok közül a legfrissebből származót tekinti a rendszer!)<br>"
        comment:
          type: string
          description: "A mérési adat feldolgozással kapcsolatos megjegyzés, pl:<br>- automatikus elemzés esetén értéke 'Automatikus'<br>- ha egy orvos állította be vagy át a Riasztási típust, akkor pedig az orvos megjegyzése az átállítás okáról"
        measurementId:
          type: integer
          description: Measurement kapcsoló mezője
        analyseRuleId:
          type: integer
          description: Annak a kiértékelési szabálynak az azonosítója, amit az (elő)feldolgozás során használt a rendszer.
        alarmerId:
          type: integer
          description: A riasztási szintet be- vagy átállító (orvos) azonosítója
      required:
        - processedDataId
        - startDate
        - status
        - alarmType
        - comment
      type: object
    ProductPackage:
      description: Adott termék típusra vonatkozó alapértelmezett díjcsomag
      properties:
        productPackageId:
          type: integer
          description: Product Package egyedi azonosítója
        productType:
          type: string
          description: Az a termék típus kód, amire vonatkozik a díj (pl. Rendszerhasználati díj, Eszöz bérlési díj, Eszköz vásárlási díj)
        deviceType:
          type: string
          description: Az az eszköz típus kód, amire vonatkozik az adott termék típus díj (pl. PrivatDoktorEKG, OmronViva9210, Roche, stb)
        fee01:
          type: integer
          format: int32
          description: Az 1 havonat fizetett alapértelmezett díj
        fee03:
          type: integer
          format: int32
          description: A 3 havonta (negyedévente) fizetett alapértelmezett díj
        fee06:
          type: integer
          format: int32
          description: A 6 havonta (félévente) fizetett alapértelmezett díj
        fee12:
          type: integer
          format: int32
          description: A 12 havonta (évente) fizetett alapértelmezett díj
        vat:
          type: integer
          format: int32
          description: A bruttó ár kiszámításához használandó ÁFA (%) értéke, pl. 27(%)
        defaultPeriod:
          type: integer
          format: int32
          default: 1
          description: Az adott termék eszköznél használatos alapértelmezett fizetési gyakoriság (1=Fee01, 2=Fee03, 3=Fee06, 4=Fee12)
        validFrom:
          type: string
          format: date-time
          description: Ettől az időponttól kezdve választható ki az adott díjcsomag
        validTo:
          type: string
          format: date-time
          description: Eddig az ideig választható ki az adott díjcsomag
        documentId:
          type: integer
          description: A szolgáltatás csomag leírását tartalmazó dokumentum azonosítója
      required:
        - productPackageId
        - productType
        - deviceType
        - validFrom
      type: object
    ProductSale:
      description: A számlázó rendszer felől visszajelzett, megrendelés/termék befizetési lista, ami a productValidity.csv állományon keresztül lett beimportálva - a jutalékok ez alapján ismerhetőek el
      properties:
        productSaleId:
          type: integer
          description: Product Sale egyedi azonosítója
        productFee:
          type: integer
          format: int32
          description: A megrendelés ellenértékeként befizetett tényleges nettó összeg
        valueDate:
          type: string
          format: date-time
          description: Mikor történt a befizetés (könyvelése)
        productValidityDate:
          type: string
          format: date-time
          description: A befizetés hatására meddig érvényes az adott megrendelés
        reasonReferenceLine:
          type: integer
          format: int32
          description: Ha forrás adat az adott csv állomány hányadik sora volt
        enabled:
          type: boolean
          description: Ez a tétel részt vehet-e a jutalék jóváírásokban
        userId:
          type: integer
          description: User kapcsoló mezője
        userOrderId:
          type: integer
          description: User Order kapcsoló mezője
        deviceId:
          type: integer
          description: Device kapcsoló mezője
        invoicingEventlogId:
          type: integer
          description: Melyik import állományban volt a befizetésről az adat
      required:
        - productSaleId
      type: object
    Protocol:
      description: A páciensek számára meghatározott mérési protokollok (ismertetők), ami alapján egyértelmű, hogy milyen gyakorisággal milyen tevékenységeket kell végezni és ennek mi a célja
      properties:
        protocolId:
          type: integer
          description: Protocol egyedi azonosítója
        name:
          type: string
          description: Az adott protokoll rövid megnevezése (pl. 3x2 perces mérés)
        description:
          type: string
          description: A protokoll tevékenységeinek és céljainak részletes leírása
        enabled:
          type: boolean
          description: Ha értéke true, akkor kiválasztható a protokoll listából (egyébként csak indirekt marad meg, hogy a már ilyen protokollú ügyfél-eszköz hozzárendelések egyértelműek maradjanak)
        createDate:
          type: string
          format: date-time
        cathegory:
          type: string
          description: Protokollok csoportba sorolására alkalmas kategória kód (pl. OKFO)
        creatorId:
          type: integer
          description: Ki hozta létre az adott protokoll leírását
      required:
        - protocolId
      type: object
    Regulation:
      description: Valamely felhasználóra vonatkozóan adott időpontra, vagy időszakra elvárt tevékenység típusa és paraméterei.
      properties:
        regulationId:
          type: integer
          description: Regulation egyedi azonosítója
        regulationType:
          type: string
          description: "Az előírás típus szótárkódja, pl: vérnyomás mérése."
        name:
          type: string
          description: "Az előírás rövid szövege, pl: elvégzendő gyógyszer bevétel, elvégzendő vérnyomás mérés, stb."
        description:
          type: string
          description: "Az előíráshoz tartozó részletes szöveg, ami akkor van kitöltve, ha a rövid név nem egyértelmű. Pl: a gyógyszer bevétel típusú előírásnál a gyógyszer neve."
        status:
          type: string
          description: "Az előírás állapotát mutató szótárkód (pl: aktív, tiltott)."
        parameter:
          type: string
          description: "Az előírásra vonatkozó egyéb paraméterek, pl: hány szemet kell bevenni az adott gyógyszerből."
        cycle:
          type: string
          description: "Az előírás ciklikussága (pl: minden munkanapon 12:00-kor)."
      required:
        - regulationId
        - regulationType
        - status
      type: object
    Semaphore:
      description: Egy olyan technikai tábla, aminek a segítségével az egyidejűleg végezhető kritikus műveletek kizárása történhet. Az esemény vezérelt szituációknál és a szerverek közötti terhelés megosztási helyzeteknél van szerepe.<br>Pl. mérés feldolgozási állapot változások kezelése.
      properties:
        semaphoreId:
          type: integer
          description: Semaphore egyedi azonosítója
        type:
          type: string
          description: "A szemafor azonosításhoz használt típus, ami az InstanceId-val együtt tekinthető a szemafor egyedi azonosítójának. Pl: 'measurementState'"
        instanceId:
          type: string
          description: "Annak a komponensnek a példány egyedi azonosítója, amire az adott szemafor a kizárást megvalósítja. Pl: mérés rekord measurementId mezőjének értéke."
        value:
          type: string
          description: A szemaforhoz tartozó egyéb adat.
        createDate:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
      required:
        - semaphoreId
      type: object
    Statistic:
      description: Általános statisztikai adatok
      properties:
        statisticId:
          type: integer
          description: Statistic egyedi azonosítója
        code:
          type: string
          description: A statisztika típusa, amivel csoportosítani lehet a statisztikai adatokat
        dateGroup:
          type: string
          description: Az adott statisztikai típuson belüli idő szerinti csoport azonosítója (pl. napi statisztikai adat esetében ÉÉÉÉHHNN értéke)
        name:
          type: string
          description: "A statisztikai elem azonosító neve (Pl: a rest hívás url-je)"
        value:
          type: string
          description: Az adott kódú és nevű statisztika (nem numerikus) adata
        intValue:
          type: integer
          format: int32
          description: Az adott kódú és nevű statisztika numerikus, tehát inkrementálható adata
        userId:
          type: integer
          format: int32
          description: Az adott kódú és nevű statisztikai adat utolsó változtatását eredményező ügyfél azonosítója.<br>(Nem forign key kapcsolat, hogy ügyfél törlése esetén is megmaradhasson a statisztikai adat rekord!)
        xapiversion:
          type: string
          description: Az utolsó sikeres bejelentkezéskor a login kérésben szereplő kliens oldali API azonosító x-api-version header értéke
        xclientversion:
          type: string
          description: Az utolsó sikeres bejelentkezéskor a login kérésben szereplő platform azonosító x-client-version header értéke
        lastModifyDate:
          type: string
          format: date-time
      required:
        - statisticId
        - code
        - name
      type: object
    Term:
      description: A rendszer felhasználásakor elfogandandó szabályzatok verzióit tartalmazó vezérlő állomány.
      properties:
        termId:
          type: integer
          description: Term egyedi azonosítója
        type:
          type: string
          description: Az adott szabályzat típus azonosítója (pl. EULA, Privacy, stb.)
        version:
          type: string
          description: Az adott típusú szabályzat verziójának azonosítója (pl. v1.0 vagy 20190101)<br>
        name:
          type: string
          description: A szabályzat hosszú elnevezése
        mandatory:
          type: boolean
          description: Ha értéke kötelező, akkor az ügyfélnek feltétlenül el kell fogadni (az első adandó alkalommal), hogy használhassa a rendszert
        validFrom:
          type: string
          format: date-time
          description: Az az időpont, amikortól kezdve az adott szabályzat látható az ügyfelek számára. Adott típuson belül az érvényesség kezdete dátum szerinti sorrendben az utolsó (azaz a legfrissebb) számít mindig a rendszer szempontjából az aktuálisnak!
        enabled:
          type: boolean
          description: Csak akkor vesz részt az aktuálisan érvényes (azaz az ügyfél által elfogadható) szabályzat típusok listájának összeállításában, ha az értéke true.
        index:
          type: integer
          format: int32
          description: A szabályok megjelenítésekor hányadik a sorrendben.
        isSupplementary:
          type: boolean
          description: Ha értéke true, akkor nem alap szabálzyat, hanem a felüldefiniáláshoz használatos kiegészítő szabályzat (pl. OKFŐ doktorokra vonatkozó Szolgáltatási szabályzat)
        supplementaryRules:
          type: string
          description: "Ha ezt a szabályzatot bizonyos esetekben felül kell definiálni (pl. az alap Szolgáltatási Szabályzat helyett az OKFŐ doktorokra vonatkozó szolgáltatási szabályzatot kell elfogadtatni az ügyféllel), akkor ebben a mezőben van megadva, hogy milyen ellenőrzés típus esetén melyik terms rekordbeli szabályzatot kell elfogadtatni (pl: {checkOkfoDoctor: 17, checkOkfoPatient: 18})"
        documentId:
          type: integer
          description: A szabályzat megjeleníthető szövegét tartalmazó dokumentum azonosítója
      required:
        - termId
      type: object
    User:
      description: "Felhasználói adatok. A UserID kötelező, ezért request esetén (pl: /registerUser) 0-át kell itt átadni!"
      properties:
        userId:
          type: integer
          description: User egyedi azonosítója
        firstName:
          type: string
          description: Az ügyfél keresztneve
        lastName:
          type: string
          description: Az ügyfél családi neve
        email:
          type: string
          description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
        phoneNumber:
          type: string
          description: Max. 18, csak szám.
        language:
          type: string
          description: Nyelv (hu, en, ch, ...)
        userStatus:
          type: string
          description: "A felhasználó állapotát jelző szótárkód (pl: regiszráció alatt, aktív, deregisztrált).<br>"
        metaData:
          type: string
          description: A kliens oldali egyedi beállítások eltárolására alkalmas mező.
        postalCode:
          type: string
        city:
          type: string
          description: Min. 1, max. 30 karakter.
        address:
          type: string
          description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 30 karakter.<br>
        socialSecurityNumber:
          type: string
          description: A társadalombiztosítási azonosító (TAJ szám)
        identityType:
          type: string
          description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
        identityNumber:
          type: string
          description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
        birthYear:
          type: integer
          format: int32
          description: A személy természetes azonosítói közül a születési dátumból az év
        birthMonth:
          type: integer
          format: int32
          description: A személy természetes azonosítói közül a születési dátumból az hónap
        birthDay:
          type: integer
          format: int32
          description: A személy természetes azonosítói közül a születési dátumból a nap
        birthPlace:
          type: string
          description: Születési hely
        motherName:
          type: string
        gender:
          type: string
        loginToken:
          type: string
          description: JWT offline/refresh token. 30 naponta törölni kellene a szerver oldalon az adatbázisból, hogy mindenképpen újra be kelljen név/jelszóval lépni.
        loginCert:
          type: string
          description: A felhasználói bejelentkezéshez használható tanúsítvány publikus kulcs fele. Elsősorban a lokális adatgyűjtőeszközök esetében használatos arra, hogy a bejelentkezés ne jelszó alapon történjen.
        kcUserId:
          type: string
          description: A felhasználó azonosítója az authorizációs szerveren (Keycloak).
        registrationDate:
          type: string
          format: date-time
          description: A felhasználói regisztráció időpontja
        unregistrationDate:
          type: string
          format: date-time
          description: Az az időpont, amikor a felhasználó jelezte, hogy meg akarja szüntetni a regisztrációját a rendszerben
        userGuid:
          type: string
          description: A felhasználó GUID alapú egyedi azonosítója, ami véletlenszerűen képződik és próbálgatással jelentősen nehezebb kitalálni, mint az egyszerű integer alapú azonosítóját. (Biztonsági okok miatt ez használatos pl. az ügyfél dokumentum állományainál az alkönyvtárnév meghatározására.)
        invoiceName:
          type: string
          description: Az ügyfélnek szóló számlákra írandó ügyfél név.
        invoicePostalCode:
          type: string
        invoiceCity:
          type: string
        invoiceAddress:
          type: string
          description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 50 karakter.
        deliveryPostalCode:
          type: string
        deliveryCity:
          type: string
        deliveryAddress:
          type: string
          description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 50 karakter.
        taxNumber:
          type: string
        userChecking:
          type: boolean
          description: Az értéke akkor true, ha a számlázás szempontjából valami olyan adateltérést érzékelt a rendszer, ami miatt esetleg aktualizálni kell majd az ügyfél valamely adatát és addig nem szabad számlát kiállítani a számára.
        checkStartDate:
          type: string
          format: date-time
          description: Az az időpont amikor az adategyeztetés szüksége felmerült
        checkEndDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az ügyfél adategyeztetés befejeződött
        defaultFeePeriod:
          type: integer
          format: int32
          default: 1
          description: Ez az fizetési gyakoriság lesz beálítva a következő szolgáltatás megrendelésekor (1, 3, 6, 12 hónap).
        balance:
          type: integer
          format: int32
          default: 0
          description: Az ügyfél által befizetett, de még díj rendezésére fel nem használt összeg.
        balanceDate:
          type: string
          format: date-time
          description: Az az időpont, amikor utoljára aktualizálva lett az Egyenleg mező értéke.
        primaryCardType:
          type: string
          description: Az ügyfél személyes azonosítására használt irat típusa (pl. személyi igazolvány)
        primaryCardNumber:
          type: string
          description: Az ügyfél személyes azonosítására használt irat (pl. személyi igazolvány) azonosító száma
        secondaryCardType:
          type: string
          description: Az ügyfél személyes azonosítására használt másodlagos irat típusa (pl. jogosítvány)
        secondaryCardNumber:
          type: string
          description: Az ügyfél személyes azonosítására használt másodlagos irat (pl. jogosítvány) azonosító száma
        suspendDate:
          type: string
          format: date-time
          description: Az utolsó megrendelés nem fizetés miatti letiltás időpontja
        modifyDate:
          type: string
          format: date-time
          description: A számlázás során lényeges ügyfél adatok mikor változtak meg utoljára.
        modifyReason:
          type: string
          description: "Az utolsó módosítás milyen funkció miatt történt (pl: IMPORT, ADMIN)"
        reasonReference:
          type: integer
          format: int32
          description: "A módosításhoz kapcsolódó referencia azonosító (pl: ha a modifyReason=IMPORT, akkor az adott import állományhoz tartozó invoicingEventlogId)"
        reasonReferenceLine:
          type: integer
          format: int32
          description: Ha a módosítás import állomány miatt keletkezett, akkor az adott csv állomány hányadik sora a forrás adat
        userName:
          type: string
          description: Kalkulált mező! Az ügyfél neve a lastName+firstName alapján, hogy a névtöredékre keresési műveletek gyorsíthatók legyenek index-el.
        stamp:
          type: string
          description: Az EESZT rendszerben használható orvosi pecsét azonosító száma
        eesztBindingDate:
          type: string
          format: date-time
          description: Az a dátum, amikor megtörtént az ügyfél EESZT rendszerhez rendelése
        eesztOrganization:
          type: string
          description: Ha az adott ügyfél orvos, akkor az az EESZT szervetei azonosító (Exxxx érték), ami mutatja, hogy mely szervezet nevében végzi az adatok feltöltését
        isEesztUploader:
          type: boolean
          description: Értéke true, ha az ügyfél olyan orvos, aki tölt fel adatokat az EESZT rendszerbe
        inviteDate:
          type: string
          format: date-time
          description: Az az időpont, amikor az adott ügyfelet előregisztrálta a meghívó orvos
        okfoPlannedEndDate:
          type: string
          format: date-time
          description: Az adott ügyfél számára a tervezett OKFŐ projekt részvétel befejezési dátum
        okfoEndDate:
          type: string
          format: date-time
          description: Az adott ügyfél számára a tényleges OKFŐ projekt részvétel befejezési dátum
        mustChangePassword:
          type: boolean
          description: Ha értéke true, akkor a következő login során kötelező a kliens programnak kierőszakolnia, hogy az ügyfél lecserélje a jelszavát
        okfoEndRating:
          type: string
          description: Az Okfő projekt lezárásakor a bevonó orvos által tett értékelés(i kód) - pl. SUCCESSFUL, FAILED
        okfoEndComment:
          type: string
          description: Az Okfő projekt lezárásakor a bevonó orvos által tett szöveges megjegyzés
        externalId:
          type: integer
          format: int32
          description: Az adott ügyfél külső rendszerbeli azonosítója (pl. eeszt miatt az interfész rendszerbeli azonosító)
        eesztDisabled:
          type: boolean
          description: Ha értéke true, akkor technikai okok miatt az adott ügyfél semmilyen adata nem kerülhet fel az EESZT rendszerbe (pl. azért, mert technikai vagy teszt ügyfél)
        modifierId:
          type: integer
          description: User kapcsoló mezője
        inviterUserId:
          type: integer
          description: Melyik orvos végezte az előregisztrációt erre az ügyfélre
      required:
        - userId
        - firstName
        - lastName
        - email
        - language
      type: object
    UserActivity:
      description: Az ügyfelek aktivitásaira jellemző adatok (pl. utolsó bejelentkezés, kijelentkezés, stb.)
      properties:
        userActivityId:
          type: integer
          description: User Activity egyedi azonosítója
        lastLoginDate:
          type: string
          format: date-time
          description: Az utolsó sikeres bejelentkezés dátuma
        lastLogoutDate:
          type: string
          format: date-time
          description: Az utolsó sikeres kijelentkezés dátuma
        lastActivityDate:
          type: string
          format: date-time
          description: Az utolsó ügyfél aktivitás dátuma
        lastEesztLoginDate:
          type: string
          format: date-time
          description: Az utolsó sikeres bejelentkezés dátuma az EESZT renszerbe
        lastEesztLogoutDate:
          type: string
          format: date-time
          description: Az utolsó sikeres kijelentkezés dátuma az EESZT rendszerbe
        lastXapiversion:
          type: string
          description: Az utolsó sikeres bejelentkezéskor a login kérésben szereplő kliens oldali API azonosító x-api-version header értéke
        lastXclientversion:
          type: string
          description: Az utolsó sikeres bejelentkezéskor a login kérésben szereplő platform azonosító x-client-version header értéke
        lastAclientversion:
          type: string
          description: Az utolsó sikeres Androidos bejelentkezéskor a login kérésben szereplő platform azonosító x-client-version header értéke
        lastAloginDate:
          type: string
          format: date-time
          description: Az utolsó sikeres Androidos bejelentkezés időpontja
        lastIclientversion:
          type: string
          description: Az utolsó sikeres IOS-es bejelentkezéskor a login kérésben szereplő platform azonosító x-client-version header értéke
        lastIloginDate:
          type: string
          format: date-time
          description: Az utolsó sikeres IOS-es bejelentkezés időpontja
        lastWclientversion:
          type: string
          description: Az utolsó sikeres Web-se bejelentkezéskor a login kérésben szereplő platform azonosító x-client-version header értéke
        lastWloginDate:
          type: string
          format: date-time
          description: Az utolsó sikeres Web-es bejelentkezés időpontja
        userId:
          type: integer
          description: User kapcsoló mezője
      required:
        - userActivityId
      type: object
    UserDeviceHistory:
      description: Azt tartalmazza, hogy az ügyfelek mely eszközöket regisztrálták már és hogy az adott regisztráció még érvényes-e. (Mivel a kliens alkalmazások offline módon is tudnak működni, ezért szükség van annak tárolására is, hogy mely eszközöket deregisztrálta az ügyfél, hiszen ezt az infót is le kell tudni küldeni a getMyDevice funkció válaszában.)<br>Szintén ebbe a táblába kerülnek bele azok körülmények is, hogy ha az adott ügyfél az OKFŐ projekt kapcsán vagy a háziorvosától megkap ill. visszaad valamely eszközt.
      properties:
        userDeviceHistoryId:
          type: integer
          description: User Device History egyedi azonosítója
        registrationStatus:
          type: string
        registrationDate:
          type: string
          format: date-time
        unregistrationDate:
          type: string
          format: date-time
        lastUserIdx:
          type: integer
          format: int32
          description: Az adott ügyél-eszköz párosításkor mi volt a userIdx értéke.<br>(Ennek a nem nevesített osztott eszköz használatnál van jelentősége, hogy megszakadjon a méréstörténet.)
        passType:
          type: string
          description: Az eszköz átadása milyen formában történt (HANDOVER, POSTED)
        repassType:
          type: string
          description: Az eszköz visszavétele milyen formában történt (PASS, RENT, PURCHASE, SCRAP)
        userId:
          type: integer
          description: Az eszköz regisztrálását végrehajtó ügyfél azonosítója
        deviceId:
          type: integer
          description: Az ügyfélhez regisztrált eszköz azonosítója
        fromUserId:
          type: integer
          description: Eszköz átadás esetén annak a user-nek az azonosítója, aki az eszköz előző felelőse volt
      required:
        - userDeviceHistoryId
        - registrationStatus
      type: object
    UserGroup:
      description: A felhasználók különböző szempontok szerinti csoportosítása.
      properties:
        userGroupId:
          type: integer
          description: User group egyedi azonosítója
        groupType:
          type: string
          description: Olyan szótárkód, ami a csoport típusát jelenti.
        index:
          type: integer
          format: int32
          description: A csoporton belüli pozíció (amit pl. megjelenítési sorrendként lehet használni).
        patientId:
          type: integer
          format: int32
          description: Ha a csoport típus<br>- GROUP_DROLE_GENERAL, akkor azt tartalmazza, hogy melyik páciensnek a kezelőorvosa<br>- GROUP_PCROLE_RELATIVE, akkor hogy melyik páciensnek a hozzátartozója
        fromDate:
          type: string
          format: date-time
          description: Az az időpont, amikortól érvényes az adott csoportba tartozás.
        toDate:
          type: string
          format: date-time
          description: Az az időpont, ameddig érvényes az adott csoportba tartozás.
        comment:
          type: string
          description: Az adott csoport kapcsolathoz tartozó megjegyzés (pl. inviteGeneralDoctor esetén az adott ügyfél adott orvossal kapcsolatos leírás adata)
        groupRole:
          type: string
          description: A userId-ben lévő ügyfél az adott csoporton belül milyen szerepet tölt be (pl. csoporttag MEMBER, csoport vezető - LEADER, intézmény vezető - BOSS, csoport látogató - GROUPVISITOR). Elsősorban a csoportos mérések szervezeti felépítésének tükrözésére alkalmas.<br>Alapértelmezésben az értéke üres, azaz egyszerű csoport tag.
        userId:
          type: integer
          description: A csoporthoz tartozó felhasználó azonosítója
        modifierId:
          type: integer
          description: Csoporthoz rendelést végző (vagy megváltoztató) felhasználó azonosítója
      required:
        - userGroupId
        - groupType
      type: object
    UserOrder:
      description: Az ügyfelek által megrendelt szolgáltatások, amelyek a számlázás során figyelembe kell venni
      properties:
        userOrderId:
          type: integer
          description: User Order egyedi azonosítója
        orderDate:
          type: string
          format: date-time
          description: Az a kezdő időpont, amikor a megrendelés történt
        fee:
          type: integer
          format: int32
          description: Az az összeg, amit a meghatározott gyakorisággal az adott ügyfélnek ténylegesen fizetnie kell ezért a meghatározott szolgáltatásért. (Értéke eltérhet a díjcsomagban meghatározott díjtól, ha valamilyen ok miatt, pl. kedvezmény adása m iatt, az alapértelmezés felülbírálásra került.)
        vat:
          type: integer
          format: int32
          description: A bruttó ár kiszámításához használandó ÁFA (%) értéke, pl. 27(%)
        financialLiability:
          type: boolean
          description: Ha értéke true, akkor ez a tétel ténylegesen fizetendő, egyébként csak a számlán tételként szerepeltetendő, de nem jelent tényleges fizetési kötelezettséget (pl. mert vásárolt eszközre vonatkozik, aminek a kifizetése már megtörtént)
        financialLiabilityReadyDate:
          type: string
          format: date-time
          description: Ha az adott tétel fizetendő, akkor mikor történt meg az egyszeri tényleges átadás a számlázó rendszer felé. Ha értéke üres, akkor még nem történt meg.
        duration:
          type: integer
          format: int32
          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
        paymentDeadline:
          type: integer
          format: int32
          description: Fzetési határidő, alapértelmezésben 8 nap
        paymentInterval:
          type: integer
          format: int32
          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
        firstValidityDate:
          type: string
          format: date-time
          description: Az a dátum, amikor legelőször átadásra került a megrendelés tétel a számlázás felé
        validityDate:
          type: string
          format: date-time
          description: "Az az érvényességi dátum, amit a rendszer visszakapott számlázó rendszer felől - a jelentése: eddig a dátumig tekinthető rendezettnek az adott megrendelési tétel díja"
        baseFee:
          type: integer
          format: int32
          description: Az az összeg, ami a megrendelés felvételekor a kiválasztott díjcsomag szerint fizetendő (Ezt bírálhatja felül a Fee mező tartalma, ha egyedi díjat kap az ügyfél az adott eszközre)
        orderStatus:
          type: string
          description: "Olyan állapotkód, ami jelzi, hogy az adott megrendelés (előfizetés) érvényes-e, azaz figyelembeveendő-e a következő számla készítésekor<br>Lehetséges értékei:<br>WAIT - már rögzített, de a páciens még nem csatlakoztatta az eszközt a rendszerhez<br>ACTIVE - aktív előfizetés<br>INACTIVE - visszavont előfizetés<br>STOLEN - lopott eszköz miatt felfüggesztve"
        modifyDate:
          type: string
          format: date-time
          description: Az adatmódosítás időpontja
        modifyReason:
          type: string
          description: "Az utolsó (státusz) módosítás milyen funkció miatt történt (pl: IMPORT, PAYMENT, ADMIN)"
        reasonReference:
          type: integer
          format: int32
          description: "A módosításhoz kapcsolódó referencia azonosító (pl: ha a modifyReason=PAYMENT, akkor az adott fizetési folyamat paymentId-je)"
        reasonReferenceLine:
          type: integer
          format: int32
          description: Ha a módosítás import állomány miatt keletkezett, akkor az adott csv állomány hányadik sora a forrás adat
        useFirstFee:
          type: boolean
          description: Ha értéke true, akkor a megrendelés első befizetésekor a tört havi összeggel kiegészített összeg (azaz a firstFee mező értéke) a fizetendő.
        firstFee:
          type: integer
          format: int32
          description: A megrendelés első bifezetndő összege más, mint a későbbi szokásos fizetendő összeg (mert a megrendelés időpontja alapján még tört hónapra vonatkozó értéket is kell fizetni), akkor ez a mező tartalmazza az értéket.<br>Csak addig veendő figyelembe, amíg a useFirstFee mező értéke true, azaz a legelső befizetés meg nem történt.
        productPackageId:
          type: integer
          description: A megrendelés melyik díjcsomag alapján jött létre
        userId:
          type: integer
          description: Melyik ügyfélnek a megrendelése
        deviceId:
          type: integer
          description: Az eszköz azonosítója, amire a megrendelés vonatkozik
        modifierId:
          type: integer
          description: A rögzítő vagy utoljára módosító azonosítója
        couponId:
          type: integer
          description: Kedvezmény azonosító
      required:
        - userOrderId
        - fee
        - duration
        - paymentInterval
        - baseFee
      type: object
    UserParam:
      description: A felhasználók dinamikus paraméterei.
      properties:
        userParamId:
          type: integer
          description: User Param egyedi azonosítója
        paramCode:
          type: string
          description: A paraméter azonosítására használt típus kód
        paramValue:
          type: string
          description: Az adott típusú paraméter értéke
        extValue:
          type: string
          description: Az adott típus használatához szükséges egyéb érték (pl. mail cím cserénél).
        validFrom:
          type: string
          format: date-time
          description: A paraméter érvényesség kezdete (azaz a létrejötte).
        validTo:
          type: string
          format: date-time
          description: A paraméter érvényességi ideje (ha van ilyen neki).
        comment:
          type: string
          description: Az adott paraméterhez kapcsolódó megjegyzés (pl. inviteGeneralDoctor esetén az adott orvossal kapcsolatos leírás adat)
        userId:
          type: integer
          description: Annak a felhasználónak az azonosítója, akihez a paraméter tartozik
      required:
        - userParamId
      type: object
    UserProtocol:
      description: Az adott felhasználónak az adott eszközével milyen protokoll szerint kell a (mérési) tevékenységeket elvégezni
      properties:
        userProtocolId:
          type: integer
          description: User Protocol egyedi azonosítója
        createDate:
          type: string
          format: date-time
          description: Mikor történt a protokoll meghatározás
        deleteDate:
          type: string
          format: date-time
          description: Mikor történt a protokoll összerendelés megszüntetése
        userId:
          type: integer
          description: Melyik ügyfélre vonatkozik a protokoll
        deviceId:
          type: integer
          description: Melyik eszközre vonatkozik a protokoll
        protocolId:
          type: integer
          description: Melyik protokoll vonatkozik az adott ügyfél-eszköz párosra
        doctorId:
          type: integer
          description: Melyik orvos (vagy meghatalmazott háziorvos) adta a protokoll előírást
      required:
        - userProtocolId
      type: object
    UserTerm:
      description: Olyan információk, hogy mely felhasználó melyik Szabályzat (verziót) mikor fogadta el, ill. mikor vonta vissza az elfogadását. Kapcsoló a User és a Term táblák között.
      properties:
        userTermId:
          type: integer
          description: User Term egyedi azonosítója
        acceptDate:
          type: string
          format: date-time
          description: Az adott szabályzat (verzió) elfogadásának időpontja
        revokeDate:
          type: string
          format: date-time
          description: Az adott szabályzat (verzió) elfogadást visszavonó igény időpontja
        userId:
          type: integer
          description: A szabályzatot elfogadó ügyfél azonosítója
        termId:
          type: integer
          description: Az adott ügyfél által elfogadott szabályzat (verzió) azonosítója
      required:
        - userTermId
      type: object
  responses:
    ActualDutyResp:
      description: Naptár esemény lista (pl. orvosi ügyelet lista) lekérdezés válasza
      content:
        application/json:
          schema:
            type: object
            properties:
              isMyDuty:
                type: boolean
                description: Ha értéke true, akkor a lekérdezést kezdeményező személy jelenleg ügyeletben van
              isOtherDuty:
                type: boolean
                description: Ha értéke true, akkor a lekérdező személyen kívül más is van jelenleg ügyeletben
              isOtherLoggedIn:
                type: boolean
                description: Ha értéke true, akkor a lekérdező személyen kívül ügyeletbe beosztott orvosok közül valamelyik be van jelentkezve
              doctors:
                description: Aktuális ügyeletes orvosi naptári események
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Calendar"
                    - properties:
                        targetName:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a neve
                        targetEmail:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a mail címe
                        targetPhone:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a telefonszáma
                        targetColor:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a baseColor user paraméterben tárolt szín értéke
                        creatorName:
                          type: string
                          description: Az esemény létrehozójának a neve
                        creatorEmail:
                          type: string
                          description: Az esemény létrehozójának a mail címe
                        creatorPhone:
                          type: string
                          description: Az esemény létrehozójának a telefonszáma
                        creatorColor:
                          type: string
                          description: Az esemény létrehozójának a baseColor user paraméterben tárolt szín értéke
                        modifierName:
                          type: string
                          description: Az esemény utolsó módosítójának a neve
                        modifierEmail:
                          type: string
                          description: Az esemény utolsó módosítójának a mail címe
                        modifierPhone:
                          type: string
                          description: Az esemény utolsó módosítójának a telefonszáma
                        modifierColor:
                          type: string
                          description: Az esemény utolsó módosítójának a baseColor user paraméterben tárolt szín értéke
                        comment:
                          type: string
                          description: Ha az eseményhez tartozik megjegyzés (pl. visszautasítás miatt), akkor annak a szövege
                        targetInstitute:
                          type: string
                          description: Az esemény tulajdonosához (a cél személyhez) tartozó intézmény (kórház, munkahely, stb.) neve
                        skills:
                          type: string
                          description: Az orvos szakismeretei (vesszővel elválasztva GROUP_DSKILL_xxx kódokként)
    AnalysableMeasurementListResp:
      description: Az ügyeletes orvosok számára készülő Kiértékelendő mérések listája (benne pl. az ügyfél névvel), ami nem tartalmazza a tényleges mérési adatokat, hanem csak a mérés általános információt. Ezt érdemes használni a lista szerű, kiválasztós funkcióknál. (A tényleges adatokhoz mérés egyedi azonosítóra vonatkozó lekérdezéssel lehet hozzájutni!)
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Measurement"
                    - properties:
                        alarmType:
                          description: "a mérés értékei lapján (az orvos által) megállapított riasztási állapot (pl: ALARM_URGENT - azaz életveszélyesen sürgős)"
                          type: string
                        deviceMac:
                          description: a mérést végző eszköz Mac azonosítója
                          type: string
                        collectorMac:
                          description: a mérési adatot továbbító lokális gyűjtő eszköz Mac azonosítója
                          type: string
                        userName:
                          description: annak az ügyfélnek a (jelenlegi) neve, akire vonatkozik a mérési adat
                          type: string
                        momentaryName:
                          description: a mérésben tárolt méréskori (pillanatnyi) ügyfélnév, akire vonatkozik a mérési adat
                          type: string
                        analyseStatus:
                          description: a kiértékelés szerinti állapota az adott mérésnek
                          type: string
                        analyserId:
                          description: annak az orvosnak az azonosítója, aki éppen végzi a mérés kiértékelését
                          type: integer
                        analyserName:
                          description: annak az orvosnak a neve, aki éppen végzi a mérés kiértékelését
                          type: string
                        waitFirst:
                          description: elsődleges kiértékelésre váró mérés
                          type: boolean
                        waitControl:
                          description: másodlagos (vagy ellenőrző) kiértékelésre váró mérés
                          type: boolean
                        analysedByMe:
                          description: a lekérdezést végző orvos már az adott mérésre végzett-e kiértékelést
                          type: boolean
                        activeStarterConsultationCount:
                          description: az aktuális lekérdező az adott méréssel kapcsolatban hány olyan konzultációt kezdeményezett amit még nem tekintett meg a konzultációs partner
                          type: integer
                        viewedStarterConsultationCount:
                          description: az aktuális lekérdező az adott méréssel kapcsolatban hány olyan konzultációt kezdeményezett amit már megtekintett a konzultációs partner
                          type: integer
                        activeTargetConsultationCount:
                          description: az adott méréssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit még nem tekintett meg ez a lekérdező
                          type: integer
                        viewedTargetConsultationCount:
                          description: az adott méréssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit már megtekintett ez a lekérdező
                          type: integer
          examples:
            normal response:
              value:
                data:
                  - measurementId: 1
                    measurementDate: "2019-09-21T21:11:57.623Z"
                    localTransferDate: "2019-09-21T21:11:57.750Z"
                    serverTransferDate: null
                    arrivalDate: "2020-05-26T18:05:51.423Z"
                    lastUpdate: "2020-05-26T18:05:51.997Z"
                    timeLength: 10000
                    measurementType: "BLOOD_PRESSURE"
                    status: "DICT_MEASURE_MUST_VERIFY"
                    latitude: null
                    longitude: null
                    activity: null
                    mealActivity: null
                    mood: null
                    symptoms: null
                    hash: "1234567801"
                    userIdx: 2
                    deviceId: 2
                    collectorId: 2
                    userId: 8
                    regulationId: null
                    clientAppVersion: "A1.0.0"
                    analyseCount: 0
                    alarmType: "NO_ALARM"
                    deviceMac: "XX:BB:CC:DD:01:03"
                    collectorMac: "XX:BB:CC:DD:01:03"
                    userName: "Kovácsné Teszt Eszter"
                    momentaryName: "Teszt Eszter"
                    analyseStatus: "ANALYSE_STATUS_EDITING"
                    analyserId: 3
                    analyserName: "Dr. Kovács Márk"
                    waitFirst: true
                    waitControl: false
                    analysedByMe: false
                    activeStarterConsultationCount: 1
                    viewedStarterConsultationCount: 0
                    activeTargetConsultationCount: 0
                    viewedTargetConsultationCount: 1
                  - measurementId: 3
                    measurementDate: "2019-09-21T23:11:57.623Z"
                    localTransferDate: "2019-09-21T23:11:57.750Z"
                    serverTransferDate: null
                    arrivalDate: "2020-05-26T18:05:52.773Z"
                    lastUpdate: "2020-05-26T18:05:53.253Z"
                    timeLength: 10000
                    measurementType: "BLOOD_PRESSURE"
                    status: "DICT_MEASURE_MUST_VERIFY"
                    latitude: null
                    longitude: null
                    activity: null
                    mealActivity: null
                    mood: null
                    symptoms: null
                    hash: "1234567802"
                    userIdx: null
                    deviceId: 2
                    collectorId: 2
                    userId: 9
                    regulationId: null
                    clientAppVersion: "A1.0.1"
                    analyseCount: 0
                    alarmType: "NO_ALARM"
                    deviceMac: "XX:BB:CC:DD:01:03"
                    collectorMac: "XX:BB:CC:DD:01:03"
                    userName: "Kovácsné Teszt Eszter"
                    momentaryName: "Teszt Eszter"
                    analyseStatus: null
                    analyserId: null
                    analyserName: null
                    waitFirst: false
                    waitControl: true
                    analysedByMe: true
            countOnly response:
              value:
                count: 5
            isBrief response:
              value:
                data:
                  - measurementId: 1
                    lastUpdate: "2020-05-26T18:05:51.997Z"
                  - measurementId: 3
                    lastUpdate: "2020-05-26T18:05:53.253Z"
    AnalyseDocumentsResp:
      description: Kiértékeléshez tartozó dokumentumok listája.
      content:
        application/json:
          schema:
            type: object
            properties:
              documents:
                type: array
                items:
                  type: object
                  properties:
                    documentId:
                      type: integer
                      description: A dokumentum azonosítója
                    documentType:
                      type: string
                      description: "A dokumentum típusát jelző szótárkód, pl: PDF, keskeny PDF, hang állomány, kép állomány, link, html, fájl."
                    name:
                      type: string
                      description: A listákban a dokumentum megnevezéseként megjelenő szöveg. (Pácienshez csatolt feltöltött dokumentum esetén itt van a tartalom rövid leírása.)
                    path:
                      type: string
                      description: A dokumentum url elérési útja, vagy hivatkozási azonosítója.
                    readDate:
                      type: string
                      format: date-time
                      description: Az az időpont, amikor a dokumentum tulajdonosa (azaz a páciens) először megtekintette a dokumentumot.
                    originalFileName:
                      type: string
                      description: A feltöltött dokumentumok esetén az eredeti fájl neve.
    AnalyseListResp:
      description: Kiértékelési adatok listája.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Analyse"
                    - properties:
                        readDate:
                          type: string
                          format: date-time
                          description: Ha minden csatolt dokumentumot már megnézett a kiértékelés tulajdonos páciense, akkor a csatolmányok megtekintési dátumai közül a legnagyobb (azaz amikor már teljesen megtekintettnek vehető a kiértékelés összes része)
                        attachment:
                          type: array
                          items:
                            allOf:
                              - $ref: "#/components/schemas/Attachment"
                              - $ref: "#/components/schemas/Document"
    AnalyseListResp2:
      description: Kiértékelési adatok listája.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Analyse"
                    - properties:
                        dataType:
                          description: a kiértékelésehez tartozó mérés(ek) típusa (pl. FitKitBloodPressure, FitKitWeight, stb.), ha több is van, akkor vesszővel elválasztva
                          type: string
                        userName:
                          description: annak az ügyfélnek a (jelenlegi) neve, akire vonatkoznak a mérések
                          type: string
                        momentaryName:
                          description: a mérésekben tárolt méréskori (pillanatnyi) ügyfélnév, akire vonatkoznak a mérések
                          type: string
                        measurementCount:
                          description: az adott kiértékelés hány mérésre vonatkozik
                          type: integer
                        analysedByMe:
                          description: a lekérdezést végző orvos már az adott mérésre végzett-e kiértékelést
                          type: boolean
                        analysersName:
                          description: azoknak az orvosoknak a neve vesszővel elválasztva, akik részt vettek a méréssel kapcsolatos kiértékelés(ek) készítésében
                          type: string
                        activeStarterConsultationCount:
                          description: az aktuális lekérdező az adott kiértékeléssel kapcsolatban hány olyan konzultációt kezdeményezett amit még nem tekintett meg a konzultációs partner
                          type: integer
                        viewedStarterConsultationCount:
                          description: az aktuális lekérdező az adott kiértékeléssel kapcsolatban hány olyan konzultációt kezdeményezett amit már megtekintett a konzultációs partner
                          type: integer
                        activeTargetConsultationCount:
                          description: az adott kiértékeléssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit még nem tekintett meg ez a lekérdező
                          type: integer
                        viewedTargetConsultationCount:
                          description: az adott kiértékeléssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit már megtekintett ez a lekérdező
                          type: integer
                        notifiedCount:
                          description: az adott kiértékelés miatt a lekérdezőnek ment értesítések száma, ha még nem lett a megtekintve ez a kiértékelés
    AnalysedMeasurementListResp:
      description: Az ügyeletes orvosok számára készülő Kiértékelendő mérések listája (benne pl. az ügyfél névvel), ami nem tartalmazza a tényleges mérési adatokat, hanem csak a mérés általános információt. Ezt érdemes használni a lista szerű, kiválasztós funkcióknál. (A tényleges adatokhoz mérés egyedi azonosítóra vonatkozó lekérdezéssel lehet hozzájutni!)
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Measurement"
                    - properties:
                        alarmType:
                          description: "a mérés értékei lapján (az orvos által) megállapított riasztási állapot (pl: ALARM_URGENT - azaz életveszélyesen sürgős)"
                          type: string
                        userName:
                          description: annak az ügyfélnek a (jelenlegi) neve, akire vonatkozik a mérési adat
                          type: string
                        momentaryName:
                          description: a mérésben tárolt méréskori (pillanatnyi) ügyfélnév, akire vonatkozik a mérési adat
                          type: string
                        analyseCount:
                          description: a mérésre vonatkozó kiértékelések száma
                          type: integer
                        analysedByMe:
                          description: a lekérdezést végző orvos már az adott mérésre végzett-e kiértékelést
                          type: boolean
                        analysersName:
                          description: azoknak az orvosoknak a neve vesszővel elválasztva, akik részt vettek a méréssel kapcsolatos kiértékelés(ek) készítésében
                          type: string
                        activeStarterConsultationCount:
                          description: az aktuális lekérdező az adott méréssel kapcsolatban hány olyan konzultációt kezdeményezett amit még nem tekintett meg a konzultációs partner
                          type: integer
                        viewedStarterConsultationCount:
                          description: az aktuális lekérdező az adott méréssel kapcsolatban hány olyan konzultációt kezdeményezett amit már megtekintett a konzultációs partner
                          type: integer
                        activeTargetConsultationCount:
                          description: az adott méréssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit még nem tekintett meg ez a lekérdező
                          type: integer
                        viewedTargetConsultationCount:
                          description: az adott méréssel kapcsolatban valaki más hány olyan konzultációt kezdeményezett amit már megtekintett ez a lekérdező
                          type: integer
                        realizerName:
                          type: string
                          description: A csoportos mérést végző személy neve
                        teamName:
                          type: string
                          description: Csoportos mérés esetén a mérési csoport (team) megnevezése
          examples:
            normal response:
              value:
                data:
                  - measurementId: 1
                    measurementDate: "2019-09-21T21:11:57.623Z"
                    localTransferDate: "2019-09-21T21:11:57.750Z"
                    serverTransferDate: null
                    arrivalDate: "2020-05-26T18:05:51.423Z"
                    lastUpdate: "2020-05-26T18:05:51.997Z"
                    timeLength: 10000
                    measurementType: "BLOOD_PRESSURE"
                    status: "DICT_MEASURE_MUST_VERIFY"
                    latitude: null
                    longitude: null
                    activity: null
                    mealActivity: null
                    mood: null
                    symptoms: null
                    hash: "1234567801"
                    userIdx: 2
                    deviceId: 2
                    collectorId: 2
                    userId: 8
                    regulationId: null
                    clientAppVersion: "A1.0.0"
                    analyseCount: 3
                    alarmType: "NO_ALARM"
                    userName: "Kovácsné Teszt Eszter"
                    momentaryName: "Teszt Eszter"
                    analysedByMe: false
                    analysersName: "Dr. Kis István,dr. Nagy mária"
                    activeStarterConsultationCount: 1
                    viewedStarterConsultationCount: 0
                    activeTargetConsultationCount: 0
                    viewedTargetConsultationCount: 1
                  - measurementId: 3
                    measurementDate: "2019-09-21T23:11:57.623Z"
                    localTransferDate: "2019-09-21T23:11:57.750Z"
                    serverTransferDate: null
                    arrivalDate: "2020-05-26T18:05:52.773Z"
                    lastUpdate: "2020-05-26T18:05:53.253Z"
                    timeLength: 10000
                    measurementType: "BLOOD_PRESSURE"
                    status: "DICT_MEASURE_MUST_VERIFY"
                    latitude: null
                    longitude: null
                    activity: null
                    mealActivity: null
                    mood: null
                    symptoms: null
                    hash: "1234567802"
                    userIdx: null
                    deviceId: 2
                    collectorId: 2
                    userId: 9
                    regulationId: null
                    clientAppVersion: "A1.0.1"
                    analyseCount: 0
                    alarmType: "NO_ALARM"
                    userName: "Kovácsné Teszt Eszter"
                    momentaryName: "Teszt Eszter"
                    analysedByMe: true
                    analysersName: "dr. Nagy Mária"
            countOnly response:
              value:
                count: 5
    AssignedDevice:
      description: Felhasználóhoz hozzárendelt adott eszköz adatai
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/Device"
              - properties:
                  own:
                    description: az ügyfél saját tulajdonú eszköze?
                    type: boolean
                  liable:
                    description: az ügyfél a felelős az eszközért?
                    type: boolean
                  userIdx:
                    description: hányas számú páciens az adott eszközön
                    type: integer
                  repassType:
                    description: ha bevont páciens és már visszaadta az eszközt, akkor a visszaadás módja (PASS,RENT,PURCHASE,SCRAP)
                    type: string
                  fromUserId:
                    description: annak a user-nek az azonosítója, aki kiadta a páciens bevonásakor az adott eszközt
                    type: integer
                  userProtocolId:
                    description: az adott eszközre vonatkozóan az aktuális user-hez milyen aktív mérési protokoll van rendelve
                    type: integer
                  protocolName:
                    description: az adott eszközre vonatkozóan az aktuális user-hez rendelt mérési protokoll rövid elnevezése
                    type: string
                  orders:
                    description: az adott eszközre vonatkozóan az aktuális user-nek milyen megrendelései vannak
                    type: array
                    items:
                      type: object
                      properties:
                        userOrderId:
                          description: a megrendelés egyedi azonosítója, amire hivatkozva pl. le lehet mondani
                          type: integer
                        orderType:
                          description: megrendelt szolgáltatás típusa
                          type: string
                        orderStatus:
                          description: a megrendelés állapota
                          type: string
                        orderDate:
                          description: a megrendelés dátuma
                          type: string
                          format: date-time
                        measureDateLimit:
                          description: az a dátum aminél régebbi mérést nem lehet feltölteni a szerverre (mert érvénytelennek időszaknak számít kifizetett megrendelés hiánya miatt)
                          type: string
                          format: date-time
                        duration:
                          description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                          type: integer
                        paymentInterval:
                          description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
                          type: integer
                        fee:
                          description: a fizetendő összeg
                          type: integer
                        validityDate:
                          description: "Az az érvényességi dátum, amit a rendszer visszakapott a számlázó rendszer felől - a jelentése: eddig a dátumig tekinthető rendezettnek az adott megrendelési tétel díja"
                          type: string
                          format: date-time
                        isMyOrder:
                          description: Az aktuális ügyfél rendelte-e meg ezt a szolgáltatást - mert ez alapján lehet felkínálni a megrendelés lemondását
                          type: boolean
    AssignedDevicesList:
      description: Felhasználóhoz hozzárendelt eszközök listája
      content:
        application/json:
          schema:
            type: object
            properties:
              devices:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Device"
                    - properties:
                        own:
                          description: az ügyfél saját tulajdonú eszköze?
                          type: boolean
                        liable:
                          description: az ügyfél a felelős az eszközért?
                          type: boolean
                        userIdx:
                          description: hányas számú páciens az adott eszközön
                          type: integer
                        repassType:
                          description: ha bevont páciens és már visszaadta az eszközt, akkor a visszaadás módja (PASS,RENT,PURCHASE,SCRAP)
                          type: string
                        fromUserId:
                          description: annak a user-nek az azonosítója, aki kiadta a páciens bevonásakor az adott eszközt
                          type: integer
                        userProtocolId:
                          description: az adott eszközre vonatkozóan az aktuális user-hez milyen aktív mérési protokoll van rendelve
                          type: integer
                        protocolName:
                          description: az adott eszközre vonatkozóan az aktuális user-hez rendelt mérési protokoll rövid elnevezése
                          type: string
                        orders:
                          description: az adott eszközre vonatkozóan az aktuális user-nek milyen megrendelései vannak
                          type: array
                          items:
                            type: object
                            properties:
                              userOrderId:
                                description: a megrendelés egyedi azonosítója, amire hivatkozva pl. le lehet mondani
                                type: integer
                              orderType:
                                description: megrendelt szolgáltatás típusa
                                type: string
                              orderStatus:
                                description: a megrendelés állapota
                                type: string
                              orderDate:
                                description: a megrendelés dátuma
                                type: string
                                format: date-time
                              measureDateLimit:
                                description: az a dátum aminél régebbi mérést nem lehet feltölteni a szerverre (mert érvénytelennek időszaknak számít kifizetett megrendelés hiánya miatt)
                                type: string
                                format: date-time
                              duration:
                                description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                                type: integer
                              paymentInterval:
                                description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
                                type: integer
                              fee:
                                description: a fizetendő összeg
                                type: integer
                              validityDate:
                                description: "Az az érvényességi dátum, amit a rendszer visszakapott a számlázó rendszer felől - a jelentése: eddig a dátumig tekinthető rendezettnek az adott megrendelési tétel díja"
                                type: string
                                format: date-time
                              isMyOrder:
                                description: Az aktuális ügyfél rendelte-e meg ezt a szolgáltatást - mert ez alapján lehet felkínálni a megrendelés lemondását
                                type: boolean
    AssignedDevicesListWithAdherence:
      description: Felhasználóhoz hozzárendelt eszközök listája
      content:
        application/json:
          schema:
            type: object
            properties:
              devices:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Device"
                    - properties:
                        own:
                          description: az ügyfél saját tulajdonú eszköze?
                          type: boolean
                        liable:
                          description: az ügyfél a felelős az eszközért?
                          type: boolean
                        userIdx:
                          description: hányas számú páciens az adott eszközön
                          type: integer
                        repassType:
                          description: ha bevont páciens és már visszaadta az eszközt, akkor a visszaadás módja (PASS,RENT,PURCHASE,SCRAP)
                          type: string
                        fromUserId:
                          description: annak a user-nek az azonosítója, aki kiadta a páciens bevonásakor az adott eszközt
                          type: integer
                        userProtocolId:
                          description: az adott eszközre vonatkozóan az aktuális user-hez milyen aktív mérési protokoll van rendelve
                          type: integer
                        protocolName:
                          description: az adott eszközre vonatkozóan az aktuális user-hez rendelt mérési protokoll rövid elnevezése
                          type: string
                        orders:
                          description: az adott eszközre vonatkozóan az aktuális user-nek milyen megrendelései vannak
                          type: array
                          items:
                            type: object
                            properties:
                              userOrderId:
                                description: a megrendelés egyedi azonosítója, amire hivatkozva pl. le lehet mondani
                                type: integer
                              orderType:
                                description: megrendelt szolgáltatás típusa
                                type: string
                              orderStatus:
                                description: a megrendelés állapota
                                type: string
                              orderDate:
                                description: a megrendelés dátuma
                                type: string
                                format: date-time
                              measureDateLimit:
                                description: az a dátum aminél régebbi mérést nem lehet feltölteni a szerverre (mert érvénytelennek időszaknak számít kifizetett megrendelés hiánya miatt)
                                type: string
                                format: date-time
                              duration:
                                description: Hónapokban megadott futamidő, vagyis hogy mennyi ideig tart a fizetési kötelezettség. Ha értéke 0, akkor határozatlan idejű.
                                type: integer
                              paymentInterval:
                                description: Milyen időközönként kell az adott tételt fizetni (hónapokban kifejezve)
                                type: integer
                              fee:
                                description: a fizetendő összeg
                                type: integer
                              validityDate:
                                description: "Az az érvényességi dátum, amit a rendszer visszakapott a számlázó rendszer felől - a jelentése: eddig a dátumig tekinthető rendezettnek az adott megrendelési tétel díja"
                                type: string
                                format: date-time
                              isMyOrder:
                                description: Az aktuális ügyfél rendelte-e meg ezt a szolgáltatást - mert ez alapján lehet felkínálni a megrendelés lemondását
                                type: boolean
                        adherence:
                          type: object
                          description: Ha az eszköz OKFŐ projektben kiadottnak számít, akkor a projekt adherencia (mérés megfelelőségi) adatai
                          properties:
                            measurementType:
                              type: string
                              description: A mérés típusa (pl. PulseOxygen), amire az adherencia adat vonatkozik
                            version:
                              type: string
                              description: Milyen adherencia számítási algoritmus verzióval történt a kalkuláció
                            resultCode:
                              type: string
                              description: Az adott mérés típusra kiszámított adherencia állapot (pl. ADHER_SUCCESS - teljesen megfelelő az adherencia)
                            partialRestCount:
                              type: integer
                              description: Ha a resultCode == ADHER_PARTIAL_SUCCESS, akkor még hány napnyi sikeres mérés hiányzik a teljes sikeres adherenciához
                            calculationDate:
                              type: string
                              format: data-time
                              description: Az adherencia számítás elvégzésének időpontja
    CalendarEventListResp:
      description: Naptár esemény lista (pl. orvosi ügyelet lista) lekérdezés válasza
      content:
        application/json:
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Calendar"
                    - properties:
                        targetName:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a neve
                        targetEmail:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a mail címe
                        targetPhone:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a telefonszáma
                        targetColor:
                          type: string
                          description: Az esemény tulajdonosának (a cél személynek) a baseColor user paraméterben tárolt szín értéke
                        creatorName:
                          type: string
                          description: Az esemény létrehozójának a neve
                        creatorEmail:
                          type: string
                          description: Az esemény létrehozójának a mail címe
                        creatorPhone:
                          type: string
                          description: Az esemény létrehozójának a telefonszáma
                        creatorColor:
                          type: string
                          description: Az esemény létrehozójának a baseColor user paraméterben tárolt szín értéke
                        modifierName:
                          type: string
                          description: Az esemény utolsó módosítójának a neve
                        modifierEmail:
                          type: string
                          description: Az esemény utolsó módosítójának a mail címe
                        modifierPhone:
                          type: string
                          description: Az esemény utolsó módosítójának a telefonszáma
                        modifierColor:
                          type: string
                          description: Az esemény utolsó módosítójának a baseColor user paraméterben tárolt szín értéke
                        comment:
                          type: string
                          description: Ha az eseményhez tartozik megjegyzés (pl. visszautasítás miatt), akkor annak a szövege
                        targetInstitute:
                          type: string
                          description: Az esemény tulajdonosához (a cél személyhez) tartozó intézmény (kórház, munkahely, stb.) neve
                        skills:
                          type: string
                          description: Az orvos szakismeretei (vesszővel elválasztva GROUP_DSKILL_xxx kódokként)
    CalendarEventResp:
      description: Naptár esemény (pl. orvosi ügyelet) lekérdezés válasza
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                allOf:
                  - $ref: "#/components/schemas/Calendar"
                  - properties:
                      targetName:
                        type: string
                        description: Az esemény tulajdonosának (a cél személynek) a neve
                      targetEmail:
                        type: string
                        description: Az esemény tulajdonosának (a cél személynek) a mail címe
                      targetPhone:
                        type: string
                        description: Az esemény tulajdonosának (a cél személynek) a telefonszáma
                      targetColor:
                        type: string
                        description: Az esemény tulajdonosának (a cél személynek) a baseColor user paraméterben tárolt szín értéke
                      creatorName:
                        type: string
                        description: Az esemény létrehozójának a neve
                      creatorEmail:
                        type: string
                        description: Az esemény létrehozójának a mail címe
                      creatorPhone:
                        type: string
                        description: Az esemény létrehozójának a telefonszáma
                      creatorColor:
                        type: string
                        description: Az esemény létrehozójának a baseColor user paraméterben tárolt szín értéke
                      modifierName:
                        type: string
                        description: Az esemény utolsó módosítójának a neve
                      modifierEmail:
                        type: string
                        description: Az esemény utolsó módosítójának a mail címe
                      modifierPhone:
                        type: string
                        description: Az esemény utolsó módosítójának a telefonszáma
                      modifierColor:
                        type: string
                        description: Az esemény utolsó módosítójának a baseColor user paraméterben tárolt szín értéke
                      comment:
                        type: string
                        description: Ha az eseményhez tartozik megjegyzés (pl. visszautasítás miatt), akkor annak a szövege
                      targetInstitute:
                        type: string
                        description: Az esemény tulajdonosához (a cél személyhez) tartozó intézmény (kórház, munkahely, stb.) neve
                      skills:
                        type: string
                        description: Az orvos szakismeretei (vesszővel elválasztva GROUP_DSKILL_xxx kódokként)
    CheckLoginNameResp:
      description: Bejelentkezési név ellenőrzés válasz objektum.
      content:
        application/json:
          schema:
            type: object
            properties:
              exists:
                type: boolean
                description: true, ha a megadott mail cím létezik már a rendszerben
              isRegWait:
                type: boolean
                description: true, ha a megadott mail címmel kezdeményezett ügyfél regisztráció abban a fázisban van, hogy az ügyfélnek kiküldött akticáló mail-re várja a visszajelzést a rendszer és ezért még nem jelentkezhet be az ügyfél
            required:
              - exists
    CityResp:
      description: Város (helység) adatok.
      content:
        application/json:
          schema:
            type: object
            properties:
              postalCode:
                type: string
              cityName:
                type: array
                items:
                  type: string
            required:
              - postalCode
    DevicesResp:
      description: Eszközök listája
      content:
        application/json:
          schema:
            type: object
            properties:
              devices:
                type: array
                items:
                  $ref: "#/components/schemas/Device"
    DoctorListResp:
      description:  Orvos adatok listája<br>
      content:
        application/json:
          schema:
            type: object
            properties:
              doctors:
                type: array
                items:
                  properties:
                    doctorId:
                      type: integer
                      description: Orvos azonosítója
                    firstName:
                      type: string
                      description: Az orvos keresztneve
                    lastName:
                      type: string
                      description: Az orvos vezetékneve
                    email:
                      type: string
                      description: Az orvos mail címe
                    phoneNumber:
                      type: string
                      description: Az orvos telefonszáma
                    instituteName:
                      type: string
                      description: Az orvos intézményének neve
                    instituteAddress:
                      type: string
                      description: Az orvos intézményének címe
                    userStatus:
                      type: string
                      description: Az orvos állapota (pl. DICT_USER_ACTIVE, DICT_USER_REGWAIT)
                    comment:
                      type: string
                      description: Az orvos meghívásakor az ügyfél által megadott leírás
                    baseColor:
                      type: string
                      description: Az orvos baseColor user paraméterében tárolt szín értéke (az ügyeleti esemény megjelenítéshez)
                    skills:
                      type: string
                      description: Az orvos szakismeretei (vesszővel elválasztva GROUP_DSKILL_xxx kódokként)
                    stamp:
                      type: string
                      description: Az orvos pecsét azonosítója
            required:
              - doctorId
              - firstName
              - lastName
              - userStatus

    Error400:
      description: Bad request - A szerver nem tudta a kérést értelmezni, pl. hibás adat formátum miatt (JSON parse hiba, vagy az url-ben az Id nem megfelelő formátumú)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error401:
      description: Unauthorized - Bejelentkezés nélküli jogosulatlan kérés
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error402:
      description: Payment required - A fizetés kötelező
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error403:
      description: Forbidden - Ez a funkció az aktuális felhasználónak nem engedélyezett
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error404:
      description: Not found - Az Url nem található, vagy nincs ilyen adat
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error405:
      description: Method not allowed - A művelet nem engedélyezett
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error406:
      description: Not acceptable - Nem végrehajtható kérés vagy nincs ilyen azonosítójú elem
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error409:
      description: Conflict - Sikertelen művelet
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    Error426:
      description: Upgrade required - Frissítésre van szükség
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    ErrorResp:
      description: Általános hiba
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: "A HTML hibakód"
                  name:
                    type: string
                    description: A hiba típusa (pl. Error, Warning, Info)
                  message:
                    type: string
                    description: A hiba szituáció részletesebb magyarázata, ami a felhasználónak is megjeleníthető
                  code:
                    type: string
                    description: "A tényleges hiba kódja"
                required:
                  - statusCode
    EventMeasurementListResp:
      description: Az ügyeletes orvosok számára készülő Mérések listája (benne pl. az ügyfél névvel), ami nem tartalmazza a tényleges mérési adatokat, hanem csak a mérés általános információt. Ezt érdemes használni a lista szerű, kiválasztós funkcióknál. (A tényleges adatokhoz mérés egyedi azonosítóra vonatkozó lekérdezéssel lehet hozzájutni!)
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Measurement"
                    - properties:
                        alarmType:
                          description: "a mérés értékei lapján (az orvos által) megállapított riasztási állapot (pl: ALARM_URGENT - azaz életveszélyesen sürgős)"
                          type: string
                        deviceMac:
                          description: a mérést végző eszköz Mac azonosítója
                          type: string
                        collectorMac:
                          description: a mérési adatot továbbító lokális gyűjtő eszköz Mac azonosítója
                          type: string
                        userName:
                          description: annak az ügyfélnek a (jelenlegi) neve, akire vonatkozik a mérési adat
                          type: string
                        momentaryName:
                          description: a mérésben tárolt méréskori (pillanatnyi) ügyfélnév, akire vonatkozik a mérési adat
                          type: string
          examples:
            normal response:
              value:
                data:
                  - measurementId: 1
                    measurementDate: "2019-09-21T21:11:57.623Z"
                    localTransferDate: "2019-09-21T21:11:57.750Z"
                    serverTransferDate: null
                    arrivalDate: "2020-05-26T18:05:51.423Z"
                    lastUpdate: "2020-05-26T18:05:51.997Z"
                    timeLength: 10000
                    measurementType: "BLOOD_PRESSURE"
                    status: "DICT_MEASURE_MUST_VERIFY"
                    latitude: null
                    longitude: null
                    activity: null
                    mealActivity: null
                    mood: null
                    symptoms: null
                    hash: "1234567801"
                    userIdx: 2
                    deviceId: 2
                    collectorId: 2
                    userId: 8
                    regulationId: null
                    clientAppVersion: "A1.0.0"
                    analyseCount: 0
                    alarmType: "NO_ALARM"
                    deviceMac: "XX:BB:CC:DD:01:03"
                    collectorMac: "XX:BB:CC:DD:01:03"
                    userName: "Kovácsné Teszt Eszter"
                    momentaryName: "Teszt Eszter"
                  - measurementId: 3
                    measurementDate: "2019-09-21T23:11:57.623Z"
                    localTransferDate: "2019-09-21T23:11:57.750Z"
                    serverTransferDate: null
                    arrivalDate: "2020-05-26T18:05:52.773Z"
                    lastUpdate: "2020-05-26T18:05:53.253Z"
                    timeLength: 10000
                    measurementType: "BLOOD_PRESSURE"
                    status: "DICT_MEASURE_MUST_VERIFY"
                    latitude: null
                    longitude: null
                    activity: null
                    mealActivity: null
                    mood: null
                    symptoms: null
                    hash: "1234567802"
                    userIdx: null
                    deviceId: 2
                    collectorId: 2
                    userId: 9
                    regulationId: null
                    clientAppVersion: "A1.0.1"
                    analyseCount: 0
                    alarmType: "NO_ALARM"
                    deviceMac: "XX:BB:CC:DD:01:03"
                    collectorMac: "XX:BB:CC:DD:01:03"
                    userName: "Teszt Másik"
                    momentaryName: "Teszt Másik"
            countOnly response:
              value:
                data:
                  - count: 5
            isBrief response:
              value:
                data:
                  - measurementId: 1
                    lastUpdate: "2020-05-26T18:05:51.997Z"
                  - measurementId: 3
                    lastUpdate: "2020-05-26T18:05:53.253Z"
    ForgotPasswordResp:
      description: Elfelejtett jelszó kérés válasz adatok
      content:
        'application/json':
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: A kiértesített user azonosítója
              mailSent:
                type: string
                format: date-time
                description: Az értesítő mail kiküldésének időpontja
              validityDate:
                type: string
                format: date-time
                description: A kiküldött aktiváló GUID link érvényességi időpontja
    GeneralDoctorResp:
      description: A keresett kezelőorvos meghíváshoz szükséges alap adatai.
      content:
        application/json:
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              instituteName:
                type: string
              instituteAddress:
                type: string
            required:
              - firstName
              - lastName
              - email
    InstituteResp:
      description: Intézmény adat lekérés válasz adatok
      content:
        'application/json':
          schema:
            type: object
            properties:
              instituteName:
                type: string
                description: Az intézmény neve
              instituteAddress:
                type: string
                description: Az intézmény címe
    LoginResp:
      description: Sikeres login esetén a válasz objektum. Tartalmazza a felhasználói profil adatokat és a további REST API hivásokhoz szükséges access/refresh tokeneket.
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                $ref: '#/components/schemas/User'
              doctorRoles:
                description: Ha az ügyfél orvos, akkor az orvosi szerepkörei
                type: array
                items:
                  type: string
                  description: Orvosi szerepkör (pl. GROUP_DROLE_ANALYSER, vagy GROUP_DROLE_GENERAL, vagy GROUP_DROLE_APPROVER)
              isOfficer:
                type: boolean
                description: Ha az ügyfélnek van joga officer tevékenységekhez, akkor az értéke true
              termStatus:
                #valójában ide ez kellene:
                #$ref: '#/components/responses/UserTermStatusResp'
                #de a swagger editor hibája miatt be kellett másolni az alábbit:
                type: object
                properties:
                  isAcceptable:
                    description: van-e az ügyféllel elfogadtatandó friss vagy általa el nem fogadott szabályzat
                    type: boolean
                  terms:
                    description: a szabályzatok állapota az ügyfél szempontjából
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Term"
                        - properties:
                            path:
                              description: a dokumentum url elérési útvonala
                              type: string
                            accepted:
                              description: elfogadott állapotú
                              type: boolean
                            acceptDate:
                              description: az elfogadás időpontja
                              type: string
                              format: date-time
                            revokeDate:
                              description: az elfogadás visszavonásának időpontja
                              type: string
                              format: date-time
              counters:
                description: a bejelentkezett ügyfél login funkcióval kapcsolatos számlálói
                type: array
                items:
                  properties:
                    counterCode:
                      description: a számláló azonosítója
                      type: string
                    values:
                      type: object
                      properties:
                        value:
                          description: az adott számláló ügyfélre vonatkozó értéke
                          type: integer
                        systemValue:
                          description: ha van ugyanilyen counterCode azonosítójú rendszer számláló, akkor annak az értéke
                          type: integer
              specGroups:
                description: "A GROUP_SPEC_xxx csoportjainak kódja, amikbe beletartozik a bejelentkezett ügyfél, melyek alapján a kliens alkalmazások beállíthatnak bizonyos speciális értékeket megukban (pl. menüpontok láthatósága)"
                type: array
                items:
                  type: string
              teamGroups:
                description: "Melyik team-ekbe tartozik bele a bejelentkezett ügyfél"
                type: array
                items:
                  type: object
                  properties:
                    teamCode:
                      description: a team kódja
                      type: string
                    teamName:
                      description: a team megnevezése
                      type: string
                    teamRole:
                      description: a team-en belüli szerepkör
                      type: string
              accessToken:
                type: string
              refreshToken:
                type: string
            required:
              - user
              - termStatus
              - accessToken
              - refreshToken
    MeasurementDataListResp:
      description: Egy konkrét mérés adatai (ill. adat szeletei).
      content:
        application/json:
          schema:
            type: object
            properties:
              measurement:
                allOf:
                  - $ref: "#/components/schemas/Measurement"
                  - properties:
                      deviceMac:
                        description: a mérést végző eszköz Mac azonosítója
                        type: string
                      collectorMac:
                        description: a mérési adatot továbbító lokális gyűjtő eszköz Mac azonosítója
                        type: string
                      data: # a méréshez tartozó adat szelet(ek)
                        type: array
                        items:
                          $ref: "#/components/schemas/MeasurementData"
    MeasurementDataListResp2:
      description: Egy konkrét mérés adatai (ill. adat szeletei) és a mérés előtti mérés azonosítója.
      content:
        application/json:
          schema:
            type: object
            properties:
              measurement:
                allOf:
                  - $ref: "#/components/schemas/Measurement"
                  - properties:
                      deviceMac:
                        description: a mérést végző eszköz Mac azonosítója
                        type: string
                      collectorMac:
                        description: a mérési adatot továbbító lokális gyűjtő eszköz Mac azonosítója
                        type: string
                      data: # a méréshez tartozó adat szelet(ek)
                        type: array
                        items:
                          $ref: "#/components/schemas/MeasurementData"
                      prevMeasurementId:
                        description: (időben) a mérést megelőző mérésnek az azonosítója
                        type: integer
    MeasurementItemStatusResp:
      description: Az adott mérés státusz és kiválasztottsági információk.
      content:
        application/json:
          schema:
            type: object
            properties:
              measurementId:
                description: A mérés egyedi azonosítója
                type: integer
              alarmType:
                description: "A mérés értékei alapján (az orvos által) megállapított riasztási állapot (pl: ALARM_URGENT - azaz életveszélyesen sürgős)"
                type: string
              status:
                description: A mérés (feldolgozási) státusza
                type: string
              selected:
                description: Ki van-e választva a kiértékelendők listájában?
                type: boolean
              actDoctorSelected:
                description: Az aktuális doktor választotta ki a kiértékelendők listájában?
                type: boolean
              analyseStatus:
                description: Ha zajlik a kiértékelése, akkor melyik kiértékelési állapotban tart a folyamat
                type: string
              analyserId:
                description: Annak az orvosnak az azonosítója, aki a kiértékelést éppen végzi
                type: integer
              analyserName:
                description: Annak az orvosnak a neve, aki a kiértékelést éppen végzi
                type: string
              lastUpdate:
                description: A méréssel kapcsolatos utolsó módosulás időpontja
                type: string
                format: date-time
              sliceCount:
                description: A lekérdezés pillanatában a méréshez már feltöltött adat szeletek száma
                type: integer
    MeasurementListResp:
      description: Mérések listája, ami nem tartalmazza a tényleges mérési adatokat, hanem csak a mérés általános információt. Ezt érdemes használni a lista szerű, kiválasztós funkcióknál használni. (A tényleges adatokhoz mérés egyedi azonosítóra vonatkozó lekérdezéssel lehet hozzájutni!)
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Measurement"
                    - properties:
                        alarmType:
                          description: "a mérés értékei lapján (az orvos által) megállapított riasztási állapot (pl: ALARM_URGENT - azaz életveszélyesen sürgős)"
                          type: string
                        deviceMac:
                          description: a mérést végző eszköz Mac azonosítója
                          type: string
                        collectorMac:
                          description: a mérési adatot továbbító lokális gyűjtő eszköz Mac azonosítója
                          type: string
                        analyseCount:
                          description: a mérési adatra vonatkozó kiértékelések szám
                          type: integer
                        realizerName:
                          type: string
                          description: A csoportos mérést végző személy neve
                        teamName:
                          type: string
                          description: Csoportos mérés esetén a mérési csoport (team) megnevezése
    OkResp:
      description: Sikeres művelet
      content:
        application/json:
          schema:
            description: OK - sikeres
            type: object
            properties:
              message:
                type: string
                description: az ügyfél számára megjeleníthető üzenet szövege
            required:
              - message
    QrCodeResp:
      description: QR kód lekérés válasz
      content:
        'application/json':
          schema:
            type: object
            properties:
              QRcode:
                type: string
                format: byte
                description: A QR code base64 kódolt formában
            required:
              - QRcode
    RenewResp:
      description: Token megújítás válasz.
      content:
        application/json:
          schema:
            type: object
            properties:
              accessToken:
                type: string
              refreshToken:
                type: string
            required:
              - accessToken
              - refreshToken
    SelectListItemResp:
      description: Választható elem (select típusú adatbekéréshez).
      content:
        application/json:
          schema:
            type: object
            properties:
              value:
                type: integer
              label:
                type: string
            required:
              - value
              - label
    SystemTermsResp:
      description: A rendszerben elfogadható vagy elfogadandó szabályzatok listája.
      content:
        'application/json':
          schema:
            type: object
            properties:
              terms:
                description: a lehetséges szabályzatok
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Term"
                    - properties:
                        path:
                          description: a dokumentum url elérési útvonala
                          type: string
    UserMainResp:
      description: User entitás fő adatai válasz objektum.
      content:
        application/json:
          schema:
            description: A felhasználói adatok közül csak a legfontosabbak kerülnek visszaadásra (userId, firstName, lastName, language, userStatus), hogy listában megjeleníthető legyen, de bizalmas adatok ne közlekedjenek.
            type: object
            properties:
              userId:
                type: integer
              firstName:
                type: string
              lastName:
                type: string
              birthYear:
                type: integer
              socialSecurityNumber:
                type: string
            required:
              - userId
              - firstName
              - lastName
              - birthYear
    UserResp:
      description: User entitás válasz objektum.
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                $ref: '#/components/schemas/User'
            required:
              - user
    UserTermStatusResp:
      description: Az adott ügyfél által elfogadott (ill. visszavont), vagy elfogadandó szabályzatok listája.
      content:
        'application/json':
          schema:
            type: object
            properties:
              isAcceptable:
                description: van-e az ügyféllel elfogadtatandó vagy általa el nem fogadott friss szabályzat
                type: boolean
              terms:
                description: a szabályzatok állapota az ügyfél szempontjából
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Term"
                    - properties:
                        path:
                          description: a dokumentum url elérési útvonala
                          type: string
                        accepted:
                          description: elfogadott állapotú
                          type: boolean
                        acceptDate:
                          description: az elfogadás időpontja
                          type: string
                          format: date-time
                        revokeDate:
                          description: az elfogadás visszavonásának időpontja
                          type: string
                          format: date-time
  requestBodies:
    AssignQrCodeReq:
      description: QR kód alapú csatolás kérés.
      content:
        'application/json':
          schema:
            type: object
            properties:
              qrCode:
                type: string
                format: byte
                description: A QR code base64 formátumban kódolva
              userIdx:
                type: integer
                description: Hányadik eszköz pozícióba kell csatolni a felhasználót (alapértelmezetten a következő üresbe) - csatolás törlésekor üresen hagyandó
            required:
              - qrCode
    ChangePasswordReq:
      description: Jelszóváltoztatás kérés.
      content:
        'application/json':
          schema:
            type: object
            properties:
              oldPassword:
                type: string
              newPassword:
                type: string
            required:
              - oldPassword
              - newPassword
    DoctorRegistrationReq:
      description: Az orvos regisztrációkor használt kérés, amiben a szokásos ügyfél regisztrációs adatokon kívül benne lehet az intézmény neve és címe is.
      content:
        'application/json':
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: Az ügyfél keresztneve
              lastName:
                type: string
                description: Az ügyfél családi neve
              email:
                type: string
                description: A felhasználó (elsődleges) mail címe, ami a rendszer szempontjából a bejelentkezési nevet is jelenti.
              language:
                type: string
                description: Nyelv (hu, en, ch, ...)
              phoneNumber:
                type: string
                description: Max. 18, csak szám.
              postalCode:
                type: string
              city:
                type: string
                description: Min. 1, max. 30 karakter.
              address:
                type: string
                description: Cím (Utca, házszám, emelet, ajtó, ...); egy mezőben.<br>Min. 1, max. 30 karakter.<br>
              socialSecurityNumber:
                type: string
                description: A társadalombiztosítási azonosító (TAJ szám)
              identityType:
                type: string
                description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány típusa (pl. IDENTITYCARD - személyi igazolvány, PASSPORT - útlevél, EUHELTHCARD - EU egészségügyi kártya)
              identityNumber:
                type: string
                description: Ha az ügyfélnek nincs TAJszáma, akkor az egyéb azonosító okmány (pl. személyi igazolvány, útlevél, EU egészségügyi kártya) azonosító száma.
              birthYear:
                type: integer
                format: int32
                description: A személy természetes azonosítói közül a születési dátumból az év
              birthPlace:
                type: string
                description: Születési hely
              motherName:
                type: string
              gender:
                type: string
              password:
                type: string
                description: A felhasználó jelszava
              acceptTermIds:
                description: A felhasználó által elfogadott szabályzatok azonosítói
                type: array
                items:
                  type: integer
              instituteName:
                type: string
                description: Az orvos egészségügyi intézményének neve
              instituteAddress:
                type: string
                description: Az orvos egészségügyi intézményének címe
              stamp:
                type: string
                description: Az orvos EESZT-beli pecsétszáma (Oxxxxx-ből az xxxxx-es rész)
            required:
              - firstName
              - lastName
              - email
              - language
              - password
              - acceptTermIds
              - instituteName
              - instituteAddress
    ForgotPasswordReq:
      description: Elfelejtett jelszó újraküldés kérés
      content:
        'application/json':
          schema:
            type: object
            properties:
              email:
                type: string
              language:
                type: string
                description: Nyelv (hu, en, ch, ...)
            required:
              - email
    InviteGeneralDoctorReq:
      description: A felhasználói regisztrációkor használt kérés, amiben benne van a jelszó is és az ügyfél által elfogadott szabályzatok (ÁSZF, EULA) azonosítója is.
      content:
        'application/json':
          schema:
            type: object
            properties:
              email:
                type: string
                description: A meghívott kezelőorvos mail címe
              firstName:
                description: A meghívott kezelőorvos keresztneve
                type: string
              lastName:
                description: A meghívott kezelőorvos vezetékneve
                type: string
              comment:
                description: A meghívott kezelőorvos ügyfél szerinti elnevezése
                type: string
            required:
              - firstName
              - lastName
              - email
    InviteTeamUserRegistrationReq:
      description: A csoportba (team-be) sorolt felhasználói előregisztrációkor használt kérés.
      content:
        'application/json':
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/User"
              - properties:
                  password:
                    type: string
                    description: A felhasználó jelszava
                  acceptTermIds:
                    description: A felhasználó által elfogadott szabályzatok
                    type: array
                    items:
                      type: integer
                  teamCode:
                    description: Melyik team-be (csoportba) kerüljön bele az ügyfél (pl. GROUP_OKFO_PATIENT)
                    type: string
                  teamRole:
                    description: A team-en belül milyen szerepkörbe (BOSS, LEADER, MEMBER) kerüljön a felhasználó. Ha nincs kitöltve, akkor egyszerű csoport tag lesz.
                    type: string
                  qrOnly:
                    description: Ha értéke true, akkor nem lesz létrehozva a felhasználó, hanem csak a kapott adatok alapján a páciens QR kódját generálja le a rendszer. Alapértelmezésben az értéke false, azaz a páciens létrehozás is megtörténik.
                    type: boolean
                  comment:
                    type: string
                    description: Megjegyzés az adott user-team szerepkör kapcsolathoz
            required:
              - firstName
              - lastName
              - email
              - language
              - postalCode
              - city
              - address
              - birthYear
              - birthMonth
              - birthDay
              - birthPlace
              - motherName
              - gender
              - password
              - acceptTermIds
              - teamCode
    InviteUserRegistrationReq:
      description: A felhasználói előregisztrációkor használt kérés, amiben benne van a jelszó is és az ügyfél által elfogadott szabályzatok (ÁSZF, EULA) azonosítója is.
      content:
        'application/json':
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/User"
              - properties:
                  password:
                    type: string
                    description: A felhasználó jelszava
                  acceptTermIds:
                    description: A felhasználó által elfogadott szabályzatok
                    type: array
                    items:
                      type: integer
                  groupCode:
                    description: Melyik csoportba kerüljön bele az ügyfél (pl. GROUP_OKFO_PATIENT)
                    type: string
            required:
              - firstName
              - lastName
              - email
              - language
              - postalCode
              - city
              - address
              - birthYear
              - birthMonth
              - birthDay
              - birthPlace
              - motherName
              - gender
              - password
              - acceptTermIds
              - groupCode
    LoginReq:
      description: Bejelentkezés kérés adatok. A loginName kötelező, mellé vagy password vagy loginToken vagy loginCert kötelező!
      content:
        'application/json':
          schema:
            type: object
            properties:
              loginName:
                type: string
                description: Alap esetben a felhasználó mail címét kell tartalmazza, kivéve ha nincs mail elérése, hanem telefonszáma van csak, ahova lehet push üzenetet küldeni (pl. a regisztráció befejezéséhez szükséges aktivációs mail-hez hasonló értesítésként)
              password:
                type: string
              loginCert:
                type: string
              loginToken:
                type: string
              language:
                type: string
              activationCode:
                type: string
                description: Ha van megadva értéke, akkor a tényleges bejelentkezés előtt az adott azonosítójú felhasználó aktiválása is megtörténik, ha még nem aktív a felhasználó státusza és az aktiváló kód megfelelő
            required:
              - loginName
              - password
                loginCert
                loginToken
    MeasurementDataSliceReq:
      description: Mérési adat szelet kérés. (Annyiban különbözik a Measurement Data Req-től, hogy ebben kötelező a sliceIdx mezőt tölteni.)<br>A measurementDataId nem kerül figyelembevételre az /uploadDataSlice esetén, hanem majd a szerver osztja create-kor.<br>De az /addToDataSlice esetében kötelezően töltendő, mégpedig az uploadDataSlice hívás válaszaként visszakapott measurementId értékkel!
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/MeasurementData"
    MeasurementReq:
      description: Mérés felküldés kérés.<br>A measurementId nem kerül figyelembevételre, hanem majd a szerver osztja create-kor.
      content:
        'application/json':
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/Measurement"
              - properties:
                  data:
                    type: string
                    description: A tényleges mérési adat Base64 formában, de csak abban az esetben, ha nem szeletelt az adatküldés - mert szeletelt esetben ez a mező nem definiált, hanem majd az addToDataSLice hívásban kell a mérési adat (szeleteket) küldeni.
                  userIdx:
                    type: integer
                    description: A mérőeszköz szerint hányadik eszköz pozícióban lévő felhasználóra vonatkoznak az adatok
                  deviceMac:
                    type: string
                    description: A mérőeszköz MAC azonosítója
                  collectorMac:
                    type: string
                    description: A mérést továbbító lokális gyűjtő eszköz MAC azonosítója
            required:
              - measurementDate
              - localTransferDate
              - sliceDeltaTime
              - measurementType
              - deviceMac
              - collectorMac
              - userIdx
              - hash
    QrCodeReq:
      description: QR kód alapú adatlekérés
      content:
        'application/json':
          schema:
            type: object
            properties:
              qrCode:
                type: string
                format: byte
                description: A QR code base64 formátumban kódolva
            required:
              - qrCode
    RenewReq:
      description: Token megújítás kérés
      content:
        'application/json':
          schema:
            type: object
            properties:
              refreshToken:
                type: string
            required:
              - refreshToken
    SetAlarmTypeReq:
      description: Riasztási típus be- vagy átállítási kérés.
      content:
        'application/json':
          schema:
            type: object
            properties:
              alarmType:
                type: string
                description: A riasztási állapot kódja (pl. ALARM_NORMAL, ALARM_LOW, ALARM_HIGH, ALARM_URGENT)
              comment:
                type: string
                description: A riasztási állapotot átállító rövid magyarázata, hogy miért kellett átállítani az értéket
            required:
              - alarmType
              - comment
    SetUserTermStatusReq:
      description: Azok a paraméterek, amik mutatják, hogy a kérés alapján mely szabályzatok állapotát kell az adott ügyfélnél elfogadottra ill. visszavontra állítani (ha az még nem az adott állapotú).
      content:
        'application/json':
          schema:
            type: object
            properties:
              acceptTermIds:
                description: mely szabályzatok legyenek elfogadottra állítva az adott ügyfélnél
                type: array
                items:
                  type: integer
              revokeTermIds:
                description: mely szabályzatok legyenek visszavontra állítva az adott ügyfélnél
                type: array
                items:
                  type: integer
            required:
              - acceptTermIds
              - revokeTermIds
    UserRegistrationAndEncOrderReq:
      description: A webshop felőli híváskor a felhasználói regisztráció és megrendeléskor használt kérés, amiben benne van a jelszó is és az ügyfél által elfogadott szabályzatok (ÁSZF, EULA) azonosítója és a megrendelt szolgáltatás csomagra vonatkozó titkosított információk is.
      content:
        'application/json':
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/User"
              - properties:
                  password:
                    type: string
                    description: A felhasználó jelszava
                  acceptTermIds:
                    description: A felhasználó által elfogadott szabályzatok
                    type: array
                    items:
                      type: integer
                  data:
                    type: string
                    description: "A megrendelés adatai titkosított formában (pl. 'devicetype=BT_ROCHE_GLUCOSE&color=none&quantity=2&user=1&validity=3&price=9990' titkosítva)"
                    #properties:
                    #  deviceType:
                    #    type: string
                    #    description: megrendelt mérőeszköz típusa (pl. BT_BERRY_BM1000B)
                    #  deviceColor:
                    #    type: string
                    #    description: megrendelt mérőeszköz(ök) színe - opcionális
                    #  deviceQuantity:
                    #    type: integer
                    #    description: megrendelt mérőeszköz(ök) mennyisége
                    #  userCount:
                    #    type: integer
                    #    description: megrendelt szolgáltatáshoz tartozó user-ek darabszáma
                    #  validity:
                    #    type: integer
                    #    description: megrendelt szolgáltatás hossza hónapokban
                    #  price:
                    #    type: integer
                    #    description: megrendelt szolgáltatás nettó egységára
            required:
              - data
              - firstName
              - lastName
              - email
              - language
              - postalCode
              - city
              - address
              - birthYear
              - birthPlace
              - motherName
              - gender
              - password
              - acceptTermIds
    UserRegistrationAndOrderReq:
      description: A webshop felőli híváskor a felhasználói regisztráció és megrendeléskor használt kérés, amiben benne van a jelszó is és az ügyfél által elfogadott szabályzatok (ÁSZF, EULA) azonosítója és a megrendelt szolgáltatás csomagra vonatkozó információk is.
      content:
        'application/json':
          schema:
            type: object
            properties:
              data:
                allOf:
                  - $ref: "#/components/schemas/User"
                  - properties:
                      password:
                        type: string
                        description: A felhasználó jelszava
                      acceptTermIds:
                        description: A felhasználó által elfogadott szabályzatok
                        type: array
                        items:
                          type: integer
                      deviceType:
                        type: string
                        description: megrendelt mérőeszköz típusa (pl. BT_BERRY_BM1000B)
                      deviceColor:
                        type: string
                        description: megrendelt mérőeszköz(ök) színe
                      deviceQuantity:
                        type: integer
                        description: megrendelt mérőeszköz(ök) mennyisége
                      userCount:
                        type: integer
                        description: megrendelt szolgáltatáshoz tartozó user-ek darabszáma
                      validity:
                        type: integer
                        description: megrendelt szolgáltatás hossza hónapokban
                      price:
                        type: integer
                        description: megrendelt szolgáltatás nettó egységára
            required:
              - data
              - firstName
              - lastName
              - email
              - language
              - postalCode
              - city
              - address
              - birthYear
              - birthPlace
              - motherName
              - gender
              - password
              - acceptTermIds
              - deviceType
              - deviceQuantity
              - userCount
              - validity
              - price
    UserRegistrationReq:
      description: A felhasználói regisztrációkor használt kérés, amiben benne van a jelszó is és az ügyfél által elfogadott szabályzatok (ÁSZF, EULA) azonosítója is.
      content:
        'application/json':
          schema:
            type: object
            allOf:
              - $ref: "#/components/schemas/User"
              - properties:
                  password:
                    type: string
                    description: A felhasználó jelszava
                  acceptTermIds:
                    description: A felhasználó által elfogadott szabályzatok
                    type: array
                    items:
                      type: integer
            required:
              - firstName
              - lastName
              - email
              - language
              - postalCode
              - city
              - address
              - birthYear
              - birthPlace
              - motherName
              - gender
              - password
              - acceptTermIds
    UserReq:
      description: Felhasználó entitás kérés.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/User'
          examples:
            minta:
              value:
                firstName: "Eszter"
                lastName: "Teszt"
                language: ""
                postalCode: 1102
                city: "Budapest"
                address: "Teszt u. 1."
                birthYear: 1990
                birthPlace: "Budapest"
                motherName: "Kovács Aranka"
                gender: "DICT_MALE"
                defaultFeePeriod: 3
  parameters:
    FilterParam:
      description: Filters specify criteria for the returned data set
      example:
        where:
          entityId:
            gt: 0
        limit: 0
        skip: 0
        order:
          - "entityName DESC"
          - "entityId ASC"
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: object
        properties:
          where:
            type: object
            description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
          limit:
            type: integer
            minimum: 0
            description: A limit filter limits the number of records returned to the specified number(or less)
          skip:
            type: integer
            minimum: 0
            description: Omits the specified number of returned records.This is useful, for example, to paginate responses
          order:
            type: string
            description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      style: deepObject
    FilterParamDevice:
      description: Eszközök szűrésekor használatos paraméter
      examples:
        Adott MAC azonosítójú eszköz:
          value:
            where:
              mac: 4043a790-9851-11ea-a079-1dfcb52cfce5
        A 10-es azonosítójú eszköznél nagyobb azonosítójúak:
          value:
            where:
              deviceId:
                gt: 10
            order:
              - "deviceId ASC"
        Minden SPH ekg mérő:
          value:
            where:
              type: PrivatDoktorEKG
        A NetAmbulanciánál levő eszközök:
          value:
            where:
              liableUserId: 3
            order:
              - "deviceId ASC"
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: object
        properties:
          where:
            type: object
            description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
          limit:
            type: integer
            minimum: 0
            description: A limit filter limits the number of records returned to the specified number(or less)
          skip:
            type: integer
            minimum: 0
            description: Omits the specified number of returned records.This is useful, for example, to paginate responses
          order:
            type: string
            description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      style: deepObject
    FilterParamUser:
      description: Ügyfelek szűrésekor használatos paraméter
      examples:
        Vezetéknév töredék szerinti keresés:
          value:
            where:
              lastName:
                like: "%ovacs%"
        Adott nevű ügyfél keresése:
          value:
            where:
              lastName: Kovács
              firstName: Lajos
        A 10-es ügyfél azonosítónál nagyobbak vezetéknév szerint:
          value:
            where:
              userId:
                gt: 10
            order:
              - "userId ASC"
              - "lastName ASC"

      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: object
        properties:
          where:
            type: object
            description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
          limit:
            type: integer
            minimum: 0
            description: A limit filter limits the number of records returned to the specified number(or less)
          skip:
            type: integer
            minimum: 0
            description: Omits the specified number of returned records.This is useful, for example, to paginate responses
          order:
            type: string
            description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      style: deepObject
    FilterParamUserOrder:
      description: Ügyfél megrendelések szűrésekor használatos paraméter
      examples:
        Az 5-ös azonosítójú ügyfél aktív megrendelései:
          value:
            where:
              userId: 5
              orderStatus: DICT_ORDER_ACTIVE
        A 2-es azonosítójú ügyfél 2020.01.01-nél tovább érvényes megrendelései:
          value:
            where:
              userId: 2
              validityDate:
                gte: "2020-01-01T00:00:00.000Z"
            order:
              - "validityDate ASC"
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: object
        properties:
          where:
            type: object
            description: Specifies a set of logical conditions to match, similar to a WHERE clause in a SQL query
          limit:
            type: integer
            minimum: 0
            description: A limit filter limits the number of records returned to the specified number(or less)
          skip:
            type: integer
            minimum: 0
            description: Omits the specified number of returned records.This is useful, for example, to paginate responses
          order:
            type: string
            description: Specifies how to sort the results - ascending(ASC) or descending(DESC) based on the specified property.Eg. 'fieldname1 ASC,fieldname2 DESC'
      style: deepObject
